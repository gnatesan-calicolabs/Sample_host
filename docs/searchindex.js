Search.setIndex({"docnames": ["autoapi/accuracy/index", "autoapi/augmentation/index", "autoapi/blocks/index", "autoapi/dataset/index", "autoapi/emerald/index", "autoapi/first_step_unit_test/index", "autoapi/gene/index", "autoapi/genedata/index", "autoapi/index", "autoapi/layers/index", "autoapi/metrics/index", "autoapi/ops/index", "autoapi/params/index", "autoapi/seqnn/index", "autoapi/seqnn_util/index", "autoapi/setup/index", "autoapi/stream/index", "autoapi/tfrecord_batcher/index", "autoapi/trainer/index", "index"], "filenames": ["autoapi/accuracy/index.rst", "autoapi/augmentation/index.rst", "autoapi/blocks/index.rst", "autoapi/dataset/index.rst", "autoapi/emerald/index.rst", "autoapi/first_step_unit_test/index.rst", "autoapi/gene/index.rst", "autoapi/genedata/index.rst", "autoapi/index.rst", "autoapi/layers/index.rst", "autoapi/metrics/index.rst", "autoapi/ops/index.rst", "autoapi/params/index.rst", "autoapi/seqnn/index.rst", "autoapi/seqnn_util/index.rst", "autoapi/setup/index.rst", "autoapi/stream/index.rst", "autoapi/tfrecord_batcher/index.rst", "autoapi/trainer/index.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">accuracy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">blocks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">emerald</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">first_step_unit_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gene</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">genedata</span></code>", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">params</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">seqnn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">seqnn_util</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">setup</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stream</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tfrecord_batcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trainer</span></code>", "Welcome to Baskerville\u2019s documentation!"], "terms": {"target": [0, 2, 3, 9, 11, 13, 14, 17], "pred": [0, 11, 14], "targets_na": 0, "none": [0, 2, 3, 6, 7, 9, 10, 11, 12, 13, 14, 17, 18], "loss": [0, 10, 18], "target_loss": 0, "pearsonr": [0, 10], "log": [0, 18], "fals": [0, 1, 2, 3, 4, 6, 9, 10, 13, 14, 16, 17, 18], "pseudocount": 0, "1": [0, 2, 3, 4, 8, 9, 10, 11, 14, 17, 18], "clip": [0, 9], "comput": [0, 2, 9, 11, 13, 14, 18], "vector": [0, 9], "r2": [0, 10, 11], "spearmanr": 0, "stochastic_rc": 1, "seq_1hot": [1, 9, 13], "stochast": [1, 9, 18], "revers": [1, 9, 11, 14], "complement": [1, 9, 11, 14], "one": [1, 7, 9, 11, 18], "hot": [1, 9, 11], "encod": [1, 9], "dna": [1, 2, 9, 12, 17], "sequenc": [1, 2, 3, 7, 9, 10, 11, 12, 13, 14, 17], "reverse_pr": 1, "rp_tupl": 1, "shift_sequ": [1, 9], "seq": [1, 9, 11, 14], "shift_amount": [1, 9], "pad_valu": [1, 9], "0": [1, 2, 4, 6, 9, 10, 13, 14, 17, 18], "25": [1, 2], "shift": [1, 9, 14, 17], "left": [1, 9, 14], "right": [1, 9, 14], "arg": [1, 2, 9, 11, 12, 13, 14, 17, 18], "batch_siz": [1, 2, 3, 9, 11, 13, 16, 17], "sequence_length": [1, 17], "sequence_depth": 1, "sign": [1, 9], "amount": 1, "tf": [1, 9, 10, 11, 13, 17, 18], "int32": [1, 9], "int": [1, 9, 14, 18], "valu": [1, 9, 10, 11], "fill": [1, 9], "pad": [1, 2, 9], "primit": [1, 9], "scalar": [1, 9], "tensor": [1, 9, 11, 17, 18], "augment_deterministic_set": 1, "data_op": [1, 11], "augment_rc": 1, "augment_shift": 1, "dict": [1, 14, 17], "kei": 1, "label": [1, 11, 17], "na": [1, 11, 17], "boolean": [1, 2, 18], "list": [1, 7, 9, 11, 12, 14, 17], "return": [1, 2, 6, 7, 9, 11, 12, 13, 14, 17, 18], "data_ops_list": 1, "augment_determinist": 1, "appli": [1, 2, 9, 18], "determinist": 1, "specifi": [1, 11, 13, 14], "paramet": [1, 5, 12, 17, 18], "data": [1, 11, 14, 17, 18], "all": [1, 11, 14, 16, 17], "exist": 1, "transform": [1, 2, 3, 9, 12], "bool": [1, 9, 18], "ad": 1, "augment_deterministic_rc": 1, "data_ops_aug": 1, "op": [1, 8, 14, 19], "augment_stochastic_rc": 1, "augment_stochastic_shift": 1, "input": [1, 2, 3, 9, 11, 12, 13, 14, 17, 18], "size": [1, 9, 12, 17, 18], "length": [1, 2, 9, 10, 11, 12, 14, 17], "depth": 1, "offset": 1, "sampl": [1, 14], "from": [1, 5, 9, 12, 13, 14, 17, 18], "augment_stochast": 1, "whether": [1, 17, 18], "conv_block": 2, "filter": [2, 12], "kernel_s": 2, "activ": [2, 9], "relu": [2, 9], "activation_end": 2, "stride": [2, 12], "dilation_r": 2, "l2_scale": [2, 9], "dropout": [2, 12], "conv_typ": 2, "standard": [2, 9, 12], "pool_siz": [2, 9], "pool_typ": 2, "max": [2, 9, 12], "norm_typ": [2, 9], "bn_momentum": [2, 9], "99": 2, "norm_gamma": 2, "residu": [2, 12], "kernel_initi": 2, "he_norm": [2, 9], "same": [2, 9, 11], "construct": [2, 13, 16], "singl": [2, 18], "convolut": [2, 12, 13], "seq_length": [2, 9, 17], "featur": [2, 9], "conv1d": 2, "gelu": 2, "etc": 2, "dilat": [2, 12], "rate": [2, 9, 12, 18], "l2": 2, "regular": 2, "weight": [2, 9, 11, 13, 18], "probabl": [2, 9], "layer": [2, 8, 12, 13, 14, 17, 19], "type": [2, 13], "connect": [2, 12], "pool": [2, 9, 12, 17], "width": [2, 6, 12, 17], "batch": [2, 11, 13, 14, 17, 18], "normal": [2, 13], "batchnorm": 2, "momentum": [2, 18], "gamma": [2, 9], "default": [2, 12, 18], "accord": [2, 17], "output": [2, 3, 9, 13], "conv_dna": 2, "15": 2, "dropout_residu": 2, "use_bia": 2, "se": 2, "assum": [2, 17], "oper": [2, 9], "conv_nac": 2, "conv_next": 2, "7": 2, "dense_expans": 2, "2": [2, 9, 13], "fpn_unet": 2, "unet_repr": 2, "pyramid": 2, "network": [2, 12], "upsampl": 2, "fpn1_unet": 2, "upsample_unet": 2, "transpos": [2, 9], "tconv_nac": 2, "concat_unet": 2, "kwarg": [2, 10, 13, 18], "conv_block_2d": 2, "128": [2, 3, 6, 16], "ones": 2, "symmetr": [2, 9], "2d": [2, 9], "conv_tower_v1": 2, "filters_init": 2, "filters_mult": 2, "repeat": [2, 17], "reduc": [2, 12], "initi": [2, 9, 12, 17, 18], "multipli": [2, 9], "conv": 2, "repetit": 2, "conv_tow": 2, "filters_end": 2, "divisible_bi": 2, "repr": 2, "end": [2, 6, 17, 18], "round": 2, "divis": 2, "eg": 2, "power": [2, 9, 18], "two": 2, "tower": 2, "conv_tower_nac": 2, "append": 2, "represent": [2, 14], "res_tow": 2, "num_conv": 2, "subsequ": 2, "per": [2, 11, 14], "convnext_tow": 2, "abc": 2, "key_siz": [2, 9], "head": [2, 9], "out_siz": 2, "content_position_bia": [2, 9], "true": [2, 3, 7, 9, 10, 13, 17, 18], "attention_dropout": 2, "05": 2, "position_dropout": 2, "01": 2, "mha_l2_scal": 2, "num_position_featur": [2, 9], "qkv_width": [2, 9], "mha_initi": 2, "transformer_split": 2, "split": 2, "transformer_dens": 2, "dens": [2, 12], "portion": [2, 9], "transformer2": 2, "wise": 2, "befor": [2, 10, 12, 18], "full": 2, "swin_transform": 2, "transformer_tow": 2, "block_typ": 2, "squeeze_excit": 2, "bottleneck_ratio": [2, 9], "8": [2, 9, 13, 17], "addit": [2, 9], "9": [2, 9], "wheeze_excit": 2, "global_context": 2, "dilated_dens": 2, "3": 2, "rate_mult": 2, "dilated_residu": 2, "dilated_residual_nac": 2, "dilated_residual_2d": 2, "exp": [2, 9], "base": [2, 9, 10, 12, 14, 17, 18], "minu": [2, 9], "center_averag": 2, "center": [2, 9, 14], "center_slic": 2, "concat_dist_2d": 2, "concat_posit": 2, "ab": 2, "cropping_2d": 2, "crop": 2, "one_to_two": 2, "mean": [2, 9, 11], "symmetrize_2d": 2, "upper_tri": 2, "diagonal_offset": [2, 9], "factor_invers": 2, "components_fil": 2, "dense_block": 2, "unit": [2, 14], "flatten": [2, 10], "l1_scale": 2, "after": [2, 18], "other": [2, 18], "across": [2, 9, 11, 12, 13, 14], "posit": [2, 9, 13, 14], "axi": [2, 9, 18], "l1": 2, "batch_norm": [2, 13], "dense_nac": 2, "final": [2, 11, 12, 18], "linear": [2, 9, 18], "simpl": 2, "comparison": 2, "average_pool": 2, "average_to_2d": 2, "max_to_2d": 2, "dot_to_2d": 2, "geodot_to_2d": 2, "concat_to_2d": 2, "name_func": 2, "keras_func": 2, "tfr_input": 3, "tfr_output": 3, "file_to_record": 3, "filenam": 3, "seqdataset": [3, 13], "data_dir": 3, "split_label": 3, "shuffle_buff": 3, "seq_length_crop": 3, "mode": [3, 12, 17], "eval": 3, "tfr_pattern": [3, 17], "batches_per_epoch": 3, "distribut": [3, 9], "strategi": [3, 18], "generate_pars": 3, "raw": [3, 17], "make_dataset": [3, 16], "cycle_length": 3, "4": [3, 11, 17], "make": [3, 9, 17], "w": [3, 9], "compute_stat": 3, "iter": [3, 14, 17], "over": [3, 14, 17], "tfrecord": [3, 14, 17], "count": 3, "infer": 3, "seq_depth": [3, 9, 17], "num_target": [3, 10, 11, 13, 17], "numpi": 3, "return_input": 3, "return_output": 3, "step": [3, 13, 18], "target_slic": [3, 13], "dtype": [3, 13, 14], "float16": [3, 13], "convert": [3, 12], "tfr": 3, "arrai": [3, 14], "rnadataset": 3, "1024": 3, "make_pars": 3, "rnadatasetvikram": 3, "rnadatasetv1": 3, "rna_mod": 3, "emeraldvcf": 4, "pop_vcf_stem": 4, "fetch": 4, "chrm": 4, "pos_start": 4, "pos_end": 4, "return_sampl": 4, "query_ld": 4, "snp_id": 4, "po": [4, 6], "ld_t": 4, "return_po": 4, "max_ld_dist": 4, "1000000": 4, "retriev": 4, "snp": 4, "ld": 4, "given": [4, 7, 11, 18], "main": 5, "option": [5, 9, 10, 14, 18], "modifi": 5, "train": [5, 9, 17, 18], "call": [5, 9], "command": 5, "line": 5, "gene_id": [6, 7], "tss_list": 6, "geneseq": [6, 14], "chrom": 6, "start": [6, 11, 18], "gene_nam": 6, "tss": [6, 7, 14], "name": [6, 9, 10, 11, 18], "append_tss": 6, "__str__": 6, "str": [6, 9, 18], "self": [6, 18], "identifi": [6, 7], "gene_seq": [6, 14], "seq_index": 6, "strand": 6, "seq_bin": 6, "pred_buff": 6, "map_tss_gen": 6, "tss_valu": 6, "tss_radiu": [6, 14], "genes_hdf5_fil": 7, "worker_index": 7, "worker": [7, 12], "read_1hot": 7, "read_target": 7, "gene": [7, 8, 14, 19], "subset_gen": 7, "limit": 7, "subset": [7, 14], "contain": [7, 8, 11], "transcript": [7, 14], "tss_id": 7, "wi": 7, "worker_num": 7, "": [7, 10, 14], "share": 7, "__exit__": 7, "thi": [8, 9, 16, 17, 18], "page": [8, 19], "auto": [8, 10], "gener": [8, 13, 14], "document": 8, "setup": [8, 19], "seqnn": [8, 10, 14, 18, 19], "metric": [8, 11, 19], "dataset": [8, 14, 16, 17, 19], "trainer": [8, 19], "block": [8, 12, 13, 19], "param": [8, 13, 17, 18, 19], "tfrecord_batch": [8, 19], "augment": [8, 13, 14, 19], "emerald": [8, 19], "stream": [8, 13, 19], "genedata": [8, 19], "seqnn_util": [8, 19], "accuraci": [8, 14, 19], "first_step_unit_test": [8, 19], "creat": [8, 18], "sphinx": 8, "autoapi": 8, "min_valu": 9, "max_valu": 9, "tensorflow": [9, 10, 14, 18], "kera": [9, 10, 18], "x": [9, 13, 14, 18], "get_config": [9, 18], "scale": 9, "zero": 9, "build": [9, 13, 14], "input_shap": 9, "polyrelu": 9, "softplu": 9, "exp_max": 9, "10000": 9, "centerslic": 9, "centeraverag": 9, "lengthaverag": 9, "rope": 9, "embed": 9, "hua": 9, "et": 9, "al": 9, "qualiti": 9, "time": [9, 14, 18], "_prepend_dim": 9, "num_dim": 9, "positional_features_central_mask": 9, "feature_s": 9, "us": [9, 11, 14, 16, 17, 18], "central": 9, "mask": 9, "allow": 9, "onli": 9, "gamma_pdf": 9, "concentr": 9, "p": [9, 12, 14], "positional_features_gamma": 9, "bin_siz": 9, "stddev": 9, "start_mean": 9, "get_positional_feature_funct": 9, "positional_features_al": 9, "feature_funct": 9, "rel": 9, "each": [9, 11, 14, 17, 18], "provid": [9, 14], "fraction": 9, "up": 9, "total": 9, "arbitrari": [9, 11], "shape": [9, 11], "number": [9, 12, 14, 17, 18], "basi": 9, "denot": 9, "characterist": 9, "individu": 9, "can": 9, "i": [9, 10, 11, 14, 16, 18], "requir": [9, 12], "sinc": 9, "parametr": 9, "should": [9, 17], "independ": 9, "while": [9, 18], "could": 9, "still": 9, "bin": [9, 14], "partit": 9, "absolut": 9, "genom": [9, 17, 18], "differ": [9, 18], "take": [9, 17, 18], "argument": [9, 18], "If": [9, 11, 18], "result": [9, 10, 12], "e": [9, 12], "matter": 9, "both": 9, "asymmetr": 9, "version": 9, "positional_featur": 9, "relative_shift": 9, "logit": 9, "like": 9, "transformerxl": 9, "multiheadattent": 9, "value_s": 9, "attention_dropout_r": 9, "relative_position_symmetr": 9, "relative_position_funct": 9, "positional_dropout_r": 9, "zero_initi": 9, "transpose_strid": 9, "gate": 9, "multi": [9, 11], "attent": 9, "_multihead_output": 9, "linear_lay": 9, "multihead": 9, "wheezeexcit": 9, "squeezeexcit": 9, "globalcontext": 9, "softmaxpool1d": 9, "per_channel": 9, "init_gain": 9, "float": [9, 14, 18], "concatposit": 9, "concaten": 9, "1d": 9, "onetotwo": 9, "j": [9, 17], "oned": 9, "averageto2d": 9, "averag": [9, 14], "maxto2d": 9, "dotto2d": 9, "geodotto2d": 9, "concatto2d": 9, "concatdist2d": 9, "pairwis": 9, "distanc": 9, "matrix": 9, "uppertri": 9, "unrol": 9, "its": 9, "upper": 9, "triangular": 9, "symmetrize2d": 9, "enforc": [9, 17], "symmetri": 9, "ensemblereversecompl": 9, "expand": 9, "includ": 9, "seqs_1hot": [9, 16], "stochasticreversecompl": 9, "switchrevers": 9, "strand_pair": 9, "predict": [9, 11, 12, 13, 14, 16], "were": 9, "x_revers": 9, "switchreversetriu": 9, "ensembleshift": 9, "uniform": 9, "stochasticshift": 9, "shift_max": 9, "factorinvers": 9, "components_npi": 9, "invers": 9, "factor": 9, "current": [9, 13], "verbos": [9, 12, 16], "regress": [10, 18], "mean_squared_error_udot": 10, "y_true": 10, "y_pred": 10, "udot_weight": 10, "meansquarederrorudot": 10, "reduct": [10, 18], "losses_util": 10, "reductionv2": 10, "mse_udot": 10, "python": [10, 18], "lossfunctionwrapp": 10, "poisson_kl": 10, "kl_weight": 10, "epsilon": 10, "001": [10, 18], "poissonkl": 10, "poisson_multinomi": 10, "total_weight": [10, 18], "1e": 10, "06": 10, "rescal": 10, "poissonmultinomi": 10, "seqauc": 10, "curv": [10, 18], "roc": [10, 18], "summar": 10, "auc": 10, "update_st": 10, "updat": [10, 11], "interpolate_pr_auc": 10, "add": [10, 12], "remov": 10, "summari": 10, "It": 10, "clear": 10, "why": 10, "metrics_util": 10, "aren": [10, 14], "t": [10, 11, 14, 17, 18], "work": 10, "26": [10, 18], "m": 10, "hack": 10, "solut": 10, "compar": [10, 18], "instead": 10, "sample_weight": 10, "reset_st": 10, "adjust_max": 11, "stop": [11, 18], "start_valu": 11, "stop_valu": 11, "reverse_complement_transform": 11, "onehot": 11, "correspond": 11, "reverse_compl": 11, "input_seq": 11, "code": [11, 14], "nucleotid": 11, "seq_len": 11, "dimens": 11, "A": [11, 17, 18], "simpli": 11, "varianc": [11, 14], "entri": [11, 18], "index": [11, 14, 19], "follow": [11, 17], "api": [11, 17, 19], "an": [11, 12, 14, 17], "idempot": 11, "when": [11, 18], "variance_valu": 11, "whose": 11, "update_op": 11, "non": 11, "r2_metric": 11, "statist": 11, "instanc": [11, 14, 17], "new": 11, "_per_target_mean": 11, "either": 11, "broadcast": 11, "string": [11, 17, 18], "tupl": [11, 14], "compat": [11, 17], "The": [11, 17, 18], "value_op": 11, "ha": [11, 17, 18], "_per_target_vari": 11, "per_target_r2": 11, "distinct": 11, "r2_averaged_over_all_prediction_task": 11, "task": 11, "layer_extend": 12, "var": [12, 18], "process": 12, "job": [12, 17], "extend": 12, "proper": 12, "read_job_param": [12, 17], "job_fil": 12, "read": [12, 18], "text": 12, "tabl": 12, "make_hparam": 12, "num_worker_replica": 12, "num_ps_replica": 12, "pars": [12, 17, 18], "object": [12, 14, 16, 17], "dictionari": [12, 17], "see": [12, 17, 18], "basenji": [12, 17], "googl": [12, 17], "more": [12, 14, 17, 18], "inform": [12, 17], "replica": 12, "g": [12, 14], "http": [12, 14, 18], "google3": 12, "learn": [12, 18], "brain": [12, 17], "contrib": 12, "borg": 12, "l": [12, 14], "112": 12, "rcl": 12, "174372550": 12, "113": 12, "add_hparams_cnn": 12, "cnn": 12, "hyper": [12, 18], "definit": 12, "add_hparams_dr": 12, "add_cnn_param": 12, "defin": [12, 18], "add_cnn_params_cnn": 12, "add_cnn_params_dens": 12, "resnet": 12, "consist": 12, "four": 12, "phase": 12, "interact": 12, "directli": 12, "propag": 12, "convparam": 12, "add_cnn_params_dr": 12, "collect": 12, "namedtupl": 12, "filter_s": 12, "skip_lay": 12, "concat": 12, "preced": 12, "set_default": 13, "build_block": 13, "block_param": 13, "build_model": 13, "save_repr": 13, "build_emb": 13, "conv_layer_i": 13, "build_ensembl": 13, "ensemble_rc": 13, "ensemble_shift": [13, 14], "ensembl": [13, 14], "model": [13, 14, 16, 18], "build_sad": 13, "build_slic": 13, "target_sum": 13, "downcast": 13, "head_i": 13, "evalu": 13, "seq_data": 13, "loss_label": [13, 18], "poisson": [13, 18], "loss_fn": [13, 18], "get_bn_lay": 13, "bn_layer_i": 13, "get_conv_lay": 13, "get_dense_lay": 13, "layer_i": 13, "get_conv_weight": 13, "kernel": 13, "gradient": [13, 14, 16, 18], "pos_slic": 13, "gradients_func": 13, "__call__": [13, 18], "float32": [13, 14, 17], "restor": 13, "model_fil": 13, "trunk": 13, "save": [13, 14], "util": 14, "test": [14, 17], "interract": 14, "seqnnmodel": 14, "build_grad": 14, "sum": 14, "respect": 14, "some": 14, "set": [14, 17, 18], "In": 14, "build_grads_gen": 14, "specif": [14, 18], "which": [14, 17], "extract": 14, "sess": [14, 16, 17], "batcher": [14, 17], "rc": [14, 17], "mc_n": 14, "return_al": 14, "session": 14, "forward": 14, "out": 14, "layer_grad": 14, "u": 14, "layer_repr": 14, "_gradients_ensembl": 14, "fd": 14, "xb": 14, "ensemble_fwdrc": 14, "return_var": 14, "feed": 14, "gradients_gen": 14, "tsss": 14, "note": [14, 17], "implement": 14, "yet": 14, "thei": 14, "re": 14, "trickier": 14, "here": 14, "becaus": 14, "d": 14, "need": 14, "match": 14, "flip": 14, "hidden": 14, "test_batch": 14, "unbuff": 14, "_predict_ensembl": 14, "ds_index": 14, "target_index": 14, "embed_penultim": 14, "predict_h5_manu": 14, "down_sampl": 14, "mont": 14, "carlo": 14, "estim": [14, 17], "consid": [14, 18], "uniformli": 14, "space": 14, "resolut": 14, "predict_h5": 14, "preidction": 14, "hdf5": 14, "retyrn": 14, "predict_tfr": 14, "down": 14, "predict_gen": 14, "test_batches_p": 14, "256": 14, "cover": 14, "mark": 14, "radiu": 14, "quantifi": 14, "transcript_pr": 14, "test_tfr": 14, "handle_ph": 14, "where": [14, 17, 18], "load": [14, 17], "queue": 14, "handl": 14, "placehold": 14, "acc": 14, "test_h5": 14, "test_h5_manu": 14, "running_mean": 14, "u_k1": 14, "x_k": 14, "k": 14, "running_varsum": 14, "v_k1": 14, "m_k1": 14, "m_k": 14, "run": [14, 18], "numer": 14, "ref": 14, "www": [14, 18], "johndcook": 14, "com": 14, "blog": [14, 18], "standard_devi": 14, "readm": 15, "licens": 15, "predstream": 16, "seqs_gen": 16, "stream_seq": 16, "interfac": [16, 17], "acquir": 16, "via": 16, "buffer": 16, "mechan": 16, "rather": [16, 17], "than": [16, 17, 18], "get": [16, 17], "them": 16, "onc": 16, "excess": 16, "memori": 16, "__getitem__": 16, "chunk": 16, "predstreamfe": 16, "stream_length": 16, "predgradstream": 16, "shuffle_buffer_depth_per_fil": 17, "32": 17, "num_files_to_parallel_interleav": 17, "tfrecord_dataset": 17, "tfr_data_files_pattern": 17, "target_length": 17, "use_static_batch_s": 17, "format": 17, "exampl": 17, "zlib": 17, "compress": 17, "field": 17, "fixedlenfeatur": 17, "pattern": 17, "potenti": 17, "glob": 17, "file": 17, "gfile": 17, "vocabulari": 17, "locat": 17, "modekei": 17, "have": 17, "fix": 17, "we": 17, "don": 17, "pass": 17, "drop": [17, 18], "few": 17, "doesn": 17, "divid": 17, "caus": 17, "except": [17, 18], "produc": 17, "tfrecord_dataset_multi": 17, "genome_target": 17, "tfr_data_file_pattern": 17, "make_data_op": 17, "files_pattern": 17, "your": 17, "path": 17, "For": 17, "cn": 17, "sandbox": 17, "home": 17, "mlbileschi": 17, "num_possible_augment": 17, "augment_with_compl": 17, "shift_augment_offset": 17, "make_input_fn": 17, "data_file_pattern": 17, "input_fn": 17, "experi": 17, "order_tfrecord": 17, "check": 17, "fit": [17, 18], "my": 17, "success": 17, "els": 17, "empti": 17, "tfrecordbatch": 17, "load_target": 17, "naf": 17, "64": 17, "pool_width": 17, "shuffl": 17, "mani": 17, "ar": 17, "unus": 17, "next": 17, "reset": 17, "parse_loss": 18, "keras_fit": 18, "spec_weight": 18, "select": 18, "meansquarederror": 18, "binarycrossentrupi": 18, "variou": 18, "possibl": 18, "org": 18, "api_doc": 18, "indic": 18, "chosen": 18, "determin": 18, "secondari": 18, "abov": 18, "term": 18, "without": 18, "multinomi": 18, "train_data": 18, "eval_data": 18, "out_dir": 18, "num_gpu": 18, "assign": 18, "variabl": 18, "local": 18, "compil": 18, "seqnn_model": 18, "diagnost": 18, "abil": 18, "binarycrossentropi": 18, "pr": 18, "place": 18, "pearson": 18, "correl": 18, "associ": 18, "fit_kera": 18, "architectur": 18, "fit2": 18, "unit_test_bool": 18, "mous": 18, "human": 18, "against": 18, "fit_tap": 18, "similar": 18, "structur": 18, "tape": 18, "refer": [18, 19], "gpu": 18, "usag": 18, "make_optim": 18, "accept": 18, "optim": 18, "choos": 18, "algorithm": 18, "grad": 18, "descent": 18, "small": 18, "incriment": 18, "goe": 18, "constant": 18, "until": 18, "compute_norm": 18, "keepdim": 18, "euclidean": 18, "norm": 18, "unitwise_norm": 18, "previou": 18, "case": 18, "adaptive_clip_grad": 18, "clip_factor": 18, "ep": 18, "edit": 18, "earlystoppingmin": 18, "min_epoch": 18, "callback": 18, "earlystop": 18, "monitor": 18, "quantiti": 18, "improv": 18, "minimum": 18, "epoch": 18, "on_epoch_end": 18, "cyclical1learningr": 18, "initial_learning_r": 18, "maximal_learning_r": 18, "final_learning_r": 18, "step_siz": 18, "schedul": 18, "learningrateschedul": 18, "cyclic": 18, "yashuseth": 18, "2018": 18, "11": 18, "tune": 18, "best": 18, "practic": 18, "decai": 18, "warmup": 18, "warmup_step": 18, "decay_schedul": 18, "h": 18, "huggingfac": 18, "so": 18, "callabl": 18, "rest": 18, "part": 18, "polynomi": 18, "prefix": 18, "dure": 18, "safe_next": 18, "data_it": 18, "retri": 18, "5": 18, "sleep": 18, "10": 18, "modul": 19, "search": 19}, "objects": {"": [[0, 0, 0, "-", "accuracy"], [1, 0, 0, "-", "augmentation"], [2, 0, 0, "-", "blocks"], [3, 0, 0, "-", "dataset"], [4, 0, 0, "-", "emerald"], [5, 0, 0, "-", "first_step_unit_test"], [6, 0, 0, "-", "gene"], [7, 0, 0, "-", "genedata"], [9, 0, 0, "-", "layers"], [10, 0, 0, "-", "metrics"], [11, 0, 0, "-", "ops"], [12, 0, 0, "-", "params"], [13, 0, 0, "-", "seqnn"], [14, 0, 0, "-", "seqnn_util"], [15, 0, 0, "-", "setup"], [16, 0, 0, "-", "stream"], [17, 0, 0, "-", "tfrecord_batcher"], [18, 0, 0, "-", "trainer"]], "accuracy": [[0, 1, 1, "", "Accuracy"]], "accuracy.Accuracy": [[0, 2, 1, "", "pearsonr"], [0, 2, 1, "", "r2"], [0, 2, 1, "", "spearmanr"]], "augmentation": [[1, 3, 1, "", "augment_deterministic"], [1, 3, 1, "", "augment_deterministic_rc"], [1, 3, 1, "", "augment_deterministic_set"], [1, 3, 1, "", "augment_stochastic"], [1, 3, 1, "", "augment_stochastic_rc"], [1, 3, 1, "", "augment_stochastic_shifts"], [1, 3, 1, "", "reverse_preds"], [1, 3, 1, "", "shift_sequence"], [1, 3, 1, "", "stochastic_rc"]], "blocks": [[2, 3, 1, "", "average_pooling"], [2, 3, 1, "", "average_to_2d"], [2, 3, 1, "", "center_average"], [2, 3, 1, "", "center_slice"], [2, 3, 1, "", "concat_dist_2d"], [2, 3, 1, "", "concat_position"], [2, 3, 1, "", "concat_to_2d"], [2, 3, 1, "", "concat_unet"], [2, 3, 1, "", "conv_block"], [2, 3, 1, "", "conv_block_2d"], [2, 3, 1, "", "conv_dna"], [2, 3, 1, "", "conv_nac"], [2, 3, 1, "", "conv_next"], [2, 3, 1, "", "conv_tower"], [2, 3, 1, "", "conv_tower_nac"], [2, 3, 1, "", "conv_tower_v1"], [2, 3, 1, "", "convnext_tower"], [2, 3, 1, "", "cropping_2d"], [2, 3, 1, "", "dense"], [2, 3, 1, "", "dense_block"], [2, 3, 1, "", "dense_nac"], [2, 3, 1, "", "dilated_dense"], [2, 3, 1, "", "dilated_residual"], [2, 3, 1, "", "dilated_residual_2d"], [2, 3, 1, "", "dilated_residual_nac"], [2, 3, 1, "", "dot_to_2d"], [2, 3, 1, "", "exp"], [2, 3, 1, "", "factor_inverse"], [2, 3, 1, "", "final"], [2, 3, 1, "", "fpn1_unet"], [2, 3, 1, "", "fpn_unet"], [2, 3, 1, "", "geodot_to_2d"], [2, 3, 1, "", "global_context"], [2, 4, 1, "", "keras_func"], [2, 3, 1, "", "max_to_2d"], [2, 4, 1, "", "name_func"], [2, 3, 1, "", "one_to_two"], [2, 3, 1, "", "res_tower"], [2, 3, 1, "", "squeeze_excite"], [2, 3, 1, "", "swin_transformer"], [2, 3, 1, "", "symmetrize_2d"], [2, 3, 1, "", "tconv_nac"], [2, 3, 1, "", "transformer"], [2, 3, 1, "", "transformer2"], [2, 3, 1, "", "transformer_dense"], [2, 3, 1, "", "transformer_split"], [2, 3, 1, "", "transformer_tower"], [2, 3, 1, "", "upper_tri"], [2, 3, 1, "", "upsample_unet"], [2, 3, 1, "", "wheeze_excite"]], "dataset": [[3, 1, 1, "id0", "RnaDataset"], [3, 1, 1, "", "RnaDatasetV1"], [3, 1, 1, "", "RnaDatasetVikram"], [3, 1, 1, "", "SeqDataset"], [3, 4, 1, "", "TFR_INPUT"], [3, 4, 1, "", "TFR_OUTPUT"], [3, 3, 1, "", "file_to_records"]], "dataset.RnaDataset": [[3, 2, 1, "id1", "batches_per_epoch"], [3, 2, 1, "id3", "make_dataset"], [3, 2, 1, "id2", "make_parser"], [3, 2, 1, "id4", "numpy"]], "dataset.RnaDatasetV1": [[3, 2, 1, "", "batches_per_epoch"], [3, 2, 1, "", "make_dataset"], [3, 2, 1, "", "make_parser"]], "dataset.RnaDatasetVikram": [[3, 2, 1, "", "batches_per_epoch"], [3, 2, 1, "", "make_dataset"], [3, 2, 1, "", "make_parser"]], "dataset.SeqDataset": [[3, 2, 1, "", "batches_per_epoch"], [3, 2, 1, "", "compute_stats"], [3, 2, 1, "", "distribute"], [3, 2, 1, "", "generate_parser"], [3, 2, 1, "", "make_dataset"], [3, 2, 1, "", "numpy"]], "emerald": [[4, 1, 1, "", "EmeraldVCF"]], "emerald.EmeraldVCF": [[4, 2, 1, "", "fetch"], [4, 2, 1, "", "query_ld"]], "first_step_unit_test": [[5, 3, 1, "", "main"]], "gene": [[6, 1, 1, "", "Gene"], [6, 1, 1, "", "GeneSeq"], [6, 1, 1, "", "TSS"], [6, 3, 1, "", "map_tss_genes"]], "gene.GeneSeq": [[6, 2, 1, "", "__str__"], [6, 2, 1, "", "append_tss"], [6, 2, 1, "", "gene_names"]], "gene.TSS": [[6, 2, 1, "", "__str__"], [6, 2, 1, "", "seq_bin"]], "genedata": [[7, 1, 1, "", "GeneData"]], "genedata.GeneData": [[7, 2, 1, "", "__exit__"], [7, 2, 1, "", "gene_ids"], [7, 2, 1, "", "subset_genes"], [7, 2, 1, "", "tss_ids"], [7, 2, 1, "", "worker"]], "layers": [[9, 1, 1, "", "AverageTo2D"], [9, 1, 1, "", "CenterAverage"], [9, 1, 1, "", "CenterSlice"], [9, 1, 1, "", "Clip"], [9, 1, 1, "", "ConcatDist2D"], [9, 1, 1, "", "ConcatPosition"], [9, 1, 1, "", "ConcatTo2D"], [9, 1, 1, "", "DotTo2D"], [9, 1, 1, "", "EnsembleReverseComplement"], [9, 1, 1, "", "EnsembleShift"], [9, 1, 1, "", "Exp"], [9, 1, 1, "", "FactorInverse"], [9, 1, 1, "", "GeoDotTo2D"], [9, 1, 1, "", "GlobalContext"], [9, 1, 1, "", "LengthAverage"], [9, 1, 1, "", "MaxTo2D"], [9, 1, 1, "", "MultiheadAttention"], [9, 1, 1, "", "OneToTwo"], [9, 1, 1, "", "PolyReLU"], [9, 1, 1, "", "Scale"], [9, 1, 1, "", "SoftmaxPool1D"], [9, 1, 1, "", "Softplus"], [9, 1, 1, "", "SqueezeExcite"], [9, 1, 1, "", "StochasticReverseComplement"], [9, 1, 1, "", "StochasticShift"], [9, 1, 1, "", "SwitchReverse"], [9, 1, 1, "", "SwitchReverseTriu"], [9, 1, 1, "", "Symmetrize2D"], [9, 1, 1, "", "UpperTri"], [9, 1, 1, "", "WheezeExcite"], [9, 3, 1, "", "_prepend_dims"], [9, 3, 1, "", "activate"], [9, 3, 1, "", "gamma_pdf"], [9, 3, 1, "", "get_positional_feature_function"], [9, 3, 1, "", "positional_features"], [9, 3, 1, "", "positional_features_all"], [9, 3, 1, "", "positional_features_central_mask"], [9, 3, 1, "", "positional_features_gamma"], [9, 3, 1, "", "relative_shift"], [9, 3, 1, "", "rope"], [9, 3, 1, "", "shift_sequence"]], "layers.AverageTo2D": [[9, 2, 1, "", "call"]], "layers.CenterAverage": [[9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.CenterSlice": [[9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.Clip": [[9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.ConcatDist2D": [[9, 2, 1, "", "call"]], "layers.ConcatPosition": [[9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.ConcatTo2D": [[9, 2, 1, "", "call"]], "layers.DotTo2D": [[9, 2, 1, "", "call"]], "layers.EnsembleReverseComplement": [[9, 2, 1, "", "call"]], "layers.EnsembleShift": [[9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.Exp": [[9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.FactorInverse": [[9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.GeoDotTo2D": [[9, 2, 1, "", "call"]], "layers.GlobalContext": [[9, 2, 1, "", "build"], [9, 2, 1, "", "call"]], "layers.LengthAverage": [[9, 2, 1, "", "call"]], "layers.MaxTo2D": [[9, 2, 1, "", "call"]], "layers.MultiheadAttention": [[9, 2, 1, "", "_multihead_output"], [9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.OneToTwo": [[9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.PolyReLU": [[9, 2, 1, "", "call"]], "layers.Scale": [[9, 2, 1, "", "build"], [9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.SoftmaxPool1D": [[9, 2, 1, "", "build"], [9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.Softplus": [[9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.SqueezeExcite": [[9, 2, 1, "", "build"], [9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.StochasticReverseComplement": [[9, 2, 1, "", "call"]], "layers.StochasticShift": [[9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.SwitchReverse": [[9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.SwitchReverseTriu": [[9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.Symmetrize2D": [[9, 2, 1, "", "call"]], "layers.UpperTri": [[9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "layers.WheezeExcite": [[9, 2, 1, "", "build"], [9, 2, 1, "", "call"], [9, 2, 1, "", "get_config"]], "metrics": [[10, 1, 1, "", "MeanSquaredErrorUDot"], [10, 1, 1, "", "PearsonR"], [10, 1, 1, "", "PoissonKL"], [10, 1, 1, "", "PoissonMultinomial"], [10, 1, 1, "", "R2"], [10, 1, 1, "", "SeqAUC"], [10, 3, 1, "", "mean_squared_error_udot"], [10, 3, 1, "", "poisson_kl"], [10, 3, 1, "", "poisson_multinomial"]], "metrics.PearsonR": [[10, 2, 1, "", "reset_state"], [10, 2, 1, "", "result"], [10, 2, 1, "", "update_state"]], "metrics.R2": [[10, 2, 1, "", "reset_state"], [10, 2, 1, "", "result"], [10, 2, 1, "", "update_state"]], "metrics.SeqAUC": [[10, 2, 1, "", "interpolate_pr_auc"], [10, 2, 1, "", "result"], [10, 2, 1, "", "update_state"]], "ops": [[11, 3, 1, "", "_per_target_mean"], [11, 3, 1, "", "_per_target_variance"], [11, 3, 1, "", "adjust_max"], [11, 3, 1, "", "per_target_r2"], [11, 3, 1, "", "r2_averaged_over_all_prediction_tasks"], [11, 3, 1, "", "r2_metric"], [11, 3, 1, "", "reverse_complement"], [11, 3, 1, "", "reverse_complement_transform"], [11, 3, 1, "", "variance"]], "params": [[12, 1, 1, "", "ConvParams"], [12, 3, 1, "", "add_cnn_params"], [12, 3, 1, "", "add_cnn_params_cnn"], [12, 3, 1, "", "add_cnn_params_dense"], [12, 3, 1, "", "add_cnn_params_dres"], [12, 3, 1, "", "add_hparams_cnn"], [12, 3, 1, "", "add_hparams_dres"], [12, 3, 1, "", "layer_extend"], [12, 3, 1, "", "make_hparams"], [12, 3, 1, "", "read_job_params"]], "seqnn": [[13, 1, 1, "", "SeqNN"]], "seqnn.SeqNN": [[13, 2, 1, "", "__call__"], [13, 2, 1, "", "build_block"], [13, 2, 1, "", "build_embed"], [13, 2, 1, "", "build_ensemble"], [13, 2, 1, "", "build_model"], [13, 2, 1, "", "build_sad"], [13, 2, 1, "", "build_slice"], [13, 2, 1, "", "downcast"], [13, 2, 1, "", "evaluate"], [13, 2, 1, "", "get_bn_layer"], [13, 2, 1, "", "get_conv_layer"], [13, 2, 1, "", "get_conv_weights"], [13, 2, 1, "", "get_dense_layer"], [13, 2, 1, "", "gradients"], [13, 2, 1, "", "gradients_func"], [13, 2, 1, "", "num_targets"], [13, 2, 1, "", "predict"], [13, 2, 1, "", "restore"], [13, 2, 1, "", "save"], [13, 2, 1, "", "set_defaults"], [13, 2, 1, "", "step"]], "seqnn_util": [[14, 1, 1, "", "SeqNNModel"]], "seqnn_util.SeqNNModel": [[14, 2, 1, "", "_gradients_ensemble"], [14, 2, 1, "", "_predict_ensemble"], [14, 2, 1, "", "build_grads"], [14, 2, 1, "", "build_grads_genes"], [14, 2, 1, "", "gradients"], [14, 2, 1, "", "gradients_genes"], [14, 2, 1, "", "hidden"], [14, 2, 1, "", "predict_genes"], [14, 2, 1, "", "predict_h5"], [14, 2, 1, "", "predict_h5_manual"], [14, 2, 1, "", "predict_tfr"], [14, 2, 1, "", "running_mean"], [14, 2, 1, "", "running_varsum"], [14, 2, 1, "", "test_h5"], [14, 2, 1, "", "test_h5_manual"], [14, 2, 1, "", "test_tfr"]], "setup": [[15, 4, 1, "", "license"], [15, 4, 1, "", "readme"]], "stream": [[16, 1, 1, "", "PredGradStream"], [16, 1, 1, "", "PredStream"], [16, 1, 1, "", "PredStreamFeed"]], "stream.PredGradStream": [[16, 2, 1, "", "__getitem__"]], "stream.PredStream": [[16, 2, 1, "", "__getitem__"], [16, 2, 1, "", "make_dataset"]], "stream.PredStreamFeed": [[16, 2, 1, "", "__getitem__"]], "tfrecord_batcher": [[17, 4, 1, "", "NUM_FILES_TO_PARALLEL_INTERLEAVE"], [17, 4, 1, "", "SHUFFLE_BUFFER_DEPTH_PER_FILE"], [17, 1, 1, "", "TFRecordBatcher"], [17, 3, 1, "", "make_data_ops"], [17, 3, 1, "", "make_input_fn"], [17, 3, 1, "", "num_possible_augmentations"], [17, 3, 1, "", "order_tfrecords"], [17, 3, 1, "", "tfrecord_dataset"], [17, 3, 1, "", "tfrecord_dataset_multi"]], "tfrecord_batcher.TFRecordBatcher": [[17, 2, 1, "", "initialize"], [17, 2, 1, "", "next"], [17, 2, 1, "", "reset"]], "trainer": [[18, 1, 1, "", "Cyclical1LearningRate"], [18, 1, 1, "", "EarlyStoppingMin"], [18, 1, 1, "", "Trainer"], [18, 1, 1, "", "WarmUp"], [18, 3, 1, "", "adaptive_clip_grad"], [18, 3, 1, "", "compute_norm"], [18, 3, 1, "", "parse_loss"], [18, 3, 1, "", "safe_next"], [18, 3, 1, "", "unitwise_norm"]], "trainer.Cyclical1LearningRate": [[18, 2, 1, "", "__call__"], [18, 2, 1, "", "get_config"]], "trainer.EarlyStoppingMin": [[18, 2, 1, "", "on_epoch_end"]], "trainer.Trainer": [[18, 2, 1, "", "compile"], [18, 2, 1, "", "fit2"], [18, 2, 1, "", "fit_keras"], [18, 2, 1, "", "fit_tape"], [18, 2, 1, "", "make_optimizer"]], "trainer.WarmUp": [[18, 2, 1, "", "__call__"], [18, 2, 1, "", "get_config"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"accuraci": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "content": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "class": [0, 3, 4, 6, 7, 9, 10, 12, 13, 14, 16, 17, 18], "augment": 1, "function": [1, 2, 3, 5, 6, 9, 10, 11, 12, 17, 18], "block": 2, "attribut": [2, 3, 17], "dataset": 3, "emerald": 4, "first_step_unit_test": 5, "gene": 6, "genedata": 7, "api": 8, "refer": 8, "layer": 9, "metric": 10, "op": 11, "param": 12, "seqnn": 13, "seqnn_util": 14, "setup": 15, "stream": 16, "tfrecord_batch": 17, "trainer": 18, "welcom": 19, "baskervil": 19, "": 19, "document": 19, "indic": 19, "tabl": 19}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"accuracy": [[0, "module-accuracy"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"]], "Classes": [[0, "classes"], [3, "classes"], [4, "classes"], [6, "classes"], [7, "classes"], [9, "classes"], [10, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"]], "augmentation": [[1, "module-augmentation"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [5, "functions"], [6, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [17, "functions"], [18, "functions"]], "blocks": [[2, "module-blocks"]], "Attributes": [[2, "attributes"], [3, "attributes"], [17, "attributes"]], "dataset": [[3, "module-dataset"]], "emerald": [[4, "module-emerald"]], "first_step_unit_test": [[5, "module-first_step_unit_test"]], "gene": [[6, "module-gene"]], "genedata": [[7, "module-genedata"]], "API Reference": [[8, "api-reference"]], "layers": [[9, "module-layers"]], "metrics": [[10, "module-metrics"]], "ops": [[11, "module-ops"]], "params": [[12, "module-params"]], "seqnn": [[13, "module-seqnn"]], "seqnn_util": [[14, "module-seqnn_util"]], "setup": [[15, "module-setup"]], "stream": [[16, "module-stream"]], "tfrecord_batcher": [[17, "module-tfrecord_batcher"]], "trainer": [[18, "module-trainer"]], "Welcome to Baskerville\u2019s documentation!": [[19, "welcome-to-baskerville-s-documentation"]], "Contents:": [[19, null]], "Indices and tables": [[19, "indices-and-tables"]]}, "indexentries": {"accuracy (class in accuracy)": [[0, "accuracy.Accuracy"]], "accuracy": [[0, "module-accuracy"]], "module": [[0, "module-accuracy"], [1, "module-augmentation"], [2, "module-blocks"], [3, "module-dataset"], [4, "module-emerald"], [5, "module-first_step_unit_test"], [6, "module-gene"], [7, "module-genedata"], [9, "module-layers"], [10, "module-metrics"], [11, "module-ops"], [12, "module-params"], [13, "module-seqnn"], [14, "module-seqnn_util"], [15, "module-setup"], [16, "module-stream"], [17, "module-tfrecord_batcher"], [18, "module-trainer"]], "pearsonr() (accuracy.accuracy method)": [[0, "accuracy.Accuracy.pearsonr"]], "r2() (accuracy.accuracy method)": [[0, "accuracy.Accuracy.r2"]], "spearmanr() (accuracy.accuracy method)": [[0, "accuracy.Accuracy.spearmanr"]], "augment_deterministic() (in module augmentation)": [[1, "augmentation.augment_deterministic"]], "augment_deterministic_rc() (in module augmentation)": [[1, "augmentation.augment_deterministic_rc"]], "augment_deterministic_set() (in module augmentation)": [[1, "augmentation.augment_deterministic_set"]], "augment_stochastic() (in module augmentation)": [[1, "augmentation.augment_stochastic"]], "augment_stochastic_rc() (in module augmentation)": [[1, "augmentation.augment_stochastic_rc"]], "augment_stochastic_shifts() (in module augmentation)": [[1, "augmentation.augment_stochastic_shifts"]], "augmentation": [[1, "module-augmentation"]], "reverse_preds() (in module augmentation)": [[1, "augmentation.reverse_preds"]], "shift_sequence() (in module augmentation)": [[1, "augmentation.shift_sequence"]], "stochastic_rc() (in module augmentation)": [[1, "augmentation.stochastic_rc"]], "average_pooling() (in module blocks)": [[2, "blocks.average_pooling"]], "average_to_2d() (in module blocks)": [[2, "blocks.average_to_2d"]], "blocks": [[2, "module-blocks"]], "center_average() (in module blocks)": [[2, "blocks.center_average"]], "center_slice() (in module blocks)": [[2, "blocks.center_slice"]], "concat_dist_2d() (in module blocks)": [[2, "blocks.concat_dist_2d"]], "concat_position() (in module blocks)": [[2, "blocks.concat_position"]], "concat_to_2d() (in module blocks)": [[2, "blocks.concat_to_2d"]], "concat_unet() (in module blocks)": [[2, "blocks.concat_unet"]], "conv_block() (in module blocks)": [[2, "blocks.conv_block"]], "conv_block_2d() (in module blocks)": [[2, "blocks.conv_block_2d"]], "conv_dna() (in module blocks)": [[2, "blocks.conv_dna"]], "conv_nac() (in module blocks)": [[2, "blocks.conv_nac"]], "conv_next() (in module blocks)": [[2, "blocks.conv_next"]], "conv_tower() (in module blocks)": [[2, "blocks.conv_tower"]], "conv_tower_nac() (in module blocks)": [[2, "blocks.conv_tower_nac"]], "conv_tower_v1() (in module blocks)": [[2, "blocks.conv_tower_v1"]], "convnext_tower() (in module blocks)": [[2, "blocks.convnext_tower"]], "cropping_2d() (in module blocks)": [[2, "blocks.cropping_2d"]], "dense() (in module blocks)": [[2, "blocks.dense"]], "dense_block() (in module blocks)": [[2, "blocks.dense_block"]], "dense_nac() (in module blocks)": [[2, "blocks.dense_nac"]], "dilated_dense() (in module blocks)": [[2, "blocks.dilated_dense"]], "dilated_residual() (in module blocks)": [[2, "blocks.dilated_residual"]], "dilated_residual_2d() (in module blocks)": [[2, "blocks.dilated_residual_2d"]], "dilated_residual_nac() (in module blocks)": [[2, "blocks.dilated_residual_nac"]], "dot_to_2d() (in module blocks)": [[2, "blocks.dot_to_2d"]], "exp() (in module blocks)": [[2, "blocks.exp"]], "factor_inverse() (in module blocks)": [[2, "blocks.factor_inverse"]], "final() (in module blocks)": [[2, "blocks.final"]], "fpn1_unet() (in module blocks)": [[2, "blocks.fpn1_unet"]], "fpn_unet() (in module blocks)": [[2, "blocks.fpn_unet"]], "geodot_to_2d() (in module blocks)": [[2, "blocks.geodot_to_2d"]], "global_context() (in module blocks)": [[2, "blocks.global_context"]], "keras_func (in module blocks)": [[2, "blocks.keras_func"]], "max_to_2d() (in module blocks)": [[2, "blocks.max_to_2d"]], "name_func (in module blocks)": [[2, "blocks.name_func"]], "one_to_two() (in module blocks)": [[2, "blocks.one_to_two"]], "res_tower() (in module blocks)": [[2, "blocks.res_tower"]], "squeeze_excite() (in module blocks)": [[2, "blocks.squeeze_excite"]], "swin_transformer() (in module blocks)": [[2, "blocks.swin_transformer"]], "symmetrize_2d() (in module blocks)": [[2, "blocks.symmetrize_2d"]], "tconv_nac() (in module blocks)": [[2, "blocks.tconv_nac"]], "transformer() (in module blocks)": [[2, "blocks.transformer"]], "transformer2() (in module blocks)": [[2, "blocks.transformer2"]], "transformer_dense() (in module blocks)": [[2, "blocks.transformer_dense"]], "transformer_split() (in module blocks)": [[2, "blocks.transformer_split"]], "transformer_tower() (in module blocks)": [[2, "blocks.transformer_tower"]], "upper_tri() (in module blocks)": [[2, "blocks.upper_tri"]], "upsample_unet() (in module blocks)": [[2, "blocks.upsample_unet"]], "wheeze_excite() (in module blocks)": [[2, "blocks.wheeze_excite"]], "rnadataset (class in dataset)": [[3, "dataset.RnaDataset"], [3, "id0"]], "rnadatasetv1 (class in dataset)": [[3, "dataset.RnaDatasetV1"]], "rnadatasetvikram (class in dataset)": [[3, "dataset.RnaDatasetVikram"]], "seqdataset (class in dataset)": [[3, "dataset.SeqDataset"]], "tfr_input (in module dataset)": [[3, "dataset.TFR_INPUT"]], "tfr_output (in module dataset)": [[3, "dataset.TFR_OUTPUT"]], "batches_per_epoch() (dataset.rnadataset method)": [[3, "dataset.RnaDataset.batches_per_epoch"], [3, "id1"]], "batches_per_epoch() (dataset.rnadatasetv1 method)": [[3, "dataset.RnaDatasetV1.batches_per_epoch"]], "batches_per_epoch() (dataset.rnadatasetvikram method)": [[3, "dataset.RnaDatasetVikram.batches_per_epoch"]], "batches_per_epoch() (dataset.seqdataset method)": [[3, "dataset.SeqDataset.batches_per_epoch"]], "compute_stats() (dataset.seqdataset method)": [[3, "dataset.SeqDataset.compute_stats"]], "dataset": [[3, "module-dataset"]], "distribute() (dataset.seqdataset method)": [[3, "dataset.SeqDataset.distribute"]], "file_to_records() (in module dataset)": [[3, "dataset.file_to_records"]], "generate_parser() (dataset.seqdataset method)": [[3, "dataset.SeqDataset.generate_parser"]], "make_dataset() (dataset.rnadataset method)": [[3, "dataset.RnaDataset.make_dataset"], [3, "id3"]], "make_dataset() (dataset.rnadatasetv1 method)": [[3, "dataset.RnaDatasetV1.make_dataset"]], "make_dataset() (dataset.rnadatasetvikram method)": [[3, "dataset.RnaDatasetVikram.make_dataset"]], "make_dataset() (dataset.seqdataset method)": [[3, "dataset.SeqDataset.make_dataset"]], "make_parser() (dataset.rnadataset method)": [[3, "dataset.RnaDataset.make_parser"], [3, "id2"]], "make_parser() (dataset.rnadatasetv1 method)": [[3, "dataset.RnaDatasetV1.make_parser"]], "make_parser() (dataset.rnadatasetvikram method)": [[3, "dataset.RnaDatasetVikram.make_parser"]], "numpy() (dataset.rnadataset method)": [[3, "dataset.RnaDataset.numpy"], [3, "id4"]], "numpy() (dataset.seqdataset method)": [[3, "dataset.SeqDataset.numpy"]], "emeraldvcf (class in emerald)": [[4, "emerald.EmeraldVCF"]], "emerald": [[4, "module-emerald"]], "fetch() (emerald.emeraldvcf method)": [[4, "emerald.EmeraldVCF.fetch"]], "query_ld() (emerald.emeraldvcf method)": [[4, "emerald.EmeraldVCF.query_ld"]], "first_step_unit_test": [[5, "module-first_step_unit_test"]], "main() (in module first_step_unit_test)": [[5, "first_step_unit_test.main"]], "gene (class in gene)": [[6, "gene.Gene"]], "geneseq (class in gene)": [[6, "gene.GeneSeq"]], "tss (class in gene)": [[6, "gene.TSS"]], "__str__() (gene.geneseq method)": [[6, "gene.GeneSeq.__str__"]], "__str__() (gene.tss method)": [[6, "gene.TSS.__str__"]], "append_tss() (gene.geneseq method)": [[6, "gene.GeneSeq.append_tss"]], "gene": [[6, "module-gene"]], "gene_names() (gene.geneseq method)": [[6, "gene.GeneSeq.gene_names"]], "map_tss_genes() (in module gene)": [[6, "gene.map_tss_genes"]], "seq_bin() (gene.tss method)": [[6, "gene.TSS.seq_bin"]], "genedata (class in genedata)": [[7, "genedata.GeneData"]], "__exit__() (genedata.genedata method)": [[7, "genedata.GeneData.__exit__"]], "gene_ids() (genedata.genedata method)": [[7, "genedata.GeneData.gene_ids"]], "genedata": [[7, "module-genedata"]], "subset_genes() (genedata.genedata method)": [[7, "genedata.GeneData.subset_genes"]], "tss_ids() (genedata.genedata method)": [[7, "genedata.GeneData.tss_ids"]], "worker() (genedata.genedata method)": [[7, "genedata.GeneData.worker"]], "averageto2d (class in layers)": [[9, "layers.AverageTo2D"]], "centeraverage (class in layers)": [[9, "layers.CenterAverage"]], "centerslice (class in layers)": [[9, "layers.CenterSlice"]], "clip (class in layers)": [[9, "layers.Clip"]], "concatdist2d (class in layers)": [[9, "layers.ConcatDist2D"]], "concatposition (class in layers)": [[9, "layers.ConcatPosition"]], "concatto2d (class in layers)": [[9, "layers.ConcatTo2D"]], "dotto2d (class in layers)": [[9, "layers.DotTo2D"]], "ensemblereversecomplement (class in layers)": [[9, "layers.EnsembleReverseComplement"]], "ensembleshift (class in layers)": [[9, "layers.EnsembleShift"]], "exp (class in layers)": [[9, "layers.Exp"]], "factorinverse (class in layers)": [[9, "layers.FactorInverse"]], "geodotto2d (class in layers)": [[9, "layers.GeoDotTo2D"]], "globalcontext (class in layers)": [[9, "layers.GlobalContext"]], "lengthaverage (class in layers)": [[9, "layers.LengthAverage"]], "maxto2d (class in layers)": [[9, "layers.MaxTo2D"]], "multiheadattention (class in layers)": [[9, "layers.MultiheadAttention"]], "onetotwo (class in layers)": [[9, "layers.OneToTwo"]], "polyrelu (class in layers)": [[9, "layers.PolyReLU"]], "scale (class in layers)": [[9, "layers.Scale"]], "softmaxpool1d (class in layers)": [[9, "layers.SoftmaxPool1D"]], "softplus (class in layers)": [[9, "layers.Softplus"]], "squeezeexcite (class in layers)": [[9, "layers.SqueezeExcite"]], "stochasticreversecomplement (class in layers)": [[9, "layers.StochasticReverseComplement"]], "stochasticshift (class in layers)": [[9, "layers.StochasticShift"]], "switchreverse (class in layers)": [[9, "layers.SwitchReverse"]], "switchreversetriu (class in layers)": [[9, "layers.SwitchReverseTriu"]], "symmetrize2d (class in layers)": [[9, "layers.Symmetrize2D"]], "uppertri (class in layers)": [[9, "layers.UpperTri"]], "wheezeexcite (class in layers)": [[9, "layers.WheezeExcite"]], "_multihead_output() (layers.multiheadattention method)": [[9, "layers.MultiheadAttention._multihead_output"]], "_prepend_dims() (in module layers)": [[9, "layers._prepend_dims"]], "activate() (in module layers)": [[9, "layers.activate"]], "build() (layers.globalcontext method)": [[9, "layers.GlobalContext.build"]], "build() (layers.scale method)": [[9, "layers.Scale.build"]], "build() (layers.softmaxpool1d method)": [[9, "layers.SoftmaxPool1D.build"]], "build() (layers.squeezeexcite method)": [[9, "layers.SqueezeExcite.build"]], "build() (layers.wheezeexcite method)": [[9, "layers.WheezeExcite.build"]], "call() (layers.averageto2d method)": [[9, "layers.AverageTo2D.call"]], "call() (layers.centeraverage method)": [[9, "layers.CenterAverage.call"]], "call() (layers.centerslice method)": [[9, "layers.CenterSlice.call"]], "call() (layers.clip method)": [[9, "layers.Clip.call"]], "call() (layers.concatdist2d method)": [[9, "layers.ConcatDist2D.call"]], "call() (layers.concatposition method)": [[9, "layers.ConcatPosition.call"]], "call() (layers.concatto2d method)": [[9, "layers.ConcatTo2D.call"]], "call() (layers.dotto2d method)": [[9, "layers.DotTo2D.call"]], "call() (layers.ensemblereversecomplement method)": [[9, "layers.EnsembleReverseComplement.call"]], "call() (layers.ensembleshift method)": [[9, "layers.EnsembleShift.call"]], "call() (layers.exp method)": [[9, "layers.Exp.call"]], "call() (layers.factorinverse method)": [[9, "layers.FactorInverse.call"]], "call() (layers.geodotto2d method)": [[9, "layers.GeoDotTo2D.call"]], "call() (layers.globalcontext method)": [[9, "layers.GlobalContext.call"]], "call() (layers.lengthaverage method)": [[9, "layers.LengthAverage.call"]], "call() (layers.maxto2d method)": [[9, "layers.MaxTo2D.call"]], "call() (layers.multiheadattention method)": [[9, "layers.MultiheadAttention.call"]], "call() (layers.onetotwo method)": [[9, "layers.OneToTwo.call"]], "call() (layers.polyrelu method)": [[9, "layers.PolyReLU.call"]], "call() (layers.scale method)": [[9, "layers.Scale.call"]], "call() (layers.softmaxpool1d method)": [[9, "layers.SoftmaxPool1D.call"]], "call() (layers.softplus method)": [[9, "layers.Softplus.call"]], "call() (layers.squeezeexcite method)": [[9, "layers.SqueezeExcite.call"]], "call() (layers.stochasticreversecomplement method)": [[9, "layers.StochasticReverseComplement.call"]], "call() (layers.stochasticshift method)": [[9, "layers.StochasticShift.call"]], "call() (layers.switchreverse method)": [[9, "layers.SwitchReverse.call"]], "call() (layers.switchreversetriu method)": [[9, "layers.SwitchReverseTriu.call"]], "call() (layers.symmetrize2d method)": [[9, "layers.Symmetrize2D.call"]], "call() (layers.uppertri method)": [[9, "layers.UpperTri.call"]], "call() (layers.wheezeexcite method)": [[9, "layers.WheezeExcite.call"]], "gamma_pdf() (in module layers)": [[9, "layers.gamma_pdf"]], "get_config() (layers.centeraverage method)": [[9, "layers.CenterAverage.get_config"]], "get_config() (layers.centerslice method)": [[9, "layers.CenterSlice.get_config"]], "get_config() (layers.clip method)": [[9, "layers.Clip.get_config"]], "get_config() (layers.concatposition method)": [[9, "layers.ConcatPosition.get_config"]], "get_config() (layers.ensembleshift method)": [[9, "layers.EnsembleShift.get_config"]], "get_config() (layers.exp method)": [[9, "layers.Exp.get_config"]], "get_config() (layers.factorinverse method)": [[9, "layers.FactorInverse.get_config"]], "get_config() (layers.multiheadattention method)": [[9, "layers.MultiheadAttention.get_config"]], "get_config() (layers.onetotwo method)": [[9, "layers.OneToTwo.get_config"]], "get_config() (layers.scale method)": [[9, "layers.Scale.get_config"]], "get_config() (layers.softmaxpool1d method)": [[9, "layers.SoftmaxPool1D.get_config"]], "get_config() (layers.softplus method)": [[9, "layers.Softplus.get_config"]], "get_config() (layers.squeezeexcite method)": [[9, "layers.SqueezeExcite.get_config"]], "get_config() (layers.stochasticshift method)": [[9, "layers.StochasticShift.get_config"]], "get_config() (layers.switchreverse method)": [[9, "layers.SwitchReverse.get_config"]], "get_config() (layers.switchreversetriu method)": [[9, "layers.SwitchReverseTriu.get_config"]], "get_config() (layers.uppertri method)": [[9, "layers.UpperTri.get_config"]], "get_config() (layers.wheezeexcite method)": [[9, "layers.WheezeExcite.get_config"]], "get_positional_feature_function() (in module layers)": [[9, "layers.get_positional_feature_function"]], "layers": [[9, "module-layers"]], "positional_features() (in module layers)": [[9, "layers.positional_features"]], "positional_features_all() (in module layers)": [[9, "layers.positional_features_all"]], "positional_features_central_mask() (in module layers)": [[9, "layers.positional_features_central_mask"]], "positional_features_gamma() (in module layers)": [[9, "layers.positional_features_gamma"]], "relative_shift() (in module layers)": [[9, "layers.relative_shift"]], "rope() (in module layers)": [[9, "layers.rope"]], "shift_sequence() (in module layers)": [[9, "layers.shift_sequence"]], "meansquarederrorudot (class in metrics)": [[10, "metrics.MeanSquaredErrorUDot"]], "pearsonr (class in metrics)": [[10, "metrics.PearsonR"]], "poissonkl (class in metrics)": [[10, "metrics.PoissonKL"]], "poissonmultinomial (class in metrics)": [[10, "metrics.PoissonMultinomial"]], "r2 (class in metrics)": [[10, "metrics.R2"]], "seqauc (class in metrics)": [[10, "metrics.SeqAUC"]], "interpolate_pr_auc() (metrics.seqauc method)": [[10, "metrics.SeqAUC.interpolate_pr_auc"]], "mean_squared_error_udot() (in module metrics)": [[10, "metrics.mean_squared_error_udot"]], "metrics": [[10, "module-metrics"]], "poisson_kl() (in module metrics)": [[10, "metrics.poisson_kl"]], "poisson_multinomial() (in module metrics)": [[10, "metrics.poisson_multinomial"]], "reset_state() (metrics.pearsonr method)": [[10, "metrics.PearsonR.reset_state"]], "reset_state() (metrics.r2 method)": [[10, "metrics.R2.reset_state"]], "result() (metrics.pearsonr method)": [[10, "metrics.PearsonR.result"]], "result() (metrics.r2 method)": [[10, "metrics.R2.result"]], "result() (metrics.seqauc method)": [[10, "metrics.SeqAUC.result"]], "update_state() (metrics.pearsonr method)": [[10, "metrics.PearsonR.update_state"]], "update_state() (metrics.r2 method)": [[10, "metrics.R2.update_state"]], "update_state() (metrics.seqauc method)": [[10, "metrics.SeqAUC.update_state"]], "_per_target_mean() (in module ops)": [[11, "ops._per_target_mean"]], "_per_target_variance() (in module ops)": [[11, "ops._per_target_variance"]], "adjust_max() (in module ops)": [[11, "ops.adjust_max"]], "ops": [[11, "module-ops"]], "per_target_r2() (in module ops)": [[11, "ops.per_target_r2"]], "r2_averaged_over_all_prediction_tasks() (in module ops)": [[11, "ops.r2_averaged_over_all_prediction_tasks"]], "r2_metric() (in module ops)": [[11, "ops.r2_metric"]], "reverse_complement() (in module ops)": [[11, "ops.reverse_complement"]], "reverse_complement_transform() (in module ops)": [[11, "ops.reverse_complement_transform"]], "variance() (in module ops)": [[11, "ops.variance"]], "convparams (class in params)": [[12, "params.ConvParams"]], "add_cnn_params() (in module params)": [[12, "params.add_cnn_params"]], "add_cnn_params_cnn() (in module params)": [[12, "params.add_cnn_params_cnn"]], "add_cnn_params_dense() (in module params)": [[12, "params.add_cnn_params_dense"]], "add_cnn_params_dres() (in module params)": [[12, "params.add_cnn_params_dres"]], "add_hparams_cnn() (in module params)": [[12, "params.add_hparams_cnn"]], "add_hparams_dres() (in module params)": [[12, "params.add_hparams_dres"]], "layer_extend() (in module params)": [[12, "params.layer_extend"]], "make_hparams() (in module params)": [[12, "params.make_hparams"]], "params": [[12, "module-params"]], "read_job_params() (in module params)": [[12, "params.read_job_params"]], "seqnn (class in seqnn)": [[13, "seqnn.SeqNN"]], "__call__() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.__call__"]], "build_block() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.build_block"]], "build_embed() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.build_embed"]], "build_ensemble() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.build_ensemble"]], "build_model() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.build_model"]], "build_sad() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.build_sad"]], "build_slice() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.build_slice"]], "downcast() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.downcast"]], "evaluate() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.evaluate"]], "get_bn_layer() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.get_bn_layer"]], "get_conv_layer() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.get_conv_layer"]], "get_conv_weights() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.get_conv_weights"]], "get_dense_layer() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.get_dense_layer"]], "gradients() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.gradients"]], "gradients_func() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.gradients_func"]], "num_targets() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.num_targets"]], "predict() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.predict"]], "restore() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.restore"]], "save() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.save"]], "seqnn": [[13, "module-seqnn"]], "set_defaults() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.set_defaults"]], "step() (seqnn.seqnn method)": [[13, "seqnn.SeqNN.step"]], "seqnnmodel (class in seqnn_util)": [[14, "seqnn_util.SeqNNModel"]], "_gradients_ensemble() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel._gradients_ensemble"]], "_predict_ensemble() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel._predict_ensemble"]], "build_grads() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel.build_grads"]], "build_grads_genes() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel.build_grads_genes"]], "gradients() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel.gradients"]], "gradients_genes() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel.gradients_genes"]], "hidden() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel.hidden"]], "predict_genes() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel.predict_genes"]], "predict_h5() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel.predict_h5"]], "predict_h5_manual() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel.predict_h5_manual"]], "predict_tfr() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel.predict_tfr"]], "running_mean() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel.running_mean"]], "running_varsum() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel.running_varsum"]], "seqnn_util": [[14, "module-seqnn_util"]], "test_h5() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel.test_h5"]], "test_h5_manual() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel.test_h5_manual"]], "test_tfr() (seqnn_util.seqnnmodel method)": [[14, "seqnn_util.SeqNNModel.test_tfr"]], "license (in module setup)": [[15, "setup.license"]], "readme (in module setup)": [[15, "setup.readme"]], "setup": [[15, "module-setup"]], "predgradstream (class in stream)": [[16, "stream.PredGradStream"]], "predstream (class in stream)": [[16, "stream.PredStream"]], "predstreamfeed (class in stream)": [[16, "stream.PredStreamFeed"]], "__getitem__() (stream.predgradstream method)": [[16, "stream.PredGradStream.__getitem__"]], "__getitem__() (stream.predstream method)": [[16, "stream.PredStream.__getitem__"]], "__getitem__() (stream.predstreamfeed method)": [[16, "stream.PredStreamFeed.__getitem__"]], "make_dataset() (stream.predstream method)": [[16, "stream.PredStream.make_dataset"]], "stream": [[16, "module-stream"]], "num_files_to_parallel_interleave (in module tfrecord_batcher)": [[17, "tfrecord_batcher.NUM_FILES_TO_PARALLEL_INTERLEAVE"]], "shuffle_buffer_depth_per_file (in module tfrecord_batcher)": [[17, "tfrecord_batcher.SHUFFLE_BUFFER_DEPTH_PER_FILE"]], "tfrecordbatcher (class in tfrecord_batcher)": [[17, "tfrecord_batcher.TFRecordBatcher"]], "initialize() (tfrecord_batcher.tfrecordbatcher method)": [[17, "tfrecord_batcher.TFRecordBatcher.initialize"]], "make_data_ops() (in module tfrecord_batcher)": [[17, "tfrecord_batcher.make_data_ops"]], "make_input_fn() (in module tfrecord_batcher)": [[17, "tfrecord_batcher.make_input_fn"]], "next() (tfrecord_batcher.tfrecordbatcher method)": [[17, "tfrecord_batcher.TFRecordBatcher.next"]], "num_possible_augmentations() (in module tfrecord_batcher)": [[17, "tfrecord_batcher.num_possible_augmentations"]], "order_tfrecords() (in module tfrecord_batcher)": [[17, "tfrecord_batcher.order_tfrecords"]], "reset() (tfrecord_batcher.tfrecordbatcher method)": [[17, "tfrecord_batcher.TFRecordBatcher.reset"]], "tfrecord_batcher": [[17, "module-tfrecord_batcher"]], "tfrecord_dataset() (in module tfrecord_batcher)": [[17, "tfrecord_batcher.tfrecord_dataset"]], "tfrecord_dataset_multi() (in module tfrecord_batcher)": [[17, "tfrecord_batcher.tfrecord_dataset_multi"]], "cyclical1learningrate (class in trainer)": [[18, "trainer.Cyclical1LearningRate"]], "earlystoppingmin (class in trainer)": [[18, "trainer.EarlyStoppingMin"]], "trainer (class in trainer)": [[18, "trainer.Trainer"]], "warmup (class in trainer)": [[18, "trainer.WarmUp"]], "__call__() (trainer.cyclical1learningrate method)": [[18, "trainer.Cyclical1LearningRate.__call__"]], "__call__() (trainer.warmup method)": [[18, "trainer.WarmUp.__call__"]], "adaptive_clip_grad() (in module trainer)": [[18, "trainer.adaptive_clip_grad"]], "compile() (trainer.trainer method)": [[18, "trainer.Trainer.compile"]], "compute_norm() (in module trainer)": [[18, "trainer.compute_norm"]], "fit2() (trainer.trainer method)": [[18, "trainer.Trainer.fit2"]], "fit_keras() (trainer.trainer method)": [[18, "trainer.Trainer.fit_keras"]], "fit_tape() (trainer.trainer method)": [[18, "trainer.Trainer.fit_tape"]], "get_config() (trainer.cyclical1learningrate method)": [[18, "trainer.Cyclical1LearningRate.get_config"]], "get_config() (trainer.warmup method)": [[18, "trainer.WarmUp.get_config"]], "make_optimizer() (trainer.trainer method)": [[18, "trainer.Trainer.make_optimizer"]], "on_epoch_end() (trainer.earlystoppingmin method)": [[18, "trainer.EarlyStoppingMin.on_epoch_end"]], "parse_loss() (in module trainer)": [[18, "trainer.parse_loss"]], "safe_next() (in module trainer)": [[18, "trainer.safe_next"]], "trainer": [[18, "module-trainer"]], "unitwise_norm() (in module trainer)": [[18, "trainer.unitwise_norm"]]}})