Search.setIndex({"docnames": ["autoapi/accuracy/index", "autoapi/akita_data/index", "autoapi/akita_data_read/index", "autoapi/akita_data_write/index", "autoapi/akita_predict/index", "autoapi/akita_sat_plot/index", "autoapi/akita_sat_vcf/index", "autoapi/akita_scd/index", "autoapi/akita_scd_multi/index", "autoapi/akita_test/index", "autoapi/akita_train/index", "autoapi/augmentation/index", "autoapi/bam_cov/index", "autoapi/basenji_annot_chr/index", "autoapi/basenji_average/index", "autoapi/basenji_bedg_tfr/index", "autoapi/basenji_bench_classify/index", "autoapi/basenji_bench_gtex/index", "autoapi/basenji_bench_gtex_cmp/index", "autoapi/basenji_bench_gtex_folds/index", "autoapi/basenji_bench_phylop/index", "autoapi/basenji_bench_phylop_folds/index", "autoapi/basenji_bench_phylopvcf/index", "autoapi/basenji_bench_phylopvcf_folds/index", "autoapi/basenji_bigwig_tfr/index", "autoapi/basenji_cmp/index", "autoapi/basenji_data/index", "autoapi/basenji_data2/index", "autoapi/basenji_data_align/index", "autoapi/basenji_data_gene/index", "autoapi/basenji_data_hic_read/index", "autoapi/basenji_data_hic_write/index", "autoapi/basenji_data_read/index", "autoapi/basenji_data_write/index", "autoapi/basenji_fetch_app/index", "autoapi/basenji_fetch_app1/index", "autoapi/basenji_fetch_app2/index", "autoapi/basenji_fetch_norm/index", "autoapi/basenji_fetch_vcf/index", "autoapi/basenji_final/index", "autoapi/basenji_gtex_folds/index", "autoapi/basenji_hdf5_cluster/index", "autoapi/basenji_hdf5_genes/index", "autoapi/basenji_hdf5_single/index", "autoapi/basenji_hidden/index", "autoapi/basenji_map/index", "autoapi/basenji_map_genes/index", "autoapi/basenji_map_seqs/index", "autoapi/basenji_motifs/index", "autoapi/basenji_motifs_denovo/index", "autoapi/basenji_motifs_inject/index", "autoapi/basenji_motifs_inject_folds/index", "autoapi/basenji_norm_h5/index", "autoapi/basenji_predict/index", "autoapi/basenji_predict_bed/index", "autoapi/basenji_predict_bed_multi/index", "autoapi/basenji_predict_tfr/index", "autoapi/basenji_predict_var/index", "autoapi/basenji_sad/index", "autoapi/basenji_sad_multi/index", "autoapi/basenji_sad_norm/index", "autoapi/basenji_sad_ref/index", "autoapi/basenji_sad_ref_multi/index", "autoapi/basenji_sad_table/index", "autoapi/basenji_sadf/index", "autoapi/basenji_sadf_multi/index", "autoapi/basenji_sat_bed/index", "autoapi/basenji_sat_bed_multi/index", "autoapi/basenji_sat_folds/index", "autoapi/basenji_sat_h5/index", "autoapi/basenji_sat_plot/index", "autoapi/basenji_sat_plot2/index", "autoapi/basenji_sat_vcf/index", "autoapi/basenji_sed/index", "autoapi/basenji_sed_multi/index", "autoapi/basenji_sedg/index", "autoapi/basenji_test/index", "autoapi/basenji_test_folds/index", "autoapi/basenji_test_genes/index", "autoapi/basenji_test_h5/index", "autoapi/basenji_test_orig/index", "autoapi/basenji_test_reps/index", "autoapi/basenji_test_specificity/index", "autoapi/basenji_train/index", "autoapi/basenji_train1/index", "autoapi/basenji_train2/index", "autoapi/basenji_train_app/index", "autoapi/basenji_train_avg/index", "autoapi/basenji_train_folds/index", "autoapi/basenji_train_folds_gcp/index", "autoapi/basenji_train_h5/index", "autoapi/basenji_train_h5man/index", "autoapi/basenji_train_head/index", "autoapi/basenji_train_head_folds/index", "autoapi/basenji_train_hic/index", "autoapi/basenji_train_reps/index", "autoapi/basenji_variables/index", "autoapi/bed/index", "autoapi/bigwig_hdf5/index", "autoapi/blocks/index", "autoapi/borzoi_bench_crispr/index", "autoapi/borzoi_bench_crispr_folds/index", "autoapi/borzoi_bench_flowfish_folds/index", "autoapi/borzoi_bench_gasperini_folds/index", "autoapi/borzoi_bench_sqtl_folds/index", "autoapi/borzoi_satg_gene/index", "autoapi/borzoi_satg_gene_multi/index", "autoapi/borzoi_sed/index", "autoapi/borzoi_test_exons/index", "autoapi/borzoi_test_exons_folds/index", "autoapi/borzoi_test_genes/index", "autoapi/borzoi_test_genes_folds/index", "autoapi/dataset/index", "autoapi/dna_io/index", "autoapi/emerald/index", "autoapi/gene/index", "autoapi/genedata/index", "autoapi/genome/index", "autoapi/gff/index", "autoapi/h5_tfr/index", "autoapi/hdf5_bed/index", "autoapi/index", "autoapi/layers/index", "autoapi/make_hg19_mini/index", "autoapi/make_targets/index", "autoapi/metrics/index", "autoapi/ops/index", "autoapi/params/index", "autoapi/plots/index", "autoapi/rnann/index", "autoapi/sad5/index", "autoapi/saluki_bench_classify/index", "autoapi/saluki_bench_gtex/index", "autoapi/saluki_bench_gtex_cmp/index", "autoapi/saluki_grad_fasta/index", "autoapi/saluki_ism_tfr/index", "autoapi/saluki_ism_tfr_folds/index", "autoapi/saluki_predict_fasta/index", "autoapi/saluki_ssd/index", "autoapi/saluki_test/index", "autoapi/saluki_test_folds/index", "autoapi/saluki_train/index", "autoapi/saluki_train_folds/index", "autoapi/save_model/index", "autoapi/seqnn/index", "autoapi/seqnn_util/index", "autoapi/seqs_hdf5/index", "autoapi/setup/index", "autoapi/sonnet_bench_gtex/index", "autoapi/sonnet_predict_bed/index", "autoapi/sonnet_sad/index", "autoapi/sonnet_sad_multi/index", "autoapi/sonnet_sat_bed/index", "autoapi/sonnet_sat_bed_multi/index", "autoapi/sonnet_sat_vcf/index", "autoapi/sonnet_satg_bed/index", "autoapi/sonnet_sed/index", "autoapi/sonnet_sed_multi/index", "autoapi/stream/index", "autoapi/test_augment/index", "autoapi/test_data/index", "autoapi/test_data2/index", "autoapi/test_dna_io/index", "autoapi/test_gene/index", "autoapi/test_sad/index", "autoapi/test_sat/index", "autoapi/test_sed/index", "autoapi/test_test/index", "autoapi/test_train/index", "autoapi/test_train_full/index", "autoapi/tfr_bw/index", "autoapi/tfr_hdf5/index", "autoapi/tfr_qc/index", "autoapi/tfrecord_batcher/index", "autoapi/trainer/index", "autoapi/unmappable_bed/index", "autoapi/upgrade_tf1/index", "autoapi/util/index", "autoapi/vcf/index", "index"], "filenames": ["autoapi/accuracy/index.rst", "autoapi/akita_data/index.rst", "autoapi/akita_data_read/index.rst", "autoapi/akita_data_write/index.rst", "autoapi/akita_predict/index.rst", "autoapi/akita_sat_plot/index.rst", "autoapi/akita_sat_vcf/index.rst", "autoapi/akita_scd/index.rst", "autoapi/akita_scd_multi/index.rst", "autoapi/akita_test/index.rst", "autoapi/akita_train/index.rst", "autoapi/augmentation/index.rst", "autoapi/bam_cov/index.rst", "autoapi/basenji_annot_chr/index.rst", "autoapi/basenji_average/index.rst", "autoapi/basenji_bedg_tfr/index.rst", "autoapi/basenji_bench_classify/index.rst", "autoapi/basenji_bench_gtex/index.rst", "autoapi/basenji_bench_gtex_cmp/index.rst", "autoapi/basenji_bench_gtex_folds/index.rst", "autoapi/basenji_bench_phylop/index.rst", "autoapi/basenji_bench_phylop_folds/index.rst", "autoapi/basenji_bench_phylopvcf/index.rst", "autoapi/basenji_bench_phylopvcf_folds/index.rst", "autoapi/basenji_bigwig_tfr/index.rst", "autoapi/basenji_cmp/index.rst", "autoapi/basenji_data/index.rst", "autoapi/basenji_data2/index.rst", "autoapi/basenji_data_align/index.rst", "autoapi/basenji_data_gene/index.rst", "autoapi/basenji_data_hic_read/index.rst", "autoapi/basenji_data_hic_write/index.rst", "autoapi/basenji_data_read/index.rst", "autoapi/basenji_data_write/index.rst", "autoapi/basenji_fetch_app/index.rst", "autoapi/basenji_fetch_app1/index.rst", "autoapi/basenji_fetch_app2/index.rst", "autoapi/basenji_fetch_norm/index.rst", "autoapi/basenji_fetch_vcf/index.rst", "autoapi/basenji_final/index.rst", "autoapi/basenji_gtex_folds/index.rst", "autoapi/basenji_hdf5_cluster/index.rst", "autoapi/basenji_hdf5_genes/index.rst", "autoapi/basenji_hdf5_single/index.rst", "autoapi/basenji_hidden/index.rst", "autoapi/basenji_map/index.rst", "autoapi/basenji_map_genes/index.rst", "autoapi/basenji_map_seqs/index.rst", "autoapi/basenji_motifs/index.rst", "autoapi/basenji_motifs_denovo/index.rst", "autoapi/basenji_motifs_inject/index.rst", "autoapi/basenji_motifs_inject_folds/index.rst", "autoapi/basenji_norm_h5/index.rst", "autoapi/basenji_predict/index.rst", "autoapi/basenji_predict_bed/index.rst", "autoapi/basenji_predict_bed_multi/index.rst", "autoapi/basenji_predict_tfr/index.rst", "autoapi/basenji_predict_var/index.rst", "autoapi/basenji_sad/index.rst", "autoapi/basenji_sad_multi/index.rst", "autoapi/basenji_sad_norm/index.rst", "autoapi/basenji_sad_ref/index.rst", "autoapi/basenji_sad_ref_multi/index.rst", "autoapi/basenji_sad_table/index.rst", "autoapi/basenji_sadf/index.rst", "autoapi/basenji_sadf_multi/index.rst", "autoapi/basenji_sat_bed/index.rst", "autoapi/basenji_sat_bed_multi/index.rst", "autoapi/basenji_sat_folds/index.rst", "autoapi/basenji_sat_h5/index.rst", "autoapi/basenji_sat_plot/index.rst", "autoapi/basenji_sat_plot2/index.rst", "autoapi/basenji_sat_vcf/index.rst", "autoapi/basenji_sed/index.rst", "autoapi/basenji_sed_multi/index.rst", "autoapi/basenji_sedg/index.rst", "autoapi/basenji_test/index.rst", "autoapi/basenji_test_folds/index.rst", "autoapi/basenji_test_genes/index.rst", "autoapi/basenji_test_h5/index.rst", "autoapi/basenji_test_orig/index.rst", "autoapi/basenji_test_reps/index.rst", "autoapi/basenji_test_specificity/index.rst", "autoapi/basenji_train/index.rst", "autoapi/basenji_train1/index.rst", "autoapi/basenji_train2/index.rst", "autoapi/basenji_train_app/index.rst", "autoapi/basenji_train_avg/index.rst", "autoapi/basenji_train_folds/index.rst", "autoapi/basenji_train_folds_gcp/index.rst", "autoapi/basenji_train_h5/index.rst", "autoapi/basenji_train_h5man/index.rst", "autoapi/basenji_train_head/index.rst", "autoapi/basenji_train_head_folds/index.rst", "autoapi/basenji_train_hic/index.rst", "autoapi/basenji_train_reps/index.rst", "autoapi/basenji_variables/index.rst", "autoapi/bed/index.rst", "autoapi/bigwig_hdf5/index.rst", "autoapi/blocks/index.rst", "autoapi/borzoi_bench_crispr/index.rst", "autoapi/borzoi_bench_crispr_folds/index.rst", "autoapi/borzoi_bench_flowfish_folds/index.rst", "autoapi/borzoi_bench_gasperini_folds/index.rst", "autoapi/borzoi_bench_sqtl_folds/index.rst", "autoapi/borzoi_satg_gene/index.rst", "autoapi/borzoi_satg_gene_multi/index.rst", "autoapi/borzoi_sed/index.rst", "autoapi/borzoi_test_exons/index.rst", "autoapi/borzoi_test_exons_folds/index.rst", "autoapi/borzoi_test_genes/index.rst", "autoapi/borzoi_test_genes_folds/index.rst", "autoapi/dataset/index.rst", "autoapi/dna_io/index.rst", "autoapi/emerald/index.rst", "autoapi/gene/index.rst", "autoapi/genedata/index.rst", "autoapi/genome/index.rst", "autoapi/gff/index.rst", "autoapi/h5_tfr/index.rst", "autoapi/hdf5_bed/index.rst", "autoapi/index.rst", "autoapi/layers/index.rst", "autoapi/make_hg19_mini/index.rst", "autoapi/make_targets/index.rst", "autoapi/metrics/index.rst", "autoapi/ops/index.rst", "autoapi/params/index.rst", "autoapi/plots/index.rst", "autoapi/rnann/index.rst", "autoapi/sad5/index.rst", "autoapi/saluki_bench_classify/index.rst", "autoapi/saluki_bench_gtex/index.rst", "autoapi/saluki_bench_gtex_cmp/index.rst", "autoapi/saluki_grad_fasta/index.rst", "autoapi/saluki_ism_tfr/index.rst", "autoapi/saluki_ism_tfr_folds/index.rst", "autoapi/saluki_predict_fasta/index.rst", "autoapi/saluki_ssd/index.rst", "autoapi/saluki_test/index.rst", "autoapi/saluki_test_folds/index.rst", "autoapi/saluki_train/index.rst", "autoapi/saluki_train_folds/index.rst", "autoapi/save_model/index.rst", "autoapi/seqnn/index.rst", "autoapi/seqnn_util/index.rst", "autoapi/seqs_hdf5/index.rst", "autoapi/setup/index.rst", "autoapi/sonnet_bench_gtex/index.rst", "autoapi/sonnet_predict_bed/index.rst", "autoapi/sonnet_sad/index.rst", "autoapi/sonnet_sad_multi/index.rst", "autoapi/sonnet_sat_bed/index.rst", "autoapi/sonnet_sat_bed_multi/index.rst", "autoapi/sonnet_sat_vcf/index.rst", "autoapi/sonnet_satg_bed/index.rst", "autoapi/sonnet_sed/index.rst", "autoapi/sonnet_sed_multi/index.rst", "autoapi/stream/index.rst", "autoapi/test_augment/index.rst", "autoapi/test_data/index.rst", "autoapi/test_data2/index.rst", "autoapi/test_dna_io/index.rst", "autoapi/test_gene/index.rst", "autoapi/test_sad/index.rst", "autoapi/test_sat/index.rst", "autoapi/test_sed/index.rst", "autoapi/test_test/index.rst", "autoapi/test_train/index.rst", "autoapi/test_train_full/index.rst", "autoapi/tfr_bw/index.rst", "autoapi/tfr_hdf5/index.rst", "autoapi/tfr_qc/index.rst", "autoapi/tfrecord_batcher/index.rst", "autoapi/trainer/index.rst", "autoapi/unmappable_bed/index.rst", "autoapi/upgrade_tf1/index.rst", "autoapi/util/index.rst", "autoapi/vcf/index.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">accuracy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">akita_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">akita_data_read</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">akita_data_write</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">akita_predict</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">akita_sat_plot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">akita_sat_vcf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">akita_scd</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">akita_scd_multi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">akita_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">akita_train</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bam_cov</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_annot_chr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_average</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_bedg_tfr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_bench_classify</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_bench_gtex</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_bench_gtex_cmp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_bench_gtex_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_bench_phylop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_bench_phylop_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_bench_phylopvcf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_bench_phylopvcf_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_bigwig_tfr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_cmp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_data2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_data_align</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_data_gene</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_data_hic_read</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_data_hic_write</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_data_read</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_data_write</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_fetch_app</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_fetch_app1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_fetch_app2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_fetch_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_fetch_vcf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_final</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_gtex_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_hdf5_cluster</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_hdf5_genes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_hdf5_single</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_hidden</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_map</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_map_genes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_map_seqs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_motifs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_motifs_denovo</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_motifs_inject</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_motifs_inject_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_norm_h5</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_predict</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_predict_bed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_predict_bed_multi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_predict_tfr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_predict_var</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sad</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sad_multi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sad_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sad_ref</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sad_ref_multi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sad_table</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sadf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sadf_multi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sat_bed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sat_bed_multi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sat_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sat_h5</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sat_plot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sat_plot2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sat_vcf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sed_multi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_sedg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_test_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_test_genes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_test_h5</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_test_orig</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_test_reps</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_test_specificity</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_train</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_train1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_train2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_train_app</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_train_avg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_train_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_train_folds_gcp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_train_h5</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_train_h5man</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_train_head</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_train_head_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_train_hic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_train_reps</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">basenji_variables</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bigwig_hdf5</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">blocks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">borzoi_bench_crispr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">borzoi_bench_crispr_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">borzoi_bench_flowfish_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">borzoi_bench_gasperini_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">borzoi_bench_sqtl_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">borzoi_satg_gene</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">borzoi_satg_gene_multi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">borzoi_sed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">borzoi_test_exons</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">borzoi_test_exons_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">borzoi_test_genes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">borzoi_test_genes_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dna_io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">emerald</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gene</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">genedata</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">genome</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gff</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">h5_tfr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hdf5_bed</span></code>", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">layers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">make_hg19_mini</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">make_targets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">params</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">plots</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rnann</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sad5</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">saluki_bench_classify</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">saluki_bench_gtex</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">saluki_bench_gtex_cmp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">saluki_grad_fasta</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">saluki_ism_tfr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">saluki_ism_tfr_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">saluki_predict_fasta</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">saluki_ssd</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">saluki_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">saluki_test_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">saluki_train</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">saluki_train_folds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">save_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">seqnn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">seqnn_util</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">seqs_hdf5</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">setup</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sonnet_bench_gtex</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sonnet_predict_bed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sonnet_sad</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sonnet_sad_multi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sonnet_sat_bed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sonnet_sat_bed_multi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sonnet_sat_vcf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sonnet_satg_bed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sonnet_sed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sonnet_sed_multi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stream</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_augment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_data2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dna_io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gene</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_sad</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_sat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_sed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_train</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_train_full</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tfr_bw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tfr_hdf5</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tfr_qc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tfrecord_batcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unmappable_bed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">upgrade_tf1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">util</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">vcf</span></code>", "Welcome to Init_website\u2019s documentation!"], "terms": {"target": [0, 4, 6, 41, 42, 43, 53, 58, 66, 69, 70, 71, 78, 79, 80, 84, 97, 99, 107, 112, 122, 126, 129, 130, 144, 145, 160, 161, 173], "pred": [0, 64, 69, 70, 74, 126, 145], "targets_na": 0, "none": [0, 4, 6, 12, 13, 16, 26, 27, 28, 43, 44, 48, 49, 53, 63, 78, 97, 99, 112, 113, 115, 116, 118, 122, 125, 126, 127, 128, 129, 144, 145, 173, 174, 177, 178], "loss": [0, 69, 70, 71, 125, 129, 174], "target_loss": 0, "pearsonr": [0, 77, 78, 109, 111, 125, 128], "log": [0, 174], "fals": [0, 11, 12, 13, 16, 26, 27, 28, 43, 48, 49, 66, 78, 97, 99, 105, 107, 112, 113, 114, 115, 122, 125, 128, 129, 130, 135, 138, 144, 145, 155, 158, 173, 177, 178], "pseudocount": [0, 12, 69, 70, 71, 107], "1": [0, 7, 12, 16, 20, 22, 26, 28, 41, 42, 43, 49, 64, 66, 71, 78, 99, 112, 113, 114, 121, 122, 125, 126, 128, 130, 135, 145, 173, 174, 178], "clip": [0, 12, 122], "comput": [0, 12, 16, 20, 22, 27, 28, 45, 48, 49, 58, 66, 69, 80, 84, 99, 107, 122, 126, 129, 130, 144, 145, 178], "vector": [0, 12, 122], "r2": [0, 125, 126], "spearmanr": 0, "stochastic_rc": 11, "seq_1hot": [6, 11, 69, 70, 73, 113, 122, 129, 144], "stochast": [11, 122], "revers": [11, 113, 122, 126, 138, 145], "complement": [11, 113, 122, 126, 138, 145], "one": [11, 12, 13, 27, 49, 61, 69, 70, 113, 116, 122, 126, 160, 161, 178], "hot": [11, 41, 43, 61, 64, 66, 69, 70, 71, 73, 113, 122, 126, 135, 160, 161, 178], "encod": [11, 66, 71, 122, 135], "dna": [11, 33, 66, 99, 122, 127, 135, 173], "sequenc": [4, 6, 11, 20, 22, 26, 27, 28, 29, 41, 42, 43, 45, 49, 53, 54, 64, 66, 69, 70, 71, 73, 79, 80, 97, 99, 105, 107, 112, 113, 116, 122, 125, 126, 127, 129, 135, 144, 145, 149, 155, 160, 161, 173, 178], "reverse_pr": 11, "rp_tupl": 11, "shift_sequ": [11, 122], "seq": [11, 26, 27, 29, 48, 69, 70, 113, 122, 126, 145, 178], "shift_amount": [11, 122], "pad_valu": [11, 113, 122], "0": [4, 7, 11, 12, 26, 27, 28, 41, 43, 44, 48, 49, 53, 54, 69, 70, 71, 78, 79, 80, 99, 105, 113, 114, 115, 122, 125, 128, 129, 130, 144, 145, 149, 155, 160, 161, 173, 174], "25": [11, 99, 113], "shift": [11, 12, 49, 105, 113, 122, 145, 155, 173], "left": [11, 122, 145], "right": [11, 122, 145], "arg": [4, 6, 11, 12, 26, 34, 35, 36, 41, 42, 43, 53, 54, 66, 69, 70, 71, 79, 80, 84, 99, 113, 117, 122, 126, 127, 144, 145, 149, 173, 174], "batch_siz": [11, 64, 99, 112, 122, 126, 138, 144, 158, 173], "sequence_length": [11, 173], "sequence_depth": 11, "sign": [11, 122], "amount": [11, 43], "tf": [11, 43, 122, 125, 126, 144, 173], "int32": [11, 122], "int": [11, 12, 48, 49, 69, 70, 113, 122, 145, 174, 178], "valu": [3, 9, 11, 12, 16, 29, 31, 33, 34, 35, 36, 41, 42, 43, 48, 49, 58, 69, 70, 76, 78, 79, 80, 107, 118, 119, 122, 125, 126, 138], "fill": [11, 32, 122], "pad": [11, 99, 122, 138], "primit": [11, 122], "scalar": [11, 122], "tensor": [11, 122, 126, 173, 174], "augment_deterministic_set": 11, "data_op": [11, 126], "augment_rc": 11, "augment_shift": 11, "dict": [11, 12, 42, 117, 118, 145, 173], "kei": [11, 29, 118], "label": [11, 12, 26, 27, 28, 74, 126, 173, 174], "na": [11, 26, 41, 43, 126, 173], "boolean": [11, 29, 99, 113], "list": [11, 26, 27, 28, 29, 41, 42, 43, 48, 61, 78, 97, 107, 116, 117, 122, 126, 127, 145, 173, 178], "return": [11, 12, 26, 29, 34, 35, 36, 41, 42, 43, 48, 61, 69, 78, 97, 99, 113, 115, 116, 117, 118, 122, 126, 127, 130, 144, 145, 173, 174, 178], "data_ops_list": 11, "augment_determinist": 11, "appli": [11, 12, 99, 122, 174], "determinist": 11, "specifi": [4, 6, 11, 12, 26, 27, 28, 29, 33, 53, 54, 69, 70, 71, 79, 80, 97, 117, 126, 144, 145, 149, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "paramet": [6, 11, 43, 69, 70, 71, 127, 130, 173, 174], "data": [11, 12, 16, 43, 69, 70, 78, 126, 145, 173], "all": [11, 26, 27, 28, 49, 69, 107, 126, 138, 145, 158, 173, 178], "exist": [11, 29], "transform": [11, 41, 43, 99, 112, 113, 122, 127], "bool": [11, 12, 122], "ad": [11, 27, 28], "augment_deterministic_rc": 11, "data_ops_aug": 11, "op": [11, 121, 145, 179], "augment_stochastic_rc": 11, "augment_stochastic_shift": 11, "input": [11, 69, 99, 112, 122, 126, 127, 129, 144, 145, 173], "size": [11, 12, 26, 27, 28, 122, 127, 173, 174], "length": [4, 6, 11, 12, 26, 27, 28, 41, 43, 53, 54, 58, 69, 70, 71, 79, 80, 97, 99, 107, 113, 117, 122, 125, 126, 127, 138, 145, 149, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 178], "depth": 11, "offset": 11, "sampl": [11, 12, 33, 49, 60, 69, 113, 128, 130, 145], "from": [7, 11, 12, 13, 27, 28, 42, 43, 48, 54, 66, 69, 70, 84, 117, 122, 127, 129, 138, 144, 145, 149, 173, 174, 178], "augment_stochast": 11, "whether": [8, 11, 12, 55, 59, 62, 65, 67, 106, 151, 153, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "make_bed_seq": 97, "bed_fil": [26, 27, 29, 97, 160, 161], "fasta_fil": [12, 27, 29, 41, 43, 49, 97, 134, 137], "seq_len": [6, 61, 64, 69, 70, 71, 97, 105, 107, 113, 126, 134, 137, 178], "strand": [12, 97, 110, 113, 115, 118, 138], "region": [4, 6, 26, 27, 28, 30, 32, 41, 43, 53, 54, 61, 69, 70, 79, 80, 97, 149], "coordin": [4, 42, 49, 53, 79, 80, 97, 178], "tupl": [97, 126, 145], "extend": [97, 113, 127], "read_bed_coord": 97, "write_bedgraph": 97, "test_pr": [9, 76, 80, 97], "test_target": [9, 76, 97, 160, 161, 163], "data_dir": [88, 89, 92, 93, 97, 112, 142], "out_dir": [7, 8, 12, 16, 25, 26, 27, 28, 55, 58, 59, 64, 65, 66, 67, 74, 80, 92, 95, 97, 100, 106, 107, 110, 132, 136, 151, 153, 157, 174], "split_label": [97, 112], "bedgraph_index": 97, "write": [4, 7, 12, 26, 27, 29, 45, 49, 53, 54, 58, 66, 79, 80, 84, 97, 107, 149], "graph": [27, 28, 29, 97], "file": [4, 7, 8, 12, 26, 27, 29, 41, 43, 48, 49, 53, 54, 55, 58, 59, 62, 64, 65, 67, 69, 79, 80, 97, 106, 107, 117, 118, 149, 151, 153, 157, 173, 178], "predict": [7, 19, 49, 58, 69, 70, 78, 97, 104, 107, 122, 126, 127, 129, 138, 144, 145, 158], "write_bedgraph_v1": 97, "conv_block": 99, "filter": [4, 12, 26, 41, 43, 48, 49, 53, 69, 70, 99, 127], "kernel_s": 99, "activ": [12, 66, 69, 70, 84, 99, 122], "relu": [99, 122], "activation_end": 99, "stride": [26, 27, 28, 41, 43, 99, 127], "dilation_r": 99, "l2_scale": [99, 122], "dropout": [99, 127], "conv_typ": 99, "standard": [12, 66, 84, 99, 122, 127], "pool_siz": [99, 122], "pool_typ": 99, "max": [41, 43, 69, 70, 71, 99, 122, 127], "norm_typ": [99, 122], "bn_momentum": [99, 122], "99": 99, "norm_gamma": 99, "residu": [99, 127], "kernel_initi": 99, "he_norm": [99, 122], "same": [34, 35, 36, 99, 117, 122, 126], "construct": [6, 7, 27, 28, 30, 32, 66, 69, 99, 107, 135, 138, 144, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "singl": [6, 12, 16, 69, 70, 71, 99, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "convolut": [99, 127, 144], "seq_length": [26, 27, 28, 29, 41, 43, 99, 122, 159, 173], "featur": [33, 49, 99, 118, 122], "conv1d": 99, "gelu": 99, "etc": 99, "dilat": [99, 127], "rate": [99, 122, 127, 174], "l2": 99, "regular": 99, "weight": [12, 99, 122, 126, 129, 144, 174], "probabl": [99, 122], "layer": [99, 121, 127, 144, 145, 173, 179], "type": [99, 144], "connect": [27, 28, 99, 127], "pool": [26, 41, 42, 43, 99, 122, 127, 173], "width": [26, 41, 42, 43, 99, 115, 127, 173], "batch": [41, 43, 64, 99, 113, 126, 138, 144, 145, 173, 174], "normal": [12, 78, 99, 100, 130, 144], "batchnorm": 99, "momentum": [99, 174], "gamma": [99, 122], "default": [99, 127, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174], "accord": [29, 33, 71, 99, 173], "output": [7, 8, 48, 49, 55, 58, 59, 62, 64, 65, 67, 99, 106, 107, 112, 122, 144, 151, 153, 157, 160, 161], "conv_dna": 99, "15": 99, "dropout_residu": 99, "use_bia": 99, "se": 99, "assum": [43, 58, 78, 99, 107, 173], "oper": [12, 99, 122], "conv_nac": 99, "conv_next": 99, "7": 99, "dense_expans": 99, "2": [26, 49, 99, 122, 144], "fpn_unet": 99, "unet_repr": 99, "pyramid": 99, "network": [99, 127], "upsampl": 99, "fpn1_unet": 99, "upsample_unet": 99, "transpos": [48, 49, 99, 122], "tconv_nac": 99, "concat_unet": 99, "kwarg": [66, 84, 99, 125, 129, 144, 174], "conv_block_2d": 99, "128": [28, 99, 112, 115, 158], "ones": 99, "symmetr": [99, 122], "2d": [99, 122], "conv_tower_v1": 99, "filters_init": 99, "filters_mult": 99, "repeat": [99, 173], "reduc": [99, 127], "initi": [7, 12, 58, 64, 99, 107, 122, 127, 173, 174], "multipli": [99, 122], "conv": 99, "repetit": 99, "conv_tow": 99, "filters_end": 99, "divisible_bi": 99, "repr": [99, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "end": [12, 32, 33, 41, 42, 43, 49, 54, 99, 105, 115, 117, 118, 149, 173, 174, 178], "round": [26, 33, 99], "divis": [27, 28, 99], "eg": 99, "power": [99, 122, 174], "two": [18, 71, 99, 133], "tower": 99, "conv_tower_nac": 99, "append": 99, "represent": [43, 99, 113, 145], "res_tow": 99, "num_conv": 99, "subsequ": 99, "per": [12, 99, 126, 145], "convnext_tow": 99, "abc": 99, "key_siz": [99, 122], "head": [99, 122], "out_siz": 99, "content_position_bia": [99, 122], "true": [16, 48, 49, 99, 100, 107, 110, 112, 113, 116, 118, 122, 125, 130, 144, 173, 174], "attention_dropout": 99, "05": [12, 69, 70, 71, 99, 128], "position_dropout": 99, "01": [12, 41, 43, 99, 161], "mha_l2_scal": 99, "num_position_featur": [99, 122], "qkv_width": [99, 122], "mha_initi": 99, "transformer_split": 99, "split": [19, 29, 99, 104, 117], "transformer_dens": 99, "dens": [7, 99, 127], "portion": [99, 122], "transformer2": 99, "wise": 99, "befor": [12, 26, 27, 28, 99, 125, 127, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 174], "full": [16, 69, 70, 80, 99, 107], "swin_transform": 99, "transformer_tow": 99, "block_typ": 99, "squeeze_excit": 99, "bottleneck_ratio": [99, 122], "8": [16, 20, 22, 99, 122, 144, 173], "addit": [99, 113, 122, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "9": [99, 122], "wheeze_excit": 99, "global_context": 99, "dilated_dens": 99, "3": 99, "rate_mult": 99, "dilated_residu": 99, "dilated_residual_nac": 99, "dilated_residual_2d": 99, "exp": [99, 122], "base": [34, 35, 36, 66, 78, 84, 99, 122, 125, 127, 128, 145, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174], "minu": [99, 122], "center_averag": 99, "center": [99, 122, 145, 178], "center_slic": 99, "concat_dist_2d": 99, "concat_posit": 99, "ab": 99, "cropping_2d": 99, "crop": [26, 54, 99, 149], "one_to_two": 99, "mean": [48, 69, 78, 99, 122, 126], "symmetrize_2d": 99, "upper_tri": 99, "diagonal_offset": [7, 99, 122], "factor_invers": 99, "components_fil": 99, "dense_block": 99, "unit": [99, 145], "flatten": [99, 125], "l1_scale": 99, "after": [26, 99, 174], "other": [99, 118], "across": [6, 12, 27, 28, 69, 70, 71, 78, 99, 122, 126, 127, 144, 145], "posit": [12, 99, 107, 113, 122, 144, 145], "axi": [6, 12, 69, 70, 71, 99, 122, 174], "l1": 99, "batch_norm": [99, 144], "dense_nac": 99, "final": [99, 126, 127], "linear": [32, 99, 122, 174], "simpl": 99, "comparison": [26, 27, 28, 99], "average_pool": 99, "average_to_2d": 99, "max_to_2d": 99, "dot_to_2d": 99, "geodot_to_2d": 99, "concat_to_2d": 99, "name_func": 99, "keras_func": 99, "tfr_input": 112, "tfr_output": 112, "file_to_record": [112, 160, 161, 171, 172], "filenam": [4, 6, 12, 42, 43, 48, 53, 54, 79, 80, 112, 149, 160, 161, 171, 172], "seqdataset": [112, 129, 144], "shuffle_buff": 112, "seq_length_crop": 112, "mode": [112, 127, 173], "eval": 112, "tfr_pattern": [112, 159, 170, 171, 172, 173], "batches_per_epoch": 112, "distribut": [12, 78, 112, 122, 130], "strategi": [112, 174], "generate_pars": 112, "raw": [12, 43, 69, 70, 112, 173], "make_dataset": [112, 138, 158], "cycle_length": 112, "4": [6, 12, 69, 70, 78, 112, 113, 126, 173], "make": [12, 27, 48, 107, 112, 122, 173], "w": [12, 29, 112, 122, 178], "compute_stat": 112, "iter": [12, 16, 20, 22, 112, 145, 173], "over": [4, 53, 54, 79, 80, 104, 112, 145, 149, 173], "tfrecord": [112, 145, 173], "count": [12, 112, 178], "infer": [12, 112], "seq_depth": [112, 122, 173], "num_target": [60, 112, 125, 126, 144, 171, 173], "numpi": [33, 49, 112], "return_input": 112, "return_output": 112, "step": [84, 112, 144, 174], "target_slic": [112, 144], "dtype": [112, 129, 144, 145], "float16": [33, 112, 113, 129, 144], "convert": [9, 12, 33, 76, 79, 80, 112, 113, 118, 127], "tfr": 112, "arrai": [4, 6, 12, 33, 41, 43, 48, 49, 53, 54, 69, 70, 71, 79, 80, 112, 113, 145, 149, 178], "rnadataset": 112, "1024": 112, "make_pars": 112, "rnadatasetvikram": 112, "rnadatasetv1": 112, "rna_mod": 112, "dna_1hot": [113, 134, 137], "n_uniform": 113, "n_sampl": 113, "nucleotid": [26, 27, 28, 42, 43, 69, 71, 113, 126, 138], "trim": [113, 138], "repres": [29, 66, 71, 84, 113, 178], "n": 113, "": [12, 13, 26, 27, 28, 34, 35, 36, 48, 66, 69, 84, 113, 116, 118, 125, 130, 145, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "forc": 113, "acgt": 113, "seq_cod": 113, "dna_1hot_index": 113, "index": [12, 48, 49, 78, 107, 113, 126, 130, 145, 178, 179], "hot1_aug": 113, "xb": [113, 145], "fwdrc": [105, 113, 155], "code": [41, 43, 61, 69, 70, 71, 73, 113, 126, 138, 145, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 178], "augment": [105, 113, 121, 129, 144, 145, 155, 179], "train": [4, 26, 27, 28, 29, 53, 113, 122, 173, 174], "x": [4, 6, 12, 16, 20, 22, 32, 48, 49, 53, 54, 69, 70, 79, 80, 113, 118, 122, 144, 145, 149, 174], "forward": [113, 145], "versu": [12, 113], "integ": 113, "xbt": 113, "version": [6, 12, 69, 80, 113, 122], "hot1_delet": 113, "po": [12, 113, 114, 115, 130], "delete_len": 113, "delet": 113, "start": [12, 32, 33, 41, 42, 43, 54, 105, 113, 115, 117, 118, 126, 149, 178], "lx4": [69, 70, 71, 113], "hot1_dna": 113, "seqs_1hot": [6, 41, 43, 45, 69, 70, 113, 122, 158], "acgtn": 113, "hot1_get": 113, "correspond": [78, 113, 126], "hot1_insert": 113, "insert_seq": 113, "insert": 113, "hot1_rc": 113, "while": [113, 122], "being": 113, "robust": 113, "track": [4, 53, 54, 79, 80, 113, 149], "beyond": [33, 113], "four": [113, 127], "hot1_set": 113, "nt": [75, 113], "set": [12, 27, 28, 45, 69, 70, 80, 113, 118, 130, 138, 145, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "dna_rc": 113, "emeraldvcf": 114, "pop_vcf_stem": 114, "fetch": [33, 114], "chrm": [32, 33, 105, 114, 130], "pos_start": [114, 155], "pos_end": [114, 155], "return_sampl": 114, "query_ld": 114, "snp_id": [114, 130], "ld_t": [114, 130], "return_po": 114, "max_ld_dist": 114, "1000000": 114, "retriev": 114, "snp": [7, 58, 61, 64, 107, 114, 130, 178], "ld": 114, "given": [6, 9, 26, 41, 43, 69, 76, 78, 79, 80, 114, 116, 118, 126, 130, 174], "gene_id": [42, 100, 103, 107, 115, 116], "tss_list": [42, 115], "geneseq": [115, 145], "chrom": [12, 41, 42, 43, 115, 118, 178], "gene_nam": 115, "tss": [42, 115, 116, 118, 145], "name": [12, 48, 115, 117, 122, 125, 126, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174], "append_tss": 115, "__str__": [115, 118, 178], "str": [12, 48, 115, 118, 122, 174, 178], "self": [12, 115, 118, 178], "identifi": [115, 116], "gene_seq": [73, 115, 145], "seq_index": 115, "seq_bin": 115, "pred_buff": 115, "map_tss_gen": 115, "tss_valu": 115, "tss_radiu": [115, 145], "genes_hdf5_fil": 116, "worker_index": 116, "worker": [116, 127], "read_1hot": 116, "read_target": 116, "gene": [29, 42, 73, 74, 78, 104, 107, 116, 118, 121, 145, 178, 179], "subset_gen": 116, "limit": [26, 41, 43, 69, 70, 116], "subset": [116, 145], "contain": [116, 121, 126], "transcript": [42, 116, 118, 138, 145], "tss_id": 116, "wi": 116, "worker_num": 116, "share": 116, "__exit__": 116, "load_chromosom": 117, "genome_fil": [4, 53, 54, 64, 79, 80, 117, 149], "load": [64, 117, 145, 173, 178], "segment": [26, 41, 43, 117, 178], "either": [117, 126], "fasta": [12, 41, 43, 49, 69, 117, 178], "chromosom": [4, 12, 13, 26, 29, 30, 32, 33, 49, 53, 54, 79, 80, 117, 149], "tabl": [48, 78, 117, 127, 128], "split_contig": 117, "chrom_seg": 117, "gaps_fil": 117, "assembli": 117, "up": [6, 12, 26, 27, 28, 69, 117, 122, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "contig": [26, 27, 28, 117], "defin": [117, 127], "gap": [49, 71, 117], "map": [12, 42, 107, 117, 118, 178], "broken": [26, 27, 28, 117], "gtf_kv": 118, "last": [33, 118], "gtf": 118, "section": 118, "pair": [12, 118], "t2g": 118, "gtf_file": 118, "id": [74, 118], "read_gen": 118, "key_id": 118, "transcript_id": 118, "sort": [61, 118], "pars": [69, 118, 127, 173, 174], "object": [12, 34, 35, 36, 66, 84, 107, 118, 127, 138, 145, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 178], "hash": [12, 48, 118, 130], "kv": 118, "add_cd": 118, "add_exon": 118, "exon": [107, 118], "__eq__": 118, "__lt__": 118, "__cmp__": 118, "thi": [12, 42, 43, 48, 66, 84, 121, 122, 138, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174], "page": [121, 179], "auto": [121, 125], "gener": [8, 55, 59, 62, 65, 66, 67, 78, 106, 121, 129, 135, 138, 144, 145, 151, 153, 157, 160, 161], "document": 121, "seqnn": [121, 125, 145, 174, 179], "metric": [77, 109, 111, 121, 126, 179], "vcf": [19, 104, 121, 179], "util": [121, 145, 179], "stream": [121, 138, 144, 179], "dataset": [119, 121, 138, 145, 158, 173, 179], "plot": [6, 69, 70, 71, 78, 121, 179], "gff": [29, 121, 179], "rnann": [121, 179], "trainer": [121, 179], "sad5": [121, 179], "bed": [4, 26, 27, 29, 41, 43, 53, 79, 80, 121, 179], "block": [12, 121, 127, 144, 179], "genom": [12, 27, 28, 41, 43, 121, 122, 173, 178, 179], "dna_io": [121, 179], "param": [121, 129, 144, 173, 174, 179], "tfrecord_batch": [121, 179], "emerald": [121, 179], "genedata": [121, 179], "seqnn_util": [121, 179], "accuraci": [20, 22, 78, 80, 84, 121, 145, 179], "creat": [121, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "sphinx": 121, "autoapi": 121, "min_valu": 122, "max_valu": 122, "tensorflow": [43, 122, 125, 145, 174], "kera": [122, 125, 174], "call": [34, 35, 36, 122, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "get_config": [122, 174], "scale": 122, "zero": [49, 122], "build": [122, 129, 144, 145], "input_shap": 122, "polyrelu": 122, "softplu": 122, "exp_max": 122, "10000": 122, "centerslic": 122, "centeraverag": 122, "lengthaverag": 122, "rope": 122, "embed": 122, "hua": 122, "et": 122, "al": 122, "qualiti": 122, "time": [12, 34, 35, 36, 122, 145], "_prepend_dim": 122, "num_dim": 122, "positional_features_central_mask": 122, "feature_s": 122, "us": [9, 12, 16, 48, 76, 78, 79, 80, 122, 126, 138, 145, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 178], "central": 122, "mask": [29, 122], "allow": [49, 122], "onli": [49, 122], "gamma_pdf": 122, "concentr": 122, "p": [9, 76, 79, 80, 122, 127, 145], "positional_features_gamma": 122, "bin_siz": 122, "stddev": 122, "start_mean": 122, "get_positional_feature_funct": 122, "positional_features_al": 122, "feature_funct": 122, "rel": 122, "each": [4, 27, 28, 30, 32, 34, 35, 36, 41, 53, 54, 58, 69, 70, 79, 80, 107, 122, 126, 145, 149, 173], "provid": [122, 145], "fraction": 122, "total": [48, 122], "arbitrari": [122, 126], "shape": [122, 126], "number": [33, 48, 122, 127, 145, 173, 174], "basi": 122, "denot": 122, "characterist": 122, "individu": [122, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "can": [12, 122, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "i": [12, 34, 35, 36, 48, 122, 125, 126, 138, 145, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174], "requir": [33, 61, 122, 127, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "sinc": [122, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "parametr": 122, "should": [12, 122, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "independ": 122, "could": 122, "still": [12, 122], "bin": [26, 41, 43, 78, 122, 145], "partit": 122, "absolut": 122, "differ": [12, 122], "take": [122, 173], "argument": [34, 35, 36, 66, 84, 122, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174], "If": [12, 34, 35, 36, 122, 126, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "result": [122, 125, 127], "e": [122, 127], "matter": 122, "both": 122, "asymmetr": 122, "positional_featur": 122, "relative_shift": 122, "logit": 122, "like": 122, "transformerxl": 122, "multiheadattent": 122, "value_s": 122, "attention_dropout_r": 122, "relative_position_symmetr": 122, "relative_position_funct": 122, "positional_dropout_r": 122, "zero_initi": 122, "transpose_strid": 122, "gate": 122, "multi": [12, 122, 126], "attent": 122, "_multihead_output": 122, "linear_lay": 122, "multihead": 122, "wheezeexcit": 122, "squeezeexcit": 122, "globalcontext": 122, "softmaxpool1d": 122, "per_channel": 122, "init_gain": 122, "float": [12, 33, 69, 70, 71, 122, 145, 174], "option": [8, 19, 21, 23, 27, 45, 51, 55, 59, 62, 65, 67, 68, 88, 89, 93, 95, 100, 101, 102, 103, 104, 106, 122, 125, 136, 142, 145, 151, 153, 157, 174], "concatposit": 122, "concaten": 122, "1d": 122, "onetotwo": 122, "j": [122, 173], "oned": 122, "averageto2d": 122, "averag": [41, 42, 43, 122, 145], "maxto2d": 122, "dotto2d": 122, "geodotto2d": 122, "concatto2d": 122, "concatdist2d": 122, "pairwis": 122, "distanc": [29, 41, 122], "matrix": [6, 7, 43, 69, 70, 122], "uppertri": 122, "unrol": 122, "its": [8, 48, 55, 59, 62, 65, 67, 106, 122, 138, 151, 153, 157], "upper": [7, 122], "triangular": [7, 122], "symmetrize2d": 122, "enforc": [122, 173], "symmetri": 122, "ensemblereversecompl": 122, "expand": [69, 70, 71, 122], "includ": [27, 28, 122, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "stochasticreversecompl": 122, "switchrevers": 122, "strand_pair": 122, "were": [26, 27, 28, 122], "x_revers": 122, "switchreversetriu": 122, "ensembleshift": 122, "uniform": 122, "stochasticshift": 122, "shift_max": [12, 122], "factorinvers": 122, "components_npi": 122, "invers": 122, "factor": [49, 122], "current": [122, 144], "verbos": [26, 27, 28, 49, 122, 127, 138, 158, 177], "regress": [20, 22, 125], "mean_squared_error_udot": 125, "y_true": 125, "y_pred": 125, "udot_weight": 125, "meansquarederrorudot": 125, "reduct": [80, 125], "losses_util": 125, "reductionv2": 125, "mse_udot": 125, "python": 125, "lossfunctionwrapp": 125, "poisson_kl": 125, "kl_weight": 125, "epsilon": 125, "001": [125, 160, 174], "poissonkl": 125, "poisson_multinomi": 125, "total_weight": [125, 174], "1e": [49, 125, 161], "06": [49, 125, 161], "rescal": 125, "poissonmultinomi": 125, "seqauc": 125, "curv": 125, "roc": [16, 125], "summar": 125, "auc": 125, "update_st": 125, "updat": [84, 125, 126], "interpolate_pr_auc": 125, "add": [26, 69, 70, 71, 74, 125, 127, 138], "remov": 125, "summari": [66, 125], "It": [125, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "clear": 125, "why": 125, "metrics_util": 125, "aren": [125, 145], "t": [12, 69, 125, 126, 145, 173, 174], "work": 125, "26": [125, 174], "m": [12, 125], "hack": 125, "solut": 125, "compar": [12, 78, 125], "instead": 125, "sample_weight": 125, "reset_st": 125, "adjust_max": 126, "stop": [126, 174], "start_valu": 126, "stop_valu": 126, "reverse_complement_transform": 126, "onehot": 126, "reverse_compl": 126, "input_seq": 126, "dimens": [41, 43, 58, 71, 107, 126], "A": [126, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174], "simpli": 126, "varianc": [41, 43, 49, 78, 126, 145], "entri": 126, "follow": [126, 173], "api": [126, 173, 179], "an": [7, 12, 29, 58, 64, 69, 107, 126, 127, 145, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 178], "idempot": 126, "when": [33, 126, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174], "variance_valu": 126, "whose": [126, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "update_op": 126, "non": [12, 126], "r2_metric": 126, "statist": [20, 22, 27, 28, 66, 78, 84, 104, 126], "instanc": [34, 35, 36, 42, 126, 145, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "new": [6, 69, 126], "_per_target_mean": 126, "broadcast": 126, "string": [48, 126, 173], "compat": [126, 173], "The": [12, 66, 84, 126, 173, 174], "value_op": 126, "ha": [8, 12, 55, 58, 59, 62, 65, 67, 106, 107, 126, 151, 153, 157, 173, 174], "_per_target_vari": 126, "per_target_r2": 126, "distinct": 126, "r2_averaged_over_all_prediction_task": 126, "task": 126, "layer_extend": 127, "var": 127, "process": [12, 13, 127], "job": [8, 27, 43, 55, 59, 62, 65, 67, 84, 106, 127, 151, 153, 157, 173], "proper": 127, "read_job_param": [127, 173], "job_fil": 127, "read": [12, 29, 32, 41, 42, 43, 49, 127, 178], "text": 127, "make_hparam": 127, "num_worker_replica": 127, "num_ps_replica": 127, "dictionari": [43, 107, 127, 173], "see": [127, 173], "basenji": [127, 173], "googl": [127, 173], "more": [33, 127, 145, 173], "inform": [48, 49, 127, 173], "replica": 127, "g": [12, 127, 145], "http": [127, 145, 174], "google3": 127, "learn": [12, 127, 174], "brain": [127, 173], "contrib": 127, "borg": 127, "l": [69, 70, 71, 127, 145], "112": 127, "rcl": 127, "174372550": 127, "113": 127, "add_hparams_cnn": 127, "cnn": 127, "hyper": [43, 127, 174], "definit": 127, "add_hparams_dr": 127, "add_cnn_param": 127, "add_cnn_params_cnn": 127, "add_cnn_params_dens": 127, "resnet": 127, "consist": 127, "phase": 127, "interact": [69, 127], "directli": 127, "propag": 127, "convparam": 127, "add_cnn_params_dr": 127, "collect": 127, "namedtupl": 127, "filter_s": [48, 127], "skip_lay": 127, "concat": 127, "preced": 127, "jointplot": [77, 109, 128, 140], "vals1": [12, 44, 128], "vals2": [12, 44, 128], "out_pdf": [12, 44, 48, 49, 77, 78, 109, 128, 140, 172], "alpha": [16, 44, 128], "5": [27, 28, 44, 48, 128, 174, 178], "point_siz": 128, "10": [12, 78, 128, 174], "squar": 128, "cor": 128, "x_label": [44, 128], "y_label": [44, 128], "figsiz": 128, "6": 128, "kind": [32, 128], "scatter": [78, 128], "text_mean": 128, "tight": 128, "outlier_low": 128, "outlier_high": 128, "regplot": [44, 128], "poly_ord": 128, "color": [78, 128], "print_sig": 128, "titl": 128, "scatter_lim": [12, 128], "buffer": [4, 12, 53, 69, 70, 79, 80, 128, 138, 158], "plot_a": 128, "ax": [6, 69, 70, 71, 128], "left_edg": 128, "height": 128, "plot_c": 128, "plot_g": 128, "plot_t": 128, "default_color": 128, "default_plot_func": 128, "seqlogo": 128, "seq_scor": 128, "set_default": [129, 144], "build_model": [129, 144], "build_ensembl": [129, 144], "ensemble_shift": [129, 144, 145], "ensembl": [129, 144, 145], "model": [12, 13, 16, 27, 28, 43, 45, 64, 80, 129, 138, 144, 145, 158], "evalu": [129, 144], "seq_data": [129, 144], "head_i": [129, 144], "mse": [78, 129], "gradient": [129, 144, 145, 158, 174], "restor": [129, 144], "model_fil": [129, 144], "trunk": [129, 144], "save": [12, 80, 129, 130, 144, 145], "sad_h5_fil": [63, 130], "sad_kei": 130, "sad": [13, 58, 60, 64, 69, 70, 107, 130], "compute_norm": [130, 174], "recompute_norm": 130, "__getitem__": [130, 138, 158], "si_ti": 130, "score": [6, 45, 49, 69, 70, 71, 130], "fit_cauchi": [60, 130], "131072": 130, "fit": [130, 173, 174], "specif": [8, 12, 19, 27, 28, 29, 55, 59, 62, 65, 67, 69, 70, 104, 106, 130, 138, 145, 151, 153, 157], "cauchi": 130, "hdf5": [7, 12, 19, 42, 43, 58, 64, 69, 104, 107, 130, 145], "norm_cauchi": 130, "target_set": 130, "cage": 130, "within": [27, 28, 29, 130], "snp_i": [64, 130], "sad_pct": 130, "chrsad5": 130, "sad_h5_path": 130, "popul": 130, "eur": 130, "index_chr": 130, "sad5_kw_arg": 130, "index_snp": 130, "rsid": [74, 130], "open_chr_sad5": 130, "retrieve_snp": 130, "set_popul": 130, "snp_chr_index": 130, "snp_index": 130, "snp_po": 130, "target_info": 130, "build_block": 144, "block_param": 144, "save_repr": 144, "build_emb": 144, "conv_layer_i": 144, "ensemble_rc": 144, "build_sad": 144, "build_slic": 144, "target_sum": 144, "downcast": 144, "loss_label": [144, 174], "poisson": 144, "loss_fn": 144, "get_bn_lay": 144, "bn_layer_i": 144, "get_conv_lay": 144, "get_dense_lay": 144, "layer_i": 144, "get_conv_weight": 144, "kernel": 144, "pos_slic": 144, "gradients_func": 144, "__call__": [34, 35, 36, 144, 174], "float32": [144, 145, 173], "test": [4, 12, 26, 27, 28, 29, 53, 79, 80, 145, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "interract": 145, "seqnnmodel": 145, "build_grad": 145, "sum": [12, 145], "respect": [66, 84, 145, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "some": [4, 49, 53, 79, 80, 145], "In": [12, 48, 69, 70, 71, 145, 178], "build_grads_gen": 145, "which": [12, 69, 70, 145, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "extract": [138, 145], "sess": [43, 45, 145, 158, 173], "batcher": [145, 173], "rc": [29, 145, 173], "mc_n": 145, "return_al": 145, "session": [43, 145], "out": [12, 69, 70, 71, 145, 178], "layer_grad": 145, "u": 145, "layer_repr": 145, "_gradients_ensembl": 145, "fd": 145, "ensemble_fwdrc": 145, "return_var": 145, "feed": 145, "gradients_gen": 145, "tsss": [42, 145], "note": [145, 173], "implement": [145, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "yet": [12, 138, 145], "thei": 145, "re": 145, "trickier": 145, "here": [12, 145], "becaus": [138, 145], "d": 145, "need": [12, 145, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "match": [48, 145, 160, 161], "flip": [145, 178], "hidden": 145, "test_batch": 145, "unbuff": 145, "_predict_ensembl": 145, "ds_index": 145, "target_index": [45, 69, 70, 78, 145], "embed_penultim": 145, "predict_h5_manu": 145, "down_sampl": [80, 145], "mont": 145, "carlo": 145, "estim": [12, 145, 173], "consid": [12, 138, 145, 174], "uniformli": [29, 145], "space": [33, 145], "resolut": [49, 145], "predict_h5": 145, "preidction": 145, "retyrn": 145, "predict_tfr": 145, "down": 145, "predict_gen": 145, "test_batches_p": 145, "256": [138, 145], "cover": 145, "mark": 145, "radiu": 145, "quantifi": 145, "transcript_pr": 145, "test_tfr": 145, "handle_ph": 145, "where": [145, 173], "queue": 145, "handl": [138, 145], "placehold": 145, "acc": 145, "test_h5": 145, "test_h5_manu": 145, "running_mean": 145, "u_k1": 145, "x_k": 145, "k": [12, 145], "running_varsum": 145, "v_k1": 145, "m_k1": 145, "m_k": 145, "run": [12, 66, 84, 90, 91, 145, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "numer": 145, "ref": 145, "www": 145, "johndcook": 145, "com": 145, "blog": [145, 174], "standard_devi": 145, "predstream": 158, "seqs_gen": [138, 158], "stream_seq": [138, 158], "interfac": [138, 158, 173], "acquir": [138, 158], "via": [80, 138, 158], "mechan": [138, 158], "rather": [69, 138, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "than": [33, 69, 138, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "get": [138, 158, 173], "them": [6, 12, 41, 43, 45, 69, 138, 158], "onc": [138, 158], "excess": [138, 158], "memori": [12, 138, 158], "chunk": [138, 158], "predstreamfe": 158, "stream_length": 158, "predgradstream": 158, "shuffle_buffer_depth_per_fil": 173, "32": 173, "num_files_to_parallel_interleav": 173, "tfrecord_dataset": 173, "tfr_data_files_pattern": 173, "target_length": [159, 173], "use_static_batch_s": 173, "format": [27, 28, 48, 173], "exampl": 173, "zlib": 173, "compress": 173, "field": 173, "fixedlenfeatur": 173, "pattern": 173, "potenti": 173, "glob": 173, "gfile": 173, "vocabulari": 173, "locat": 173, "modekei": 173, "have": [78, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "fix": 173, "we": [12, 69, 173], "don": 173, "pass": [66, 84, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "drop": 173, "few": 173, "doesn": 173, "divid": [26, 27, 28, 29, 173], "caus": 173, "except": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "produc": [173, 178], "tfrecord_dataset_multi": 173, "genome_target": 173, "tfr_data_file_pattern": 173, "make_data_op": [84, 159, 173], "files_pattern": 173, "your": 173, "path": 173, "For": [48, 173], "cn": 173, "sandbox": 173, "home": 173, "mlbileschi": 173, "num_possible_augment": 173, "augment_with_compl": 173, "shift_augment_offset": 173, "make_input_fn": 173, "data_file_pattern": 173, "input_fn": 173, "experi": 173, "order_tfrecord": 173, "check": [8, 12, 55, 59, 62, 65, 67, 106, 151, 153, 157, 173], "my": [12, 173], "success": 173, "els": 173, "empti": [12, 173], "tfrecordbatch": 173, "load_target": 173, "naf": 173, "64": [12, 173], "pool_width": [26, 41, 42, 43, 173], "shuffl": [20, 22, 173], "mani": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "ar": [26, 27, 28, 43, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "unus": 173, "next": [64, 173], "reset": 173, "parse_loss": 174, "keras_fit": 174, "spec_weight": 174, "method": [34, 35, 36, 66, 84, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174], "train_data": 174, "eval_data": [135, 174], "num_gpu": 174, "compil": 174, "seqnn_model": [155, 174], "fit_kera": 174, "fit2": 174, "fit_tap": 174, "make_optim": 174, "keepdim": 174, "unitwise_norm": 174, "adaptive_clip_grad": 174, "clip_factor": 174, "ep": 174, "earlystoppingmin": 174, "min_epoch": 174, "callback": 174, "earlystop": 174, "monitor": 174, "quantiti": 174, "improv": [12, 174], "minimum": [69, 70, 71, 174], "epoch": [49, 84, 174], "on_epoch_end": 174, "cyclical1learningr": 174, "initial_learning_r": 174, "maximal_learning_r": 174, "final_learning_r": 174, "step_siz": 174, "optim": [12, 174], "schedul": 174, "learningrateschedul": 174, "cyclic": 174, "yashuseth": 174, "2018": 174, "11": 174, "tune": 174, "best": 174, "practic": 174, "decai": 174, "warmup": 174, "warmup_step": 174, "decay_schedul": 174, "h": 174, "huggingfac": 174, "so": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174], "callabl": [66, 84, 174], "rest": 174, "part": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174], "polynomi": 174, "prefix": 174, "dure": 174, "safe_next": 174, "data_it": 174, "retri": 174, "sleep": 174, "exec_par": 177, "cmd": 177, "max_proc": 177, "cap_allel": 178, "allel": [61, 73, 178], "cap": 178, "figur": 178, "intersect_seqs_snp": 178, "vcf_file": 178, "vision_p": 178, "intersect": [26, 27, 28, 41, 43, 107, 178], "proport": [12, 178], "visibl": 178, "seqs_snp": 178, "overlap": [26, 27, 28, 41, 43, 107, 178], "intersect_snps_seq": 178, "seq_coord": [42, 54, 149, 178], "snp_seg": 178, "snp_seq1": 178, "genome_open": [61, 64, 105, 138, 178], "attr": [48, 49, 178], "open": [4, 48, 49, 53, 54, 79, 80, 149, 178], "seq_vecs_list": 178, "surround": 178, "snps_seq1": 178, "genome_fasta": 178, "return_seq": 178, "seq_vec": 178, "seq_head": 178, "header": [4, 6, 53, 54, 79, 80, 149, 178], "seq_snp": [73, 178], "snps2_seq1": 178, "genome1_fasta": 178, "genome2_fasta": 178, "major": 178, "minor": 178, "dna_length_1hot": 178, "adjust": 178, "1hot": 178, "vcf_count": 178, "vcf_snp": 178, "require_sort": 178, "validate_ref_fasta": 178, "flip_ref": 178, "pos2": 178, "start_i": 178, "end_i": 178, "vcf_sort": 178, "vcf_line": 178, "attribut": [159, 162, 163, 164, 165, 166, 167, 168, 169, 178], "flip_allel": 178, "refer": [78, 178, 179], "first": [12, 178], "alt": 178, "get_allel": 178, "longest_alt": 178, "longest": 178, "modul": 179, "search": 179, "main": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 119, 120, 123, 124, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 170, 171, 172, 175, 176], "_bytes_featur": [3, 29, 31, 119], "_int_featur": [3, 31], "bigwig_open": [4, 53, 54, 79, 80, 149], "bw_file": [4, 53, 54, 64, 79, 80, 149], "bigwig": [4, 12, 42, 43, 45, 53, 54, 79, 80, 149], "bigwig_writ": [4, 53, 54, 64, 79, 80, 149], "signal_ti": [4, 53, 79, 80], "track_b": [4, 53, 79, 80], "bed_set": [4, 53, 79, 80], "signal": [4, 41, 43, 53, 54, 79, 80, 149], "skip": [4, 53, 79, 80], "side": [4, 18, 53, 54, 69, 70, 79, 80, 133, 149], "valid": [4, 6, 26, 27, 28, 29, 49, 53], "plot_heat": [6, 69, 70], "sat_score_ti": [6, 69, 70, 71], "min_limit": [6, 69, 70], "satmut": [6, 69, 70, 71], "delta": [6, 69, 70, 71], "matplotlib": [6, 69, 70, 71], "sat_delta_ti": [6, 69, 70], "l_sm": [6, 69, 70, 71], "satur": [6, 66, 69, 70, 135], "mutagenesi": [6, 66, 69, 70, 135], "plot_scd": 6, "sat_scd_ti": 6, "scd": [6, 7], "maximum": [6, 12, 69, 70, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "mutat": [6, 69, 70, 71], "score_matrix": 6, "sat_pr": [6, 69], "fs_clean": 6, "clean": 6, "satmut_seq": [6, 69], "satmut_len": [6, 69, 70], "subplot_param": [6, 69, 70, 71], "subplot": [6, 69, 70, 71], "layout": [6, 69, 70, 71], "variou": [6, 12, 69, 70, 71], "initialize_output_h5": [7, 58, 64, 107], "scd_stat": 7, "target_id": [7, 64, 78], "target_label": [7, 64, 78], "stat": [7, 25, 58, 64, 107], "ut_dens": 7, "preds_ut": 7, "write_snp": [7, 58, 107], "ref_pr": [7, 58, 107], "alt_pr": [7, 58, 107], "scd_out": 7, "si": [7, 58], "plot_dir": 7, "plot_lim_min": 7, "hdf": [7, 58, 66, 107], "collect_t": [8, 59, 65, 74], "file_nam": [8, 59, 65, 74, 151, 157], "num_proc": [8, 55, 59, 65, 67, 74, 106, 151, 153, 157], "collect_h5": [8, 55, 59, 67, 106, 151, 153, 157], "job_complet": [8, 55, 59, 62, 65, 67, 106, 151, 153, 157], "pi": [8, 55, 59, 62, 65, 67, 106, 151, 153, 157], "ben_hoch": [9, 76, 79, 80], "p_valu": [9, 76, 79, 80], "q": [9, 76, 79, 80], "benjamini": [9, 76, 79, 80], "hochberg": [9, 76, 79, 80], "fdr": [9, 76, 79, 80], "test_peak": [9, 76], "peaks_out_fil": [9, 76], "compute_cut_norm": 12, "cut_bias_km": 12, "read_weight": 12, "chrom_length": 12, "cut": 12, "bia": 12, "unfinish": 12, "kmer_norm": 12, "row_nzcols_geti": 12, "ri": 12, "row": 12, "nonzero": 12, "column": 12, "row_nzcols_get": 12, "row_nzcols_set": 12, "v": 12, "columsn": 12, "single_or_pair": 12, "bam_fil": 12, "guess": 12, "bam": 12, "distribute_multi_succint": 12, "multi_weight_matrix": 12, "genome_unique_coverag": 12, "multi_window": 12, "max_iter": 12, "converge_t": 12, "wonder": 12, "speed": 12, "thing": 12, "much": 12, "genome_coverag": 12, "loop": 12, "through": 12, "myself": 12, "benchmark": 12, "dot": 12, "product": 12, "determin": [12, 41, 43, 69, 70, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "wai": [12, 69], "assess": 12, "converg": 12, "mayb": 12, "1k": 12, "act": [12, 49], "proxi": 12, "initialize_km": 12, "kmer": 12, "mer": 12, "regplot_gc": 12, "regplot_shift": 12, "preds2": 12, "genomecoverag": 12, "smooth_multi_sd": 12, "clip_max": 12, "clip_max_multi": 12, "shift_cent": 12, "shift_forward": 12, "shift_revers": 12, "all_overlap": 12, "all_uniqu": 12, "maps_t": 12, "ordereddict": 12, "pysam": 12, "fastafil": 12, "unique_count": 12, "uniqu": 12, "coverag": 12, "r": 12, "gaussian": 12, "deviat": 12, "multi_max": 12, "mapper": 12, "due": 12, "mi": 12, "fear": 12, "align": [12, 26, 27, 28, 49, 71], "maxim": 12, "cross": [12, 26, 28], "correl": [12, 78], "align_shift": 12, "helper": 12, "event": 12, "distribute_multi": 12, "local": 12, "window": [12, 30], "below": 12, "estimate_coverag": 12, "smooth": [12, 30], "gc_normal": 12, "gc": 12, "sklearn": [12, 43], "To": 12, "control": 12, "learn_gc": 12, "fragment_sd": 12, "learn_gc_bas": 12, "wide": 12, "baselin": 12, "gc_model": 12, "gc_base": 12, "index_genom": 12, "gi": [12, 27], "ci": [12, 88, 89, 93, 142], "genome_index": 12, "genome_index_chrom": 12, "genome_chr": 12, "np": 12, "chrom_index": 12, "learn_shift_pair": 12, "fragment": 12, "learn_shift_singl": 12, "shift_min": 12, "50": [12, 20, 22], "350": 12, "discord": 12, "read_bam": 12, "genome_sort": 12, "structur": 12, "infer_active_block": 12, "min_inact": 12, "50000": 12, "infer_active_blocks_groupbi": 12, "ll": 12, "groupbi": 12, "ineffici": 12, "read_multi_bwa": 12, "multi_posit": 12, "multi_read": 12, "multi_weight": 12, "align_shift_forward": 12, "align_shift_revers": 12, "bwa": 12, "read_multi_nh": 12, "read_id": 12, "last_read_id": 12, "multi_read_index": 12, "nh": 12, "tag": 12, "set_clip": 12, "threshold": [12, 26, 27, 28, 41, 43], "must": [12, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "clip_multi": 12, "multi_clip_index": 12, "conserv": 12, "ask": 12, "compel": 12, "pre": 12, "adaptive_t": 12, "abov": 12, "adapt": 12, "know": [12, 41, 43], "hasn": 12, "been": [12, 58, 78, 107], "output_fil": 12, "smooth_sd": 12, "zero_ep": 12, "003": 12, "go": 12, "facilit": 12, "print": [12, 48, 49, 78, 84, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "correct": 12, "doubl": 12, "cigar_len": 12, "cigar_str": 12, "h5_annot_chr": 13, "sad_fil": [13, 16], "bim_fil": 13, "annot_fil": 13, "targets_df": [13, 26, 27, 58, 107], "sad_stat": [13, 16, 19, 58, 64, 66, 67, 106, 153], "unsign": 13, "separ": 13, "bim": 13, "annot": 13, "sample_sad": [13, 60], "sad_dir": [13, 23], "sad_max": 13, "read_enough_sad": 13, "fold_roc": 16, "y": [16, 20, 22, 30, 48, 92], "fold": [16, 20, 22, 26, 28, 29], "random_st": [16, 20, 22], "44": [16, 20, 22], "san": 16, "plot_roc": 16, "fpr": 16, "tpr": 16, "randfor_ful": 16, "min_samples_leaf": 16, "n_job": [16, 20, 22], "random": [16, 20, 22], "forest": [16, 20, 22], "randfor_roc": 16, "n_estim": [16, 20, 22], "100": [16, 49], "ridge_roc": 16, "read_indel": 16, "indel_ab": 16, "indel_bool": 16, "read_sad": 16, "read_auroc": [18, 133], "stats_fil": [18, 133], "ttest_alt": [18, 133], "b": [18, 133], "altern": [18, 40, 61, 77, 81, 109, 133, 140], "complete_h5": [19, 100, 104], "h5_file": [19, 100, 104, 119, 136], "ensemble_sad_h5": 19, "ensemble_h5_fil": [19, 101, 102, 103, 104], "scores_fil": [19, 21, 23, 51, 101, 102, 103, 104, 136], "options_str": [19, 21, 23, 51, 68, 88, 89, 93, 95, 100, 101, 102, 103, 104, 136, 142], "group_opt": [19, 21, 23, 51, 100, 101, 102, 103, 104], "rep_dir": [19, 21, 23, 51, 68, 88, 89, 93, 101, 102, 103, 104, 142], "split_sad": 19, "it_out_dir": [19, 104], "posneg": [19, 104, 132], "vcf_dir": [19, 104], "merg": [19, 26, 104], "tissu": [19, 104, 132], "randfor_cv": [20, 22], "max_featur": [20, 22], "log2": [20, 22, 78], "level": [20, 22], "ensemble_scores_h5": [21, 23, 51, 101, 102, 103], "ensemble_dir": [21, 23, 51], "read_metr": [21, 23, 77, 109, 111, 140], "sat_dir": 21, "msl": 22, "plot_curv": 25, "cmp_df": 25, "read_train": 25, "train_fil": [25, 84], "epoch_stat": 25, "epoch_lin": 25, "annotate_unmap": 26, "mseq": [26, 27], "unmap_b": [26, 41, 43], "unmapp": [26, 41, 43], "annoat": [26, 41, 43], "nan": [26, 32, 41, 43, 49, 71], "possibl": [26, 41, 43], "ignor": [26, 41, 43, 69, 70], "modelseq": [26, 27, 28, 160, 161], "seqs_unmap": 26, "nxl": [26, 41, 43], "binari": [26, 41, 43], "indic": [26, 41, 43], "break_large_contig": [26, 27, 28], "break_t": [26, 27, 28], "break": [26, 27, 28, 41, 43], "larg": [26, 27, 28], "half": [26, 27, 28], "until": [26, 27, 28], "under": [26, 27, 28, 41, 43], "contig_sequ": [26, 27, 28], "snap": [26, 27, 28], "curate_peak": 26, "crop_bp": 26, "peak": 26, "nearest": 26, "bp": 26, "divide_contigs_chr": 26, "test_chr": [26, 29], "valid_chr": [26, 29], "divide_contigs_fold": 26, "divide_contigs_pct": 26, "test_pct": [26, 27, 28, 29], "valid_pct": [26, 27, 28, 29], "pct_abstain": [26, 27, 28], "aim": [26, 27, 28], "percentag": [26, 27, 28, 29], "limit_contig": 26, "filter_b": [26, 41, 43], "fcontig": 26, "rejoin_large_contig": [26, 27, 28], "rejoin": [26, 27, 28], "write_seqs_b": [26, 27], "quantify_leakag": [27, 28], "align_net_fil": [27, 28], "train_contig": [27, 28], "valid_contig": [27, 28], "test_contig": [27, 28], "quanitfi": [27, 28], "leakag": [27, 28], "connect_contig": [27, 28], "net_fill_min": [27, 28], "form": [27, 28], "net": [27, 28], "compon": [27, 28, 41, 43], "contig_stats_genom": [27, 28], "divide_contig_compon": 27, "contig_compon": [27, 28], "intersect_contigs_net": [27, 28], "graph_contigs_net": [27, 28], "genome_i": [27, 28], "edg": [27, 28], "make_net_graph": [27, 28], "interv": [27, 28, 30, 32, 49], "make_read_job": 27, "seqs_bed_fil": 27, "seqs_cov_dir": 27, "basenji_data_read": [27, 121, 179], "py": [27, 49], "make_write_job": 27, "tfr_dir": 27, "unmap_npi": 27, "targets_start": 27, "sum_target": 27, "basenji_data_writ": [27, 121, 179], "report_divide_stat": [27, 28], "report": [27, 28], "about": [27, 28], "between": [27, 28], "graphseq": [27, 28], "net_olap_min": 28, "genome_out_dir": 28, "divide_components_fold": 28, "divide_components_pct": 28, "min_olap": 28, "fold_contig": 28, "report_divide_stats_v1": 28, "divide_genes_chr": 29, "genes_df": 29, "cluster_gen": 29, "cluster_gene_dist": 29, "cluster": [29, 42, 61, 78], "divide_genes_fold": 29, "divide_genes_folds_b": 29, "split_bed_fil": 29, "divide_genes_pct": 29, "genes_b": 29, "gff_df": 29, "gff_file": 29, "gene_index": 29, "datafram": 29, "sufficient_sequ": 29, "n_allowed_pct": 29, "suffici": 29, "box_pt": 30, "flat": 30, "read_blacklist": [30, 32], "blacklist_b": [30, 32], "black_buff": [30, 32], "20": [30, 32], "tree": [30, 32], "blacklist": [30, 32], "interp_nan": 32, "linearli": 32, "interpol": 32, "covfac": 32, "cov_fil": 32, "preprocess_b": 32, "close": 32, "tround": 33, "decim": 33, "truncat": 33, "rround": 33, "randomli": 33, "digit": 33, "bernoulli": 33, "rv": 33, "fetch_dna": 33, "fasta_open": 33, "mai": [33, 66, 84, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "reach": 33, "feature_byt": 33, "byte": 33, "feature_float": 33, "memoiz": [34, 35, 36], "func": [34, 35, 36], "decor": [34, 35, 36], "cach": [34, 35, 36], "later": [34, 35, 36], "reevalu": [34, 35, 36], "__repr__": [34, 35, 36], "docstr": [34, 35, 36], "__get__": [34, 35, 36], "obj": [34, 35, 36], "objtyp": [34, 35, 36], "support": [34, 35, 36], "read_stat": 40, "exp_dir": 40, "num_fold": [40, 132, 140], "num_cross": [40, 132], "stat_test": [40, 77, 81, 109, 140], "ref_cor": [40, 77, 81, 109, 140], "exp_cor": [40, 77, 81, 109, 140], "annotate_na": [41, 43], "seqs_seg": [41, 43], "seqs_na": [41, 43], "batch_end": [41, 43], "bstart": [41, 43], "batch_max": [41, 43], "keep": [41, 43], "limit_seg": [41, 43], "fsegment": [41, 43], "filter_bor": [41, 43], "var_t": [41, 43], "bore": [41, 43], "without": [41, 43], "sxlxt": [41, 43], "targets_excit": [41, 43], "fourier_transform": [41, 43], "dim": [41, 43, 80], "fourier": [41, 43, 80], "fourier_r": [41, 43], "real": [41, 43], "fourier_imag": [41, 43], "imaginari": [41, 43], "segments_1hot": [41, 43], "advanc": [41, 43], "you": [41, 43, 66, 84, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "bigwig_tss_target": 42, "wig_fil": [42, 43], "adjac": [42, 43], "tss_target": [42, 78], "check_wig": 42, "target_wigs_fil": 42, "cluster_tss": 42, "transcript_gen": 42, "merge_dist": 42, "wig5_tss_target": 42, "w5_file": [42, 43], "wiggl": [42, 43], "bigwig_batch": 43, "log10to2": 43, "cov_multipli": 43, "those": 43, "appropri": 43, "latent_transform": 43, "targets_wig": 43, "latent": 43, "targets_lat": 43, "sxdxt": 43, "w5_batch": 43, "score_writ": 45, "seqs_chrom": 45, "seqs_start": 45, "weblogo_opt": 48, "NO": 48, "errorbar": 48, "fineprint": 48, "get_motif_protein": 48, "meme_db_fil": 48, "motif_id": 48, "protein": 48, "meme": [48, 49], "db": 48, "info_cont": [48, 49], "pwm": [48, 49], "bg_gc": [48, 49], "415": [48, 49], "origin": 48, "analysi": 48, "ani": [48, 66, 84, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "futur": 48, "ought": 48, "switch": 48, "hg38": 48, "make_filter_pwm": 48, "filter_fasta": 48, "top": 48, "hit": 48, "meme_add": [48, 49], "meme_out": 48, "f": [48, 49], "filter_pwm": [48, 49], "nsite": 48, "trim_filt": [48, 49], "grow": [48, 49], "site": 48, "meme_intro": [48, 49], "meme_fil": 48, "motif": [48, 49, 69], "intro": 48, "obtain": 48, "background": 48, "freq": 48, "mem_out": 48, "name_filt": 48, "num_filt": 48, "tomtom_fil": 48, "tomtom": 48, "filter_nam": 48, "plot_target_corr": 48, "filter_out": 48, "seq_target": 48, "target_nam": 48, "seq_op": 48, "plot_filter_seq_heat": 48, "whiten": 48, "drop_dead": 48, "plot_filter_seg_heat": 48, "filter_motif": 48, "param_matrix": 48, "filter_possum": 48, "possum_fil": 48, "mult": 48, "200": 48, "plot_filter_heat": 48, "plot_filter_logo": 48, "out_prefix": [48, 49, 78], "maxpct_t": 48, "raw_t": 48, "plot_score_dens": 48, "f_score": 48, "annotate_motif": 49, "motifs_dir": 49, "background_fasta": 49, "meme_db": 49, "fasta_pwm": 49, "motif_fasta_fil": 49, "motifs_meme_out": 49, "motif_label": 49, "cluster_leiden": 49, "seq_nn": 49, "end_align_fasta": 49, "seqlets_fasta": 49, "msa_fasta": 49, "pwm_iter": 49, "seqlet": 49, "extend_interv": 49, "seqlet_interv": 49, "seqlet_length": 49, "filter_featur": 49, "min_var": 49, "return_mask": 49, "uninform": 49, "filter_seqlet": 49, "seqlet_act": 49, "genome_fasta_fil": 49, "end_dist": 49, "make_feature_fasta": 49, "seqlet_featur": 49, "seqlet_dna": 49, "feature_fasta_fil": 49, "max_pct": 49, "666": 49, "high": 49, "make_negative_fasta": 49, "negatives_fasta_fil": 49, "max_seq": 49, "16384": 49, "neg": 49, "nearest_neighbor": 49, "neighbor": 49, "16": 49, "thread": [49, 66, 84], "plot_kernel": 49, "kernel_weight": 49, "plot_logo": 49, "align_seqlets_shift": 49, "process_featur": 49, "perform": 49, "analys": 49, "process_factor": 49, "seqlet_h": 49, "seqlet_w": 49, "feature_mask": 49, "read_pr": 49, "predict_h5_fil": 49, "range_step": 49, "basenji_predict_b": [49, 121, 179], "run_drem": 49, "run_hom": 49, "write_factor": 49, "factor_coef": 49, "out_fil": [49, 78], "nmf": 49, "light": 49, "write_msa": 49, "msa_1hot": 49, "multipl": 49, "store": 49, "cisbp_nam": 50, "tf_name_long": 50, "seq_crop": [54, 149], "seqs_coord": [54, 149], "chr": [54, 149], "targets_length": 58, "write_pct": [58, 107], "sad_out": 58, "percentil": [58, 107], "ref_preds_sum": 58, "alt_preds_sum": 58, "collaps": 58, "write_snp_len": 58, "maintain": [58, 107], "chr_sad_h5_fil": 60, "num_snp": 60, "ti": 60, "cluster_snp": 61, "center_pct": 61, "satisfi": 61, "snpcluster": 61, "add_snp": 61, "delimit": 61, "get_1hot": 61, "make_alt_1hot": 61, "ref_1hot": 61, "snp_seq_po": 61, "ref_allel": 61, "alt_allel": 61, "sad_h5_df": 63, "quant_h5_fil": 63, "initialize_output_zarr": 64, "zarr": 64, "snps_next_batch": 64, "collect_zarr": 65, "satmut_gen": [66, 135], "seqs_dna": 66, "mut_start": 66, "mut_end": 66, "plotwork": 66, "plot_queu": 66, "overrid": [66, 84, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "subclass": [66, 84, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "invok": [66, 84], "constructor": [66, 84, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "sequenti": [66, 84], "keyword": [66, 84], "taken": [66, 84], "scorework": 66, "score_queu": 66, "scores_h5": 66, "return_augm": 66, "train_opt": [68, 88, 89, 93, 95, 142], "enrich_act": [69, 70], "activity_enrich": [69, 70], "most": [69, 70], "expand_4l": [69, 70, 71], "sat_lg_ti": [69, 70, 71], "sat": [69, 70, 71], "mut": [69, 70, 71], "gain": [69, 70, 71], "One": [69, 70, 73], "sat_loss_4l": [69, 70, 71], "delta_matrix": 69, "smxlxt": 69, "sat_delta": 69, "todo": 69, "chang": [69, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "That": 69, "better": 69, "pick": 69, "flank": 69, "loss_gain": 69, "sat_preds_si": 69, "parse_input": 69, "input_fil": 69, "might": 69, "heatmap": [69, 70, 78], "plot_predict": [69, 70], "plot_sad": [69, 70], "sat_loss_ti": [69, 70], "sat_gain_ti": [69, 70], "plot_seqlogo": [69, 70, 71], "pseudo_pct": [69, 70, 71], "logo": [69, 70, 71], "seq_align": 71, "anoth": 71, "expand_scores_align": 71, "scores1": 71, "scores2": 71, "seq1_1hot": 71, "seq2_1hot": 71, "seq1_align": 71, "seq2_align": 71, "global_align": 71, "setup_plot": 71, "figure_width": 71, "plot_len": 71, "alleles_1hot": 73, "collect_table_multi": 74, "log_pseudo": [74, 78], "multilin": 74, "__slots__": 74, "a1": 74, "a2": 74, "snp_dist_gen": 74, "print_lin": 74, "out_open": 74, "nt_index": 75, "label1": [77, 109, 140], "label2": [77, 109, 140], "acc_glob_str": [77, 81, 109, 111], "alternative_tss": 78, "tss_pred": 78, "gene_data": 78, "out_bas": 78, "tss_var_t": 78, "scatter_pct": 78, "02": 78, "experiment": 78, "tss1": 78, "tss2": 78, "ratio": 78, "clustermap": 78, "gene_valu": 78, "seaborn": 78, "cor_tabl": 78, "gene_target": 78, "gene_pr": 78, "draw_plot": 78, "gene_t": 78, "gene_it": 78, "plot_scatt": 78, "normalize_target": 78, "outlier_mult": 78, "quantile_norm": 78, "gene_expr": 78, "quantile_stat": 78, "median": 78, "quantil": 78, "replicate_correl": 78, "replicate_list": 78, "scatter_plot": 78, "studi": 78, "replic": 78, "quantile_accuraci": 78, "gene_stat": 78, "numq": 78, "quantile_index": 78, "point": 78, "variance_accuraci": 78, "compute_full_accuraci": 80, "dr": 80, "test_targets_ful": 80, "oppos": 80, "reconstruct": 80, "read_cor": 81, "flag": [84, 86, 90, 91, 94], "_": [84, 86, 90, 91, 94], "params_fil": [84, 90, 91], "test_fil": 84, "train_epoch": [84, 90, 91], "train_epoch_batch": [84, 90, 91], "test_epoch_batch": [84, 90, 91], "accuracy_upd": 84, "train_loss": 84, "valid_acc": 84, "time_str": 84, "best_str": 84, "accuracywork": 84, "acc_queu": 84, "line": 84, "make_rep_data": [88, 89, 93, 142], "rep_data_dir": [88, 89, 93, 142], "fi": [88, 89, 93, 142], "parser": 89, "options_train_str": 89, "data_fil": [90, 91], "save_gene_expr": 92, "yh": 92, "accuracy_stat": 100, "crispr_df": 100, "score_sit": 100, "gene_i": 100, "grads_ref": 100, "seq_start": 100, "elen_ext": 100, "2000": 100, "trim_dot": [100, 103], "sed_stat": [104, 107], "ensemble_sed_h5": 104, "split_s": 104, "aggreg": 104, "unaugment_grad": [105, 155], "grad": [105, 155], "undo": [105, 155], "make_seq_1hot": 105, "map_snpseq_gen": 107, "transcriptom": 107, "model_strid": 107, "span": 107, "majority_overlap": 107, "intron1": 107, "snpseq_gene_slic": 107, "make_snpseq_bedt": 107, "bedtool": 107, "targets_prep_strand": 107, "sed_out": 107, "write_bedgraph_snp": 107, "around": 107, "bedgraph": 107, "xi": 107, "genes_aggreg": 110, "genes_bed_fil": 110, "values_bedgraph": 110, "make_genes_span": 110, "genes_gtf_fil": 110, "make_genes_exon": 110, "_float_featur": 119, "writer_work": 119, "tfr_file": 119, "tf_opt": 119, "shard_i": 119, "num_shard": 119, "borzoi_satg_gene_multi": [121, 179], "akita_sat_plot": [121, 179], "borzoi_test_exon": [121, 179], "basenji_bench_phylopvcf_fold": [121, 179], "basenji_train1": [121, 179], "saluki_bench_classifi": [121, 179], "basenji_s": [121, 179], "akita_data_read": [121, 179], "basenji_train_rep": [121, 179], "basenji_sad_ref_multi": [121, 179], "basenji_data2": [121, 179], "saluki_train_fold": [121, 179], "basenji_test_rep": [121, 179], "basenji_train": [121, 179], "basenji_train_head": [121, 179], "basenji_fetch_vcf": [121, 179], "akita_predict": [121, 179], "basenji_data_hic_read": [121, 179], "basenji_bench_gtex_cmp": [121, 179], "saluki_train": [121, 179], "akita_data": [121, 179], "borzoi_bench_crispr": [121, 179], "saluki_bench_gtex_cmp": [121, 179], "basenji_train_folds_gcp": [121, 179], "basenji_test": [121, 179], "saluki_bench_gtex": [121, 179], "basenji_bench_classifi": [121, 179], "saluki_ism_tfr_fold": [121, 179], "basenji_test_fold": [121, 179], "basenji_predict_tfr": [121, 179], "basenji_sad": [121, 179], "akita_scd_multi": [121, 179], "sonnet_sat_vcf": [121, 179], "akita_train": [121, 179], "basenji_fetch_app2": [121, 179], "basenji_train_fold": [121, 179], "basenji_motifs_denovo": [121, 179], "sonnet_predict_b": [121, 179], "akita_scd": [121, 179], "basenji_fetch_norm": [121, 179], "basenji_sat_fold": [121, 179], "basenji_sad_t": [121, 179], "saluki_grad_fasta": [121, 179], "sonnet_sad_multi": [121, 179], "saluki_predict_fasta": [121, 179], "borzoi_s": [121, 179], "basenji_predict": [121, 179], "borzoi_satg_gen": [121, 179], "basenji_data_gen": [121, 179], "basenji_bench_gtex_fold": [121, 179], "basenji_annot_chr": [121, 179], "upgrade_tf1": [121, 179], "basenji_bench_phylop_fold": [121, 179], "basenji_sat_b": [121, 179], "save_model": [121, 179], "basenji_bench_phylopvcf": [121, 179], "basenji_sad_ref": [121, 179], "saluki_ssd": [121, 179], "borzoi_test_genes_fold": [121, 179], "basenji_test_specif": [121, 179], "basenji_sed_multi": [121, 179], "tfr_bw": [121, 179], "sonnet_sat_bed_multi": [121, 179], "basenji_bench_phylop": [121, 179], "basenji_motif": [121, 179], "borzoi_bench_gasperini_fold": [121, 179], "saluki_ism_tfr": [121, 179], "borzoi_bench_sqtl_fold": [121, 179], "basenji_sat_plot": [121, 179], "sonnet_s": [121, 179], "basenji_train_h": [121, 179], "akita_test": [121, 179], "basenji_data_align": [121, 179], "basenji_bench_gtex": [121, 179], "basenji_data_hic_writ": [121, 179], "akita_data_writ": [121, 179], "basenji_data": [121, 179], "borzoi_bench_crispr_fold": [121, 179], "sonnet_satg_b": [121, 179], "basenji_sat_vcf": [121, 179], "sonnet_sad": [121, 179], "basenji_predict_bed_multi": [121, 179], "bam_cov": [121, 179], "basenji_sat_plot2": [121, 179], "saluki_test_fold": [121, 179], "basenji_fetch_app": [121, 179], "basenji_motifs_inject_fold": [121, 179], "basenji_sat_bed_multi": [121, 179], "borzoi_test_exons_fold": [121, 179], "basenji_train_head_fold": [121, 179], "tfr_hdf5": [121, 179], "borzoi_bench_flowfish_fold": [121, 179], "tfr_qc": [121, 179], "basenji_bigwig_tfr": [121, 179], "saluki_test": [121, 179], "basenji_sad_multi": [121, 179], "basenji_motifs_inject": [121, 179], "basenji_fetch_app1": [121, 179], "basenji_cmp": [121, 179], "basenji_train2": [121, 179], "akita_sat_vcf": [121, 179], "sonnet_sed_multi": [121, 179], "basenji_bedg_tfr": [121, 179], "unmappable_b": [121, 179], "borzoi_test_gen": [121, 179], "basenji_gtex_fold": [121, 179], "sonnet_bench_gtex": [121, 179], "sonnet_sat_b": [121, 179], "seqs_hdf5": [121, 179], "basenji_map_gen": [121, 179], "basenji_sad_norm": [121, 179], "basenji_sedg": [121, 179], "basenji_hdf5_clust": [121, 179], "basenji_hdf5_singl": [121, 179], "basenji_train_h5man": [121, 179], "basenji_hdf5_gen": [121, 179], "basenji_train_h5": [121, 179], "basenji_sadf": [121, 179], "basenji_test_orig": [121, 179], "basenji_sat_h5": [121, 179], "basenji_map_seq": [121, 179], "bigwig_hdf5": [121, 179], "basenji_train_app": [121, 179], "basenji_test_gen": [121, 179], "basenji_hidden": [121, 179], "basenji_fin": [121, 179], "basenji_test_h5": [121, 179], "basenji_map": [121, 179], "basenji_vari": [121, 179], "basenji_averag": [121, 179], "h5_tfr": [121, 179], "basenji_predict_var": [121, 179], "basenji_norm_h5": [121, 179], "basenji_sadf_multi": [121, 179], "basenji_train_avg": [121, 179], "read_ssd": 131, "ssd_file": 131, "ensemble_ssd": 132, "parse_fasta": [134, 137], "seq_dna": [134, 137], "find_codon_index": 135, "seq_1hotc": 135, "ii": 135, "mut_len": 135, "coding_stop": 135, "ensemble_scor": 136, "ensemble_fil": 136, "ism_opt": 136, "valid_h5": 136, "rna_1hot_splic": 138, "rna": 138, "splice": 138, "frame": 138, "channel": 138, "do": 138, "easier": 138, "variant": 138, "substitut": 138, "rna_1hot_splice_vikram": 138, "rna_1hot_cd": 138, "cd": 138, "set_rna_length": 138, "tx_seq1": 138, "predstreamgen": 138, "accept": 138, "train_dir": 140, "metric_best": 140, "val_pearsonr": 140, "input_gradi": 155, "seq_1hot_tf": 155, "targets_mask": 155, "speci": 155, "make_next_op": 170, "parse_proto": [160, 161, 170, 171, 172], "example_proto": [160, 161, 170, 171, 172], "read_tfr": [171, 172], "plot_distr": 172, "targets_ti": 172, "target_len": 172, "setup": [121, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 179], "test_s": [121, 179], "test_data2": [121, 179], "test_train": [121, 167, 169, 179], "test_sad": [121, 179], "test_test": [121, 179], "test_aug": [121, 162, 179], "test_train_ful": [121, 179], "test_dna_io": [121, 179], "test_sat": [121, 179], "test_data": [121, 179], "hdf5_bed": [121, 179], "test_gen": [121, 179], "make_target": [121, 179], "make_hg19_mini": [121, 179], "assay_succinct": 124, "assai": 124, "read_meta": 124, "meta_fil": 124, "readm": 147, "licens": 147, "testaugment": 159, "methodnam": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "runtest": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "unittest": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "testcas": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "case": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "By": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "itself": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "place": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "fixtur": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "instanti": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "execut": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "author": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "own": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "deconstruct": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "environ": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "teardown": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "necessari": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "__init__": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "alwai": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "import": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "signatur": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "automat": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "framework": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "order": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "failureexcept": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "rais": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "assert": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "fail": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "deem": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "error": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "longmessag": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "long": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "messag": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "failur": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "explicit": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "maxdiff": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "diff": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "difflib": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "look": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "configur": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "classmethod": [159, 160, 161, 163, 164, 165, 166, 167, 168, 169], "setupclass": [159, 160, 161, 163, 164, 165, 166, 167, 168, 169], "hook": [159, 160, 161, 163, 164, 165, 166, 167, 168, 169], "test_stochast": 159, "test_determinist": 159, "testdata": [160, 161], "test_output": [160, 161], "test_seq": [160, 161, 163], "atol": [160, 161], "read_tfrecord": [160, 161], "tfrs_str": [160, 161], "read_seq_coord": [160, 161], "rtol": 161, "testdelet": 162, "test_insert": 162, "testinsert": 162, "testrc": 162, "test_rc": 162, "testaug": 162, "testgenesh5": 163, "testsad": 164, "test_usad": 164, "test_multi": 164, "testsadref": 164, "test_run": 164, "test_misref": 164, "test_misord": 164, "test_clust": 164, "test_get_1hot": 164, "testsatmut": 165, "test_b": 165, "tests": 166, "testtest": 167, "testtrain": [168, 169]}, "objects": {"": [[0, 0, 0, "-", "accuracy"], [1, 0, 0, "-", "akita_data"], [2, 0, 0, "-", "akita_data_read"], [3, 0, 0, "-", "akita_data_write"], [4, 0, 0, "-", "akita_predict"], [5, 0, 0, "-", "akita_sat_plot"], [6, 0, 0, "-", "akita_sat_vcf"], [7, 0, 0, "-", "akita_scd"], [8, 0, 0, "-", "akita_scd_multi"], [9, 0, 0, "-", "akita_test"], [10, 0, 0, "-", "akita_train"], [11, 0, 0, "-", "augmentation"], [12, 0, 0, "-", "bam_cov"], [13, 0, 0, "-", "basenji_annot_chr"], [14, 0, 0, "-", "basenji_average"], [15, 0, 0, "-", "basenji_bedg_tfr"], [16, 0, 0, "-", "basenji_bench_classify"], [17, 0, 0, "-", "basenji_bench_gtex"], [18, 0, 0, "-", "basenji_bench_gtex_cmp"], [19, 0, 0, "-", "basenji_bench_gtex_folds"], [20, 0, 0, "-", "basenji_bench_phylop"], [21, 0, 0, "-", "basenji_bench_phylop_folds"], [22, 0, 0, "-", "basenji_bench_phylopvcf"], [23, 0, 0, "-", "basenji_bench_phylopvcf_folds"], [24, 0, 0, "-", "basenji_bigwig_tfr"], [25, 0, 0, "-", "basenji_cmp"], [26, 0, 0, "-", "basenji_data"], [27, 0, 0, "-", "basenji_data2"], [28, 0, 0, "-", "basenji_data_align"], [29, 0, 0, "-", "basenji_data_gene"], [30, 0, 0, "-", "basenji_data_hic_read"], [31, 0, 0, "-", "basenji_data_hic_write"], [32, 0, 0, "-", "basenji_data_read"], [33, 0, 0, "-", "basenji_data_write"], [34, 0, 0, "-", "basenji_fetch_app"], [35, 0, 0, "-", "basenji_fetch_app1"], [36, 0, 0, "-", "basenji_fetch_app2"], [37, 0, 0, "-", "basenji_fetch_norm"], [38, 0, 0, "-", "basenji_fetch_vcf"], [39, 0, 0, "-", "basenji_final"], [40, 0, 0, "-", "basenji_gtex_folds"], [41, 0, 0, "-", "basenji_hdf5_cluster"], [42, 0, 0, "-", "basenji_hdf5_genes"], [43, 0, 0, "-", "basenji_hdf5_single"], [44, 0, 0, "-", "basenji_hidden"], [45, 0, 0, "-", "basenji_map"], [46, 0, 0, "-", "basenji_map_genes"], [47, 0, 0, "-", "basenji_map_seqs"], [48, 0, 0, "-", "basenji_motifs"], [49, 0, 0, "-", "basenji_motifs_denovo"], [50, 0, 0, "-", "basenji_motifs_inject"], [51, 0, 0, "-", "basenji_motifs_inject_folds"], [52, 0, 0, "-", "basenji_norm_h5"], [53, 0, 0, "-", "basenji_predict"], [54, 0, 0, "-", "basenji_predict_bed"], [55, 0, 0, "-", "basenji_predict_bed_multi"], [56, 0, 0, "-", "basenji_predict_tfr"], [57, 0, 0, "-", "basenji_predict_var"], [58, 0, 0, "-", "basenji_sad"], [59, 0, 0, "-", "basenji_sad_multi"], [60, 0, 0, "-", "basenji_sad_norm"], [61, 0, 0, "-", "basenji_sad_ref"], [62, 0, 0, "-", "basenji_sad_ref_multi"], [63, 0, 0, "-", "basenji_sad_table"], [64, 0, 0, "-", "basenji_sadf"], [65, 0, 0, "-", "basenji_sadf_multi"], [66, 0, 0, "-", "basenji_sat_bed"], [67, 0, 0, "-", "basenji_sat_bed_multi"], [68, 0, 0, "-", "basenji_sat_folds"], [69, 0, 0, "-", "basenji_sat_h5"], [70, 0, 0, "-", "basenji_sat_plot"], [71, 0, 0, "-", "basenji_sat_plot2"], [72, 0, 0, "-", "basenji_sat_vcf"], [73, 0, 0, "-", "basenji_sed"], [74, 0, 0, "-", "basenji_sed_multi"], [75, 0, 0, "-", "basenji_sedg"], [76, 0, 0, "-", "basenji_test"], [77, 0, 0, "-", "basenji_test_folds"], [78, 0, 0, "-", "basenji_test_genes"], [79, 0, 0, "-", "basenji_test_h5"], [80, 0, 0, "-", "basenji_test_orig"], [81, 0, 0, "-", "basenji_test_reps"], [82, 0, 0, "-", "basenji_test_specificity"], [83, 0, 0, "-", "basenji_train"], [84, 0, 0, "-", "basenji_train1"], [85, 0, 0, "-", "basenji_train2"], [86, 0, 0, "-", "basenji_train_app"], [87, 0, 0, "-", "basenji_train_avg"], [88, 0, 0, "-", "basenji_train_folds"], [89, 0, 0, "-", "basenji_train_folds_gcp"], [90, 0, 0, "-", "basenji_train_h5"], [91, 0, 0, "-", "basenji_train_h5man"], [92, 0, 0, "-", "basenji_train_head"], [93, 0, 0, "-", "basenji_train_head_folds"], [94, 0, 0, "-", "basenji_train_hic"], [95, 0, 0, "-", "basenji_train_reps"], [96, 0, 0, "-", "basenji_variables"], [97, 0, 0, "-", "bed"], [98, 0, 0, "-", "bigwig_hdf5"], [99, 0, 0, "-", "blocks"], [100, 0, 0, "-", "borzoi_bench_crispr"], [101, 0, 0, "-", "borzoi_bench_crispr_folds"], [102, 0, 0, "-", "borzoi_bench_flowfish_folds"], [103, 0, 0, "-", "borzoi_bench_gasperini_folds"], [104, 0, 0, "-", "borzoi_bench_sqtl_folds"], [105, 0, 0, "-", "borzoi_satg_gene"], [106, 0, 0, "-", "borzoi_satg_gene_multi"], [107, 0, 0, "-", "borzoi_sed"], [108, 0, 0, "-", "borzoi_test_exons"], [109, 0, 0, "-", "borzoi_test_exons_folds"], [110, 0, 0, "-", "borzoi_test_genes"], [111, 0, 0, "-", "borzoi_test_genes_folds"], [112, 0, 0, "-", "dataset"], [113, 0, 0, "-", "dna_io"], [114, 0, 0, "-", "emerald"], [115, 0, 0, "-", "gene"], [116, 0, 0, "-", "genedata"], [117, 0, 0, "-", "genome"], [118, 0, 0, "-", "gff"], [119, 0, 0, "-", "h5_tfr"], [120, 0, 0, "-", "hdf5_bed"], [122, 0, 0, "-", "layers"], [123, 0, 0, "-", "make_hg19_mini"], [124, 0, 0, "-", "make_targets"], [125, 0, 0, "-", "metrics"], [126, 0, 0, "-", "ops"], [127, 0, 0, "-", "params"], [128, 0, 0, "-", "plots"], [129, 0, 0, "-", "rnann"], [130, 0, 0, "-", "sad5"], [131, 0, 0, "-", "saluki_bench_classify"], [132, 0, 0, "-", "saluki_bench_gtex"], [133, 0, 0, "-", "saluki_bench_gtex_cmp"], [134, 0, 0, "-", "saluki_grad_fasta"], [135, 0, 0, "-", "saluki_ism_tfr"], [136, 0, 0, "-", "saluki_ism_tfr_folds"], [137, 0, 0, "-", "saluki_predict_fasta"], [138, 0, 0, "-", "saluki_ssd"], [139, 0, 0, "-", "saluki_test"], [140, 0, 0, "-", "saluki_test_folds"], [141, 0, 0, "-", "saluki_train"], [142, 0, 0, "-", "saluki_train_folds"], [143, 0, 0, "-", "save_model"], [144, 0, 0, "-", "seqnn"], [145, 0, 0, "-", "seqnn_util"], [146, 0, 0, "-", "seqs_hdf5"], [147, 0, 0, "-", "setup"], [148, 0, 0, "-", "sonnet_bench_gtex"], [149, 0, 0, "-", "sonnet_predict_bed"], [150, 0, 0, "-", "sonnet_sad"], [151, 0, 0, "-", "sonnet_sad_multi"], [152, 0, 0, "-", "sonnet_sat_bed"], [153, 0, 0, "-", "sonnet_sat_bed_multi"], [154, 0, 0, "-", "sonnet_sat_vcf"], [155, 0, 0, "-", "sonnet_satg_bed"], [156, 0, 0, "-", "sonnet_sed"], [157, 0, 0, "-", "sonnet_sed_multi"], [158, 0, 0, "-", "stream"], [159, 0, 0, "-", "test_augment"], [160, 0, 0, "-", "test_data"], [161, 0, 0, "-", "test_data2"], [162, 0, 0, "-", "test_dna_io"], [163, 0, 0, "-", "test_gene"], [164, 0, 0, "-", "test_sad"], [165, 0, 0, "-", "test_sat"], [166, 0, 0, "-", "test_sed"], [167, 0, 0, "-", "test_test"], [168, 0, 0, "-", "test_train"], [169, 0, 0, "-", "test_train_full"], [170, 0, 0, "-", "tfr_bw"], [171, 0, 0, "-", "tfr_hdf5"], [172, 0, 0, "-", "tfr_qc"], [173, 0, 0, "-", "tfrecord_batcher"], [174, 0, 0, "-", "trainer"], [175, 0, 0, "-", "unmappable_bed"], [176, 0, 0, "-", "upgrade_tf1"], [177, 0, 0, "-", "util"], [178, 0, 0, "-", "vcf"]], "accuracy": [[0, 1, 1, "", "Accuracy"]], "accuracy.Accuracy": [[0, 2, 1, "", "pearsonr"], [0, 2, 1, "", "r2"], [0, 2, 1, "", "spearmanr"]], "akita_data": [[1, 3, 1, "", "main"]], "akita_data_read": [[2, 3, 1, "", "main"]], "akita_data_write": [[3, 3, 1, "", "_bytes_feature"], [3, 3, 1, "", "_int_feature"], [3, 3, 1, "", "main"]], "akita_predict": [[4, 3, 1, "", "bigwig_open"], [4, 3, 1, "", "bigwig_write"], [4, 3, 1, "", "main"]], "akita_sat_plot": [[5, 3, 1, "", "main"]], "akita_sat_vcf": [[6, 3, 1, "", "fs_clean"], [6, 3, 1, "", "main"], [6, 3, 1, "", "plot_heat"], [6, 3, 1, "", "plot_scd"], [6, 3, 1, "", "satmut_seqs"], [6, 3, 1, "", "score_matrix"], [6, 3, 1, "", "subplot_params"]], "akita_scd": [[7, 3, 1, "", "initialize_output_h5"], [7, 3, 1, "", "main"], [7, 3, 1, "", "ut_dense"], [7, 3, 1, "", "write_snp"]], "akita_scd_multi": [[8, 3, 1, "", "collect_h5"], [8, 3, 1, "", "collect_table"], [8, 3, 1, "", "job_completed"], [8, 3, 1, "", "main"]], "akita_test": [[9, 3, 1, "", "ben_hoch"], [9, 3, 1, "", "main"], [9, 3, 1, "", "test_peaks"]], "akita_train": [[10, 3, 1, "", "main"]], "augmentation": [[11, 3, 1, "", "augment_deterministic"], [11, 3, 1, "", "augment_deterministic_rc"], [11, 3, 1, "", "augment_deterministic_set"], [11, 3, 1, "", "augment_stochastic"], [11, 3, 1, "", "augment_stochastic_rc"], [11, 3, 1, "", "augment_stochastic_shifts"], [11, 3, 1, "", "reverse_preds"], [11, 3, 1, "", "shift_sequence"], [11, 3, 1, "", "stochastic_rc"]], "bam_cov": [[12, 1, 1, "", "GenomeCoverage"], [12, 3, 1, "", "cigar_len"], [12, 3, 1, "", "compute_cut_norms"], [12, 3, 1, "", "distribute_multi_succint"], [12, 3, 1, "", "initialize_kmers"], [12, 3, 1, "", "main"], [12, 3, 1, "", "regplot_gc"], [12, 3, 1, "", "regplot_shift"], [12, 3, 1, "", "row_nzcols_get"], [12, 3, 1, "", "row_nzcols_geti"], [12, 3, 1, "", "row_nzcols_set"], [12, 3, 1, "", "scatter_lims"], [12, 3, 1, "", "single_or_pair"]], "bam_cov.GenomeCoverage": [[12, 2, 1, "", "align_shifts"], [12, 2, 1, "", "clip_multi"], [12, 2, 1, "", "distribute_multi"], [12, 2, 1, "", "estimate_coverage"], [12, 2, 1, "", "gc_normalize"], [12, 2, 1, "", "genome_chr"], [12, 2, 1, "", "genome_index"], [12, 2, 1, "", "genome_index_chrom"], [12, 2, 1, "", "genome_indexes"], [12, 2, 1, "", "index_genome"], [12, 2, 1, "", "infer_active_blocks"], [12, 2, 1, "", "infer_active_blocks_groupby"], [12, 2, 1, "", "learn_gc"], [12, 2, 1, "", "learn_gc_base"], [12, 2, 1, "", "learn_shift_pair"], [12, 2, 1, "", "learn_shift_single"], [12, 2, 1, "", "read_bam"], [12, 2, 1, "", "read_multi_bwa"], [12, 2, 1, "", "read_multi_nh"], [12, 2, 1, "", "set_clips"], [12, 2, 1, "", "write"]], "basenji_annot_chr": [[13, 3, 1, "", "h5_annot_chr"], [13, 3, 1, "", "main"], [13, 3, 1, "", "read_enough_sad"], [13, 3, 1, "", "sample_sad"]], "basenji_average": [[14, 3, 1, "", "main"]], "basenji_bedg_tfr": [[15, 3, 1, "", "main"]], "basenji_bench_classify": [[16, 3, 1, "", "fold_roc"], [16, 3, 1, "", "main"], [16, 3, 1, "", "plot_roc"], [16, 3, 1, "", "randfor_full"], [16, 3, 1, "", "randfor_roc"], [16, 3, 1, "", "read_indel"], [16, 3, 1, "", "read_sad"], [16, 3, 1, "", "ridge_roc"]], "basenji_bench_gtex": [[17, 3, 1, "", "main"]], "basenji_bench_gtex_cmp": [[18, 3, 1, "", "main"], [18, 3, 1, "", "read_auroc"], [18, 3, 1, "", "ttest_alt"]], "basenji_bench_gtex_folds": [[19, 3, 1, "", "complete_h5"], [19, 3, 1, "", "ensemble_sad_h5"], [19, 3, 1, "", "main"], [19, 3, 1, "", "options_string"], [19, 3, 1, "", "split_sad"]], "basenji_bench_phylop": [[20, 3, 1, "", "main"], [20, 3, 1, "", "randfor_cv"]], "basenji_bench_phylop_folds": [[21, 3, 1, "", "ensemble_scores_h5"], [21, 3, 1, "", "main"], [21, 3, 1, "", "options_string"], [21, 3, 1, "", "read_metrics"]], "basenji_bench_phylopvcf": [[22, 3, 1, "", "main"], [22, 3, 1, "", "randfor_cv"]], "basenji_bench_phylopvcf_folds": [[23, 3, 1, "", "ensemble_scores_h5"], [23, 3, 1, "", "main"], [23, 3, 1, "", "options_string"], [23, 3, 1, "", "read_metrics"]], "basenji_bigwig_tfr": [[24, 3, 1, "", "main"]], "basenji_cmp": [[25, 3, 1, "", "epoch_stats"], [25, 3, 1, "", "main"], [25, 3, 1, "", "plot_curve"], [25, 3, 1, "", "read_training"]], "basenji_data": [[26, 4, 1, "", "Contig"], [26, 4, 1, "", "ModelSeq"], [26, 3, 1, "", "annotate_unmap"], [26, 3, 1, "", "break_large_contigs"], [26, 3, 1, "", "contig_sequences"], [26, 3, 1, "", "curate_peaks"], [26, 3, 1, "", "divide_contigs_chr"], [26, 3, 1, "", "divide_contigs_folds"], [26, 3, 1, "", "divide_contigs_pct"], [26, 3, 1, "", "limit_contigs"], [26, 3, 1, "", "main"], [26, 3, 1, "", "rejoin_large_contigs"], [26, 3, 1, "", "write_seqs_bed"]], "basenji_data2": [[27, 4, 1, "", "Contig"], [27, 4, 1, "", "GraphSeq"], [27, 4, 1, "", "ModelSeq"], [27, 3, 1, "", "break_large_contigs"], [27, 3, 1, "", "connect_contigs"], [27, 3, 1, "", "contig_sequences"], [27, 3, 1, "", "contig_stats_genome"], [27, 3, 1, "", "divide_contig_components"], [27, 3, 1, "", "intersect_contigs_nets"], [27, 3, 1, "", "main"], [27, 3, 1, "", "make_net_graph"], [27, 3, 1, "", "make_read_jobs"], [27, 3, 1, "", "make_write_jobs"], [27, 3, 1, "", "quantify_leakage"], [27, 3, 1, "", "rejoin_large_contigs"], [27, 3, 1, "", "report_divide_stats"], [27, 3, 1, "", "write_seqs_bed"]], "basenji_data_align": [[28, 4, 1, "", "Contig"], [28, 4, 1, "", "GraphSeq"], [28, 4, 1, "", "ModelSeq"], [28, 3, 1, "", "break_large_contigs"], [28, 3, 1, "", "connect_contigs"], [28, 3, 1, "", "contig_sequences"], [28, 3, 1, "", "contig_stats_genome"], [28, 3, 1, "", "divide_components_folds"], [28, 3, 1, "", "divide_components_pct"], [28, 3, 1, "", "intersect_contigs_nets"], [28, 3, 1, "", "main"], [28, 3, 1, "", "make_net_graph"], [28, 3, 1, "", "quantify_leakage"], [28, 3, 1, "", "rejoin_large_contigs"], [28, 3, 1, "", "report_divide_stats"], [28, 3, 1, "", "report_divide_stats_v1"]], "basenji_data_gene": [[29, 3, 1, "", "_bytes_feature"], [29, 3, 1, "", "cluster_genes"], [29, 3, 1, "", "divide_genes_chr"], [29, 3, 1, "", "divide_genes_folds"], [29, 3, 1, "", "divide_genes_folds_bed"], [29, 3, 1, "", "divide_genes_pct"], [29, 3, 1, "", "genes_bed"], [29, 3, 1, "", "gff_df"], [29, 3, 1, "", "main"], [29, 3, 1, "", "rc"], [29, 3, 1, "", "sufficient_sequence"]], "basenji_data_hic_read": [[30, 3, 1, "", "main"], [30, 3, 1, "", "read_blacklist"], [30, 3, 1, "", "smooth"]], "basenji_data_hic_write": [[31, 3, 1, "", "_bytes_feature"], [31, 3, 1, "", "_int_feature"], [31, 3, 1, "", "main"]], "basenji_data_read": [[32, 1, 1, "", "CovFace"], [32, 3, 1, "", "interp_nan"], [32, 3, 1, "", "main"], [32, 3, 1, "", "read_blacklist"]], "basenji_data_read.CovFace": [[32, 2, 1, "", "close"], [32, 2, 1, "", "preprocess_bed"], [32, 2, 1, "", "read"]], "basenji_data_write": [[33, 3, 1, "", "feature_bytes"], [33, 3, 1, "", "feature_floats"], [33, 3, 1, "", "fetch_dna"], [33, 3, 1, "", "main"], [33, 3, 1, "", "rround"], [33, 3, 1, "", "tround"]], "basenji_fetch_app": [[34, 3, 1, "", "main"], [34, 1, 1, "", "memoized"]], "basenji_fetch_app.memoized": [[34, 2, 1, "", "__call__"], [34, 2, 1, "", "__get__"], [34, 2, 1, "", "__repr__"]], "basenji_fetch_app1": [[35, 3, 1, "", "main"], [35, 1, 1, "", "memoized"]], "basenji_fetch_app1.memoized": [[35, 2, 1, "", "__call__"], [35, 2, 1, "", "__get__"], [35, 2, 1, "", "__repr__"]], "basenji_fetch_app2": [[36, 3, 1, "", "main"], [36, 1, 1, "", "memoized"]], "basenji_fetch_app2.memoized": [[36, 2, 1, "", "__call__"], [36, 2, 1, "", "__get__"], [36, 2, 1, "", "__repr__"]], "basenji_fetch_norm": [[37, 3, 1, "", "main"]], "basenji_fetch_vcf": [[38, 3, 1, "", "main"]], "basenji_final": [[39, 3, 1, "", "main"]], "basenji_gtex_folds": [[40, 3, 1, "", "main"], [40, 3, 1, "", "read_stats"], [40, 3, 1, "", "stat_tests"]], "basenji_hdf5_cluster": [[41, 3, 1, "", "annotate_na"], [41, 3, 1, "", "batch_end"], [41, 3, 1, "", "filter_boring"], [41, 3, 1, "", "fourier_transform"], [41, 3, 1, "", "limit_segments"], [41, 3, 1, "", "main"], [41, 3, 1, "", "segments_1hot"]], "basenji_hdf5_genes": [[42, 3, 1, "", "bigwig_tss_targets"], [42, 3, 1, "", "check_wigs"], [42, 3, 1, "", "cluster_tss"], [42, 3, 1, "", "main"], [42, 3, 1, "", "wig5_tss_targets"]], "basenji_hdf5_single": [[43, 3, 1, "", "annotate_na"], [43, 3, 1, "", "batch_end"], [43, 3, 1, "", "bigwig_batch"], [43, 3, 1, "", "filter_boring"], [43, 3, 1, "", "fourier_transform"], [43, 3, 1, "", "latent_transform"], [43, 3, 1, "", "limit_segments"], [43, 3, 1, "", "main"], [43, 3, 1, "", "segments_1hot"], [43, 3, 1, "", "w5_batch"]], "basenji_hidden": [[44, 3, 1, "", "main"], [44, 3, 1, "", "regplot"]], "basenji_map": [[45, 3, 1, "", "main"], [45, 3, 1, "", "score_write"]], "basenji_map_genes": [[46, 3, 1, "", "main"]], "basenji_map_seqs": [[47, 3, 1, "", "main"]], "basenji_motifs": [[48, 3, 1, "", "filter_motif"], [48, 3, 1, "", "filter_possum"], [48, 3, 1, "", "get_motif_proteins"], [48, 3, 1, "", "info_content"], [48, 3, 1, "", "main"], [48, 3, 1, "", "make_filter_pwm"], [48, 3, 1, "", "meme_add"], [48, 3, 1, "", "meme_intro"], [48, 3, 1, "", "name_filters"], [48, 3, 1, "", "plot_filter_heat"], [48, 3, 1, "", "plot_filter_logo"], [48, 3, 1, "", "plot_filter_seg_heat"], [48, 3, 1, "", "plot_filter_seq_heat"], [48, 3, 1, "", "plot_score_density"], [48, 3, 1, "", "plot_target_corr"], [48, 4, 1, "", "weblogo_opts"]], "basenji_motifs_denovo": [[49, 4, 1, "", "Interval"], [49, 3, 1, "", "annotate_motifs"], [49, 3, 1, "", "cluster_leiden"], [49, 3, 1, "", "end_align_fasta"], [49, 3, 1, "", "extend_intervals"], [49, 3, 1, "", "fasta_pwm"], [49, 3, 1, "", "filter_features"], [49, 3, 1, "", "filter_seqlets"], [49, 3, 1, "", "info_content"], [49, 3, 1, "", "main"], [49, 3, 1, "", "make_feature_fasta"], [49, 3, 1, "", "make_negative_fasta"], [49, 3, 1, "", "meme_add"], [49, 3, 1, "", "meme_intro"], [49, 3, 1, "", "nearest_neighbors"], [49, 3, 1, "", "plot_kernel"], [49, 3, 1, "", "plot_logo"], [49, 3, 1, "", "process_factor"], [49, 3, 1, "", "process_feature"], [49, 3, 1, "", "read_preds"], [49, 3, 1, "", "run_dreme"], [49, 3, 1, "", "run_homer"], [49, 3, 1, "", "write_factor"], [49, 3, 1, "", "write_msa"]], "basenji_motifs_inject": [[50, 3, 1, "", "cisbp_name"], [50, 3, 1, "", "main"]], "basenji_motifs_inject_folds": [[51, 3, 1, "", "ensemble_scores_h5"], [51, 3, 1, "", "main"], [51, 3, 1, "", "options_string"]], "basenji_norm_h5": [[52, 3, 1, "", "main"]], "basenji_predict": [[53, 3, 1, "", "bigwig_open"], [53, 3, 1, "", "bigwig_write"], [53, 3, 1, "", "main"]], "basenji_predict_bed": [[54, 3, 1, "", "bigwig_open"], [54, 3, 1, "", "bigwig_write"], [54, 3, 1, "", "main"]], "basenji_predict_bed_multi": [[55, 3, 1, "", "collect_h5"], [55, 3, 1, "", "job_completed"], [55, 3, 1, "", "main"]], "basenji_predict_tfr": [[56, 3, 1, "", "main"]], "basenji_predict_var": [[57, 3, 1, "", "main"]], "basenji_sad": [[58, 3, 1, "", "initialize_output_h5"], [58, 3, 1, "", "main"], [58, 3, 1, "", "write_pct"], [58, 3, 1, "", "write_snp"], [58, 3, 1, "", "write_snp_len"]], "basenji_sad_multi": [[59, 3, 1, "", "collect_h5"], [59, 3, 1, "", "collect_table"], [59, 3, 1, "", "job_completed"], [59, 3, 1, "", "main"]], "basenji_sad_norm": [[60, 3, 1, "", "fit_cauchy"], [60, 3, 1, "", "main"], [60, 3, 1, "", "sample_sad"]], "basenji_sad_ref": [[61, 1, 1, "", "SNPCluster"], [61, 3, 1, "", "cluster_snps"], [61, 3, 1, "", "main"], [61, 3, 1, "", "make_alt_1hot"]], "basenji_sad_ref.SNPCluster": [[61, 2, 1, "", "add_snp"], [61, 2, 1, "", "delimit"], [61, 2, 1, "", "get_1hots"]], "basenji_sad_ref_multi": [[62, 3, 1, "", "job_completed"], [62, 3, 1, "", "main"]], "basenji_sad_table": [[63, 3, 1, "", "main"], [63, 3, 1, "", "sad_h5_df"]], "basenji_sadf": [[64, 3, 1, "", "bigwig_write"], [64, 3, 1, "", "initialize_output_h5"], [64, 3, 1, "", "initialize_output_zarr"], [64, 3, 1, "", "main"], [64, 3, 1, "", "snps_next_batch"]], "basenji_sadf_multi": [[65, 3, 1, "", "collect_table"], [65, 3, 1, "", "collect_zarr"], [65, 3, 1, "", "job_completed"], [65, 3, 1, "", "main"]], "basenji_sat_bed": [[66, 1, 1, "", "PlotWorker"], [66, 1, 1, "", "ScoreWorker"], [66, 3, 1, "", "main"], [66, 3, 1, "", "satmut_gen"]], "basenji_sat_bed.PlotWorker": [[66, 2, 1, "", "run"]], "basenji_sat_bed.ScoreWorker": [[66, 2, 1, "", "run"]], "basenji_sat_bed_multi": [[67, 3, 1, "", "collect_h5"], [67, 3, 1, "", "job_completed"], [67, 3, 1, "", "main"]], "basenji_sat_folds": [[68, 3, 1, "", "main"], [68, 3, 1, "", "options_string"]], "basenji_sat_h5": [[69, 3, 1, "", "delta_matrix"], [69, 3, 1, "", "enrich_activity"], [69, 3, 1, "", "expand_4l"], [69, 3, 1, "", "loss_gain"], [69, 3, 1, "", "main"], [69, 3, 1, "", "parse_input"], [69, 3, 1, "", "plot_heat"], [69, 3, 1, "", "plot_predictions"], [69, 3, 1, "", "plot_sad"], [69, 3, 1, "", "plot_seqlogo"], [69, 3, 1, "", "satmut_seqs"], [69, 3, 1, "", "subplot_params"]], "basenji_sat_plot": [[70, 3, 1, "", "enrich_activity"], [70, 3, 1, "", "expand_4l"], [70, 3, 1, "", "main"], [70, 3, 1, "", "plot_heat"], [70, 3, 1, "", "plot_predictions"], [70, 3, 1, "", "plot_sad"], [70, 3, 1, "", "plot_seqlogo"], [70, 3, 1, "", "subplot_params"]], "basenji_sat_plot2": [[71, 3, 1, "", "expand_4l"], [71, 3, 1, "", "expand_scores_align"], [71, 3, 1, "", "global_align"], [71, 3, 1, "", "main"], [71, 3, 1, "", "plot_seqlogo"], [71, 3, 1, "", "setup_plot"], [71, 3, 1, "", "subplot_params"]], "basenji_sat_vcf": [[72, 3, 1, "", "main"]], "basenji_sed": [[73, 3, 1, "", "alleles_1hot"], [73, 3, 1, "", "main"]], "basenji_sed_multi": [[74, 1, 1, "", "MultiLine"], [74, 3, 1, "", "collect_table"], [74, 3, 1, "", "collect_table_multi"], [74, 3, 1, "", "main"]], "basenji_sed_multi.MultiLine": [[74, 5, 1, "", "__slots__"], [74, 2, 1, "", "add"], [74, 2, 1, "", "print_lines"]], "basenji_sedg": [[75, 3, 1, "", "main"], [75, 3, 1, "", "nt_index"]], "basenji_test": [[76, 3, 1, "", "ben_hoch"], [76, 3, 1, "", "main"], [76, 3, 1, "", "test_peaks"]], "basenji_test_folds": [[77, 3, 1, "", "jointplot"], [77, 3, 1, "", "main"], [77, 3, 1, "", "read_metrics"], [77, 3, 1, "", "stat_tests"]], "basenji_test_genes": [[78, 3, 1, "", "alternative_tss"], [78, 3, 1, "", "clustermap"], [78, 3, 1, "", "cor_table"], [78, 3, 1, "", "gene_table"], [78, 3, 1, "", "main"], [78, 3, 1, "", "normalize_targets"], [78, 3, 1, "", "quantile_accuracy"], [78, 3, 1, "", "quantile_indexes"], [78, 3, 1, "", "quantile_normalize"], [78, 3, 1, "", "replicate_correlations"], [78, 3, 1, "", "variance_accuracy"]], "basenji_test_h5": [[79, 3, 1, "", "ben_hoch"], [79, 3, 1, "", "bigwig_open"], [79, 3, 1, "", "bigwig_write"], [79, 3, 1, "", "main"]], "basenji_test_orig": [[80, 3, 1, "", "ben_hoch"], [80, 3, 1, "", "bigwig_open"], [80, 3, 1, "", "bigwig_write"], [80, 3, 1, "", "compute_full_accuracy"], [80, 3, 1, "", "main"]], "basenji_test_reps": [[81, 3, 1, "", "main"], [81, 3, 1, "", "read_cors"], [81, 3, 1, "", "stat_tests"]], "basenji_test_specificity": [[82, 3, 1, "", "main"]], "basenji_train": [[83, 3, 1, "", "main"]], "basenji_train1": [[84, 1, 1, "", "AccuracyWorker"], [84, 4, 1, "", "FLAGS"], [84, 3, 1, "", "accuracy_update"], [84, 3, 1, "", "main"], [84, 3, 1, "", "make_data_ops"], [84, 3, 1, "", "run"]], "basenji_train1.AccuracyWorker": [[84, 2, 1, "", "run"]], "basenji_train2": [[85, 3, 1, "", "main"]], "basenji_train_app": [[86, 4, 1, "", "FLAGS"], [86, 3, 1, "", "main"]], "basenji_train_avg": [[87, 3, 1, "", "main"]], "basenji_train_folds": [[88, 3, 1, "", "main"], [88, 3, 1, "", "make_rep_data"], [88, 3, 1, "", "options_string"]], "basenji_train_folds_gcp": [[89, 3, 1, "", "main"], [89, 3, 1, "", "make_rep_data"], [89, 3, 1, "", "options_string"], [89, 3, 1, "", "options_train_string"]], "basenji_train_h5": [[90, 4, 1, "", "FLAGS"], [90, 3, 1, "", "main"], [90, 3, 1, "", "run"]], "basenji_train_h5man": [[91, 4, 1, "", "FLAGS"], [91, 3, 1, "", "main"], [91, 3, 1, "", "run"]], "basenji_train_head": [[92, 3, 1, "", "main"], [92, 3, 1, "", "save_gene_expr"]], "basenji_train_head_folds": [[93, 3, 1, "", "main"], [93, 3, 1, "", "make_rep_data"], [93, 3, 1, "", "options_string"]], "basenji_train_hic": [[94, 4, 1, "", "FLAGS"], [94, 3, 1, "", "main"]], "basenji_train_reps": [[95, 3, 1, "", "main"], [95, 3, 1, "", "options_string"]], "basenji_variables": [[96, 3, 1, "", "main"]], "bed": [[97, 3, 1, "", "make_bed_seqs"], [97, 3, 1, "", "read_bed_coords"], [97, 3, 1, "", "write_bedgraph"], [97, 3, 1, "", "write_bedgraph_v1"]], "bigwig_hdf5": [[98, 3, 1, "", "main"]], "blocks": [[99, 3, 1, "", "average_pooling"], [99, 3, 1, "", "average_to_2d"], [99, 3, 1, "", "center_average"], [99, 3, 1, "", "center_slice"], [99, 3, 1, "", "concat_dist_2d"], [99, 3, 1, "", "concat_position"], [99, 3, 1, "", "concat_to_2d"], [99, 3, 1, "", "concat_unet"], [99, 3, 1, "", "conv_block"], [99, 3, 1, "", "conv_block_2d"], [99, 3, 1, "", "conv_dna"], [99, 3, 1, "", "conv_nac"], [99, 3, 1, "", "conv_next"], [99, 3, 1, "", "conv_tower"], [99, 3, 1, "", "conv_tower_nac"], [99, 3, 1, "", "conv_tower_v1"], [99, 3, 1, "", "convnext_tower"], [99, 3, 1, "", "cropping_2d"], [99, 3, 1, "", "dense"], [99, 3, 1, "", "dense_block"], [99, 3, 1, "", "dense_nac"], [99, 3, 1, "", "dilated_dense"], [99, 3, 1, "", "dilated_residual"], [99, 3, 1, "", "dilated_residual_2d"], [99, 3, 1, "", "dilated_residual_nac"], [99, 3, 1, "", "dot_to_2d"], [99, 3, 1, "", "exp"], [99, 3, 1, "", "factor_inverse"], [99, 3, 1, "", "final"], [99, 3, 1, "", "fpn1_unet"], [99, 3, 1, "", "fpn_unet"], [99, 3, 1, "", "geodot_to_2d"], [99, 3, 1, "", "global_context"], [99, 4, 1, "", "keras_func"], [99, 3, 1, "", "max_to_2d"], [99, 4, 1, "", "name_func"], [99, 3, 1, "", "one_to_two"], [99, 3, 1, "", "res_tower"], [99, 3, 1, "", "squeeze_excite"], [99, 3, 1, "", "swin_transformer"], [99, 3, 1, "", "symmetrize_2d"], [99, 3, 1, "", "tconv_nac"], [99, 3, 1, "", "transformer"], [99, 3, 1, "", "transformer2"], [99, 3, 1, "", "transformer_dense"], [99, 3, 1, "", "transformer_split"], [99, 3, 1, "", "transformer_tower"], [99, 3, 1, "", "upper_tri"], [99, 3, 1, "", "upsample_unet"], [99, 3, 1, "", "wheeze_excite"]], "borzoi_bench_crispr": [[100, 3, 1, "", "accuracy_stats"], [100, 3, 1, "", "complete_h5"], [100, 3, 1, "", "main"], [100, 3, 1, "", "options_string"], [100, 3, 1, "", "score_sites"], [100, 3, 1, "", "trim_dot"]], "borzoi_bench_crispr_folds": [[101, 3, 1, "", "ensemble_scores_h5"], [101, 3, 1, "", "main"], [101, 3, 1, "", "options_string"]], "borzoi_bench_flowfish_folds": [[102, 3, 1, "", "ensemble_scores_h5"], [102, 3, 1, "", "main"], [102, 3, 1, "", "options_string"]], "borzoi_bench_gasperini_folds": [[103, 3, 1, "", "ensemble_scores_h5"], [103, 3, 1, "", "main"], [103, 3, 1, "", "options_string"], [103, 3, 1, "", "trim_dot"]], "borzoi_bench_sqtl_folds": [[104, 3, 1, "", "complete_h5"], [104, 3, 1, "", "ensemble_sed_h5"], [104, 3, 1, "", "main"], [104, 3, 1, "", "options_string"], [104, 3, 1, "", "split_sed"]], "borzoi_satg_gene": [[105, 3, 1, "", "main"], [105, 3, 1, "", "make_seq_1hot"], [105, 3, 1, "", "unaugment_grads"]], "borzoi_satg_gene_multi": [[106, 3, 1, "", "collect_h5"], [106, 3, 1, "", "job_completed"], [106, 3, 1, "", "main"]], "borzoi_sed": [[107, 3, 1, "", "initialize_output_h5"], [107, 3, 1, "", "main"], [107, 3, 1, "", "make_snpseq_bedt"], [107, 3, 1, "", "map_snpseq_genes"], [107, 3, 1, "", "targets_prep_strand"], [107, 3, 1, "", "write_bedgraph_snp"], [107, 3, 1, "", "write_pct"], [107, 3, 1, "", "write_snp"]], "borzoi_test_exons": [[108, 3, 1, "", "main"]], "borzoi_test_exons_folds": [[109, 3, 1, "", "jointplot"], [109, 3, 1, "", "main"], [109, 3, 1, "", "read_metrics"], [109, 3, 1, "", "stat_tests"]], "borzoi_test_genes": [[110, 3, 1, "", "genes_aggregate"], [110, 3, 1, "", "main"], [110, 3, 1, "", "make_genes_exon"], [110, 3, 1, "", "make_genes_span"]], "borzoi_test_genes_folds": [[111, 3, 1, "", "main"], [111, 3, 1, "", "read_metrics"]], "dataset": [[112, 1, 1, "id0", "RnaDataset"], [112, 1, 1, "", "RnaDatasetV1"], [112, 1, 1, "", "RnaDatasetVikram"], [112, 1, 1, "", "SeqDataset"], [112, 4, 1, "", "TFR_INPUT"], [112, 4, 1, "", "TFR_OUTPUT"], [112, 3, 1, "", "file_to_records"]], "dataset.RnaDataset": [[112, 2, 1, "id1", "batches_per_epoch"], [112, 2, 1, "id3", "make_dataset"], [112, 2, 1, "id2", "make_parser"], [112, 2, 1, "id4", "numpy"]], "dataset.RnaDatasetV1": [[112, 2, 1, "", "batches_per_epoch"], [112, 2, 1, "", "make_dataset"], [112, 2, 1, "", "make_parser"]], "dataset.RnaDatasetVikram": [[112, 2, 1, "", "batches_per_epoch"], [112, 2, 1, "", "make_dataset"], [112, 2, 1, "", "make_parser"]], "dataset.SeqDataset": [[112, 2, 1, "", "batches_per_epoch"], [112, 2, 1, "", "compute_stats"], [112, 2, 1, "", "distribute"], [112, 2, 1, "", "generate_parser"], [112, 2, 1, "", "make_dataset"], [112, 2, 1, "", "numpy"]], "dna_io": [[113, 3, 1, "", "dna_1hot"], [113, 3, 1, "", "dna_1hot_index"], [113, 3, 1, "", "dna_rc"], [113, 3, 1, "", "hot1_augment"], [113, 3, 1, "", "hot1_delete"], [113, 3, 1, "", "hot1_dna"], [113, 3, 1, "", "hot1_get"], [113, 3, 1, "", "hot1_insert"], [113, 3, 1, "", "hot1_rc"], [113, 3, 1, "", "hot1_set"]], "emerald": [[114, 1, 1, "", "EmeraldVCF"]], "emerald.EmeraldVCF": [[114, 2, 1, "", "fetch"], [114, 2, 1, "", "query_ld"]], "gene": [[115, 1, 1, "", "Gene"], [115, 1, 1, "", "GeneSeq"], [115, 1, 1, "", "TSS"], [115, 3, 1, "", "map_tss_genes"]], "gene.GeneSeq": [[115, 2, 1, "", "__str__"], [115, 2, 1, "", "append_tss"], [115, 2, 1, "", "gene_names"]], "gene.TSS": [[115, 2, 1, "", "__str__"], [115, 2, 1, "", "seq_bin"]], "genedata": [[116, 1, 1, "", "GeneData"]], "genedata.GeneData": [[116, 2, 1, "", "__exit__"], [116, 2, 1, "", "gene_ids"], [116, 2, 1, "", "subset_genes"], [116, 2, 1, "", "tss_ids"], [116, 2, 1, "", "worker"]], "genome": [[117, 3, 1, "", "load_chromosomes"], [117, 3, 1, "", "split_contigs"]], "gff": [[118, 1, 1, "", "Exon"], [118, 1, 1, "", "Gene"], [118, 3, 1, "", "gtf_kv"], [118, 3, 1, "", "read_genes"], [118, 3, 1, "", "t2g"]], "gff.Exon": [[118, 2, 1, "", "__cmp__"], [118, 2, 1, "", "__eq__"], [118, 2, 1, "", "__lt__"], [118, 2, 1, "", "__str__"]], "gff.Gene": [[118, 2, 1, "", "__str__"], [118, 2, 1, "", "add_cds"], [118, 2, 1, "", "add_exon"], [118, 2, 1, "", "tss"]], "h5_tfr": [[119, 3, 1, "", "_bytes_feature"], [119, 3, 1, "", "_float_feature"], [119, 3, 1, "", "main"], [119, 3, 1, "", "writer_worker"]], "hdf5_bed": [[120, 3, 1, "", "main"]], "layers": [[122, 1, 1, "", "AverageTo2D"], [122, 1, 1, "", "CenterAverage"], [122, 1, 1, "", "CenterSlice"], [122, 1, 1, "", "Clip"], [122, 1, 1, "", "ConcatDist2D"], [122, 1, 1, "", "ConcatPosition"], [122, 1, 1, "", "ConcatTo2D"], [122, 1, 1, "", "DotTo2D"], [122, 1, 1, "", "EnsembleReverseComplement"], [122, 1, 1, "", "EnsembleShift"], [122, 1, 1, "", "Exp"], [122, 1, 1, "", "FactorInverse"], [122, 1, 1, "", "GeoDotTo2D"], [122, 1, 1, "", "GlobalContext"], [122, 1, 1, "", "LengthAverage"], [122, 1, 1, "", "MaxTo2D"], [122, 1, 1, "", "MultiheadAttention"], [122, 1, 1, "", "OneToTwo"], [122, 1, 1, "", "PolyReLU"], [122, 1, 1, "", "Scale"], [122, 1, 1, "", "SoftmaxPool1D"], [122, 1, 1, "", "Softplus"], [122, 1, 1, "", "SqueezeExcite"], [122, 1, 1, "", "StochasticReverseComplement"], [122, 1, 1, "", "StochasticShift"], [122, 1, 1, "", "SwitchReverse"], [122, 1, 1, "", "SwitchReverseTriu"], [122, 1, 1, "", "Symmetrize2D"], [122, 1, 1, "", "UpperTri"], [122, 1, 1, "", "WheezeExcite"], [122, 3, 1, "", "_prepend_dims"], [122, 3, 1, "", "activate"], [122, 3, 1, "", "gamma_pdf"], [122, 3, 1, "", "get_positional_feature_function"], [122, 3, 1, "", "positional_features"], [122, 3, 1, "", "positional_features_all"], [122, 3, 1, "", "positional_features_central_mask"], [122, 3, 1, "", "positional_features_gamma"], [122, 3, 1, "", "relative_shift"], [122, 3, 1, "", "rope"], [122, 3, 1, "", "shift_sequence"]], "layers.AverageTo2D": [[122, 2, 1, "", "call"]], "layers.CenterAverage": [[122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.CenterSlice": [[122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.Clip": [[122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.ConcatDist2D": [[122, 2, 1, "", "call"]], "layers.ConcatPosition": [[122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.ConcatTo2D": [[122, 2, 1, "", "call"]], "layers.DotTo2D": [[122, 2, 1, "", "call"]], "layers.EnsembleReverseComplement": [[122, 2, 1, "", "call"]], "layers.EnsembleShift": [[122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.Exp": [[122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.FactorInverse": [[122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.GeoDotTo2D": [[122, 2, 1, "", "call"]], "layers.GlobalContext": [[122, 2, 1, "", "build"], [122, 2, 1, "", "call"]], "layers.LengthAverage": [[122, 2, 1, "", "call"]], "layers.MaxTo2D": [[122, 2, 1, "", "call"]], "layers.MultiheadAttention": [[122, 2, 1, "", "_multihead_output"], [122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.OneToTwo": [[122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.PolyReLU": [[122, 2, 1, "", "call"]], "layers.Scale": [[122, 2, 1, "", "build"], [122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.SoftmaxPool1D": [[122, 2, 1, "", "build"], [122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.Softplus": [[122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.SqueezeExcite": [[122, 2, 1, "", "build"], [122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.StochasticReverseComplement": [[122, 2, 1, "", "call"]], "layers.StochasticShift": [[122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.SwitchReverse": [[122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.SwitchReverseTriu": [[122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.Symmetrize2D": [[122, 2, 1, "", "call"]], "layers.UpperTri": [[122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "layers.WheezeExcite": [[122, 2, 1, "", "build"], [122, 2, 1, "", "call"], [122, 2, 1, "", "get_config"]], "make_hg19_mini": [[123, 3, 1, "", "main"]], "make_targets": [[124, 3, 1, "", "assay_succinct"], [124, 3, 1, "", "main"], [124, 3, 1, "", "read_meta"]], "metrics": [[125, 1, 1, "", "MeanSquaredErrorUDot"], [125, 1, 1, "", "PearsonR"], [125, 1, 1, "", "PoissonKL"], [125, 1, 1, "", "PoissonMultinomial"], [125, 1, 1, "", "R2"], [125, 1, 1, "", "SeqAUC"], [125, 3, 1, "", "mean_squared_error_udot"], [125, 3, 1, "", "poisson_kl"], [125, 3, 1, "", "poisson_multinomial"]], "metrics.PearsonR": [[125, 2, 1, "", "reset_state"], [125, 2, 1, "", "result"], [125, 2, 1, "", "update_state"]], "metrics.R2": [[125, 2, 1, "", "reset_state"], [125, 2, 1, "", "result"], [125, 2, 1, "", "update_state"]], "metrics.SeqAUC": [[125, 2, 1, "", "interpolate_pr_auc"], [125, 2, 1, "", "result"], [125, 2, 1, "", "update_state"]], "ops": [[126, 3, 1, "", "_per_target_mean"], [126, 3, 1, "", "_per_target_variance"], [126, 3, 1, "", "adjust_max"], [126, 3, 1, "", "per_target_r2"], [126, 3, 1, "", "r2_averaged_over_all_prediction_tasks"], [126, 3, 1, "", "r2_metric"], [126, 3, 1, "", "reverse_complement"], [126, 3, 1, "", "reverse_complement_transform"], [126, 3, 1, "", "variance"]], "params": [[127, 1, 1, "", "ConvParams"], [127, 3, 1, "", "add_cnn_params"], [127, 3, 1, "", "add_cnn_params_cnn"], [127, 3, 1, "", "add_cnn_params_dense"], [127, 3, 1, "", "add_cnn_params_dres"], [127, 3, 1, "", "add_hparams_cnn"], [127, 3, 1, "", "add_hparams_dres"], [127, 3, 1, "", "layer_extend"], [127, 3, 1, "", "make_hparams"], [127, 3, 1, "", "read_job_params"]], "plots": [[128, 4, 1, "", "default_colors"], [128, 4, 1, "", "default_plot_funcs"], [128, 3, 1, "", "jointplot"], [128, 3, 1, "", "plot_a"], [128, 3, 1, "", "plot_c"], [128, 3, 1, "", "plot_g"], [128, 3, 1, "", "plot_t"], [128, 3, 1, "", "regplot"], [128, 3, 1, "", "scatter_lims"], [128, 3, 1, "", "seqlogo"]], "rnann": [[129, 1, 1, "", "RnaNN"]], "rnann.RnaNN": [[129, 2, 1, "", "build_ensemble"], [129, 2, 1, "", "build_model"], [129, 2, 1, "", "evaluate"], [129, 2, 1, "", "gradients"], [129, 2, 1, "", "predict"], [129, 2, 1, "", "restore"], [129, 2, 1, "", "save"], [129, 2, 1, "", "set_defaults"]], "sad5": [[130, 1, 1, "", "ChrSAD5"], [130, 1, 1, "", "SAD5"]], "sad5.ChrSAD5": [[130, 2, 1, "", "fit_cauchy"], [130, 2, 1, "", "index_snps"], [130, 2, 1, "", "norm_cauchy"], [130, 2, 1, "", "open_chr_sad5"], [130, 2, 1, "", "retrieve_snp"], [130, 2, 1, "", "set_population"], [130, 2, 1, "", "snp_chr_index"], [130, 2, 1, "", "snp_index"], [130, 2, 1, "", "snp_pos"], [130, 2, 1, "", "target_info"]], "sad5.SAD5": [[130, 2, 1, "", "__getitem__"], [130, 2, 1, "", "fit_cauchy"], [130, 2, 1, "", "norm_cauchy"], [130, 2, 1, "", "pos"], [130, 2, 1, "", "sad_pct"], [130, 2, 1, "", "snps"]], "saluki_bench_classify": [[131, 3, 1, "", "main"], [131, 3, 1, "", "read_ssd"]], "saluki_bench_gtex": [[132, 3, 1, "", "ensemble_ssd"], [132, 3, 1, "", "main"]], "saluki_bench_gtex_cmp": [[133, 3, 1, "", "main"], [133, 3, 1, "", "read_auroc"], [133, 3, 1, "", "ttest_alt"]], "saluki_grad_fasta": [[134, 3, 1, "", "dna_1hot"], [134, 3, 1, "", "main"], [134, 3, 1, "", "parse_fasta"]], "saluki_ism_tfr": [[135, 3, 1, "", "find_codon_index"], [135, 3, 1, "", "main"], [135, 3, 1, "", "satmut_gen"]], "saluki_ism_tfr_folds": [[136, 3, 1, "", "ensemble_scores"], [136, 3, 1, "", "main"], [136, 3, 1, "", "options_string"], [136, 3, 1, "", "valid_h5"]], "saluki_predict_fasta": [[137, 3, 1, "", "dna_1hot"], [137, 3, 1, "", "main"], [137, 3, 1, "", "parse_fasta"]], "saluki_ssd": [[138, 1, 1, "", "PredStreamGen"], [138, 3, 1, "", "main"], [138, 3, 1, "", "rna_1hot_cds"], [138, 3, 1, "", "rna_1hot_splice"], [138, 3, 1, "", "rna_1hot_splice_vikram"], [138, 3, 1, "", "set_rna_length"]], "saluki_ssd.PredStreamGen": [[138, 2, 1, "", "__getitem__"], [138, 2, 1, "", "make_dataset"]], "saluki_test": [[139, 3, 1, "", "main"]], "saluki_test_folds": [[140, 3, 1, "", "jointplot"], [140, 3, 1, "", "main"], [140, 3, 1, "", "read_metrics"], [140, 3, 1, "", "stat_tests"]], "saluki_train": [[141, 3, 1, "", "main"]], "saluki_train_folds": [[142, 3, 1, "", "main"], [142, 3, 1, "", "make_rep_data"], [142, 3, 1, "", "options_string"]], "save_model": [[143, 3, 1, "", "main"]], "seqnn": [[144, 1, 1, "", "SeqNN"]], "seqnn.SeqNN": [[144, 2, 1, "", "__call__"], [144, 2, 1, "", "build_block"], [144, 2, 1, "", "build_embed"], [144, 2, 1, "", "build_ensemble"], [144, 2, 1, "", "build_model"], [144, 2, 1, "", "build_sad"], [144, 2, 1, "", "build_slice"], [144, 2, 1, "", "downcast"], [144, 2, 1, "", "evaluate"], [144, 2, 1, "", "get_bn_layer"], [144, 2, 1, "", "get_conv_layer"], [144, 2, 1, "", "get_conv_weights"], [144, 2, 1, "", "get_dense_layer"], [144, 2, 1, "", "gradients"], [144, 2, 1, "", "gradients_func"], [144, 2, 1, "", "num_targets"], [144, 2, 1, "", "predict"], [144, 2, 1, "", "restore"], [144, 2, 1, "", "save"], [144, 2, 1, "", "set_defaults"], [144, 2, 1, "", "step"]], "seqnn_util": [[145, 1, 1, "", "SeqNNModel"]], "seqnn_util.SeqNNModel": [[145, 2, 1, "", "_gradients_ensemble"], [145, 2, 1, "", "_predict_ensemble"], [145, 2, 1, "", "build_grads"], [145, 2, 1, "", "build_grads_genes"], [145, 2, 1, "", "gradients"], [145, 2, 1, "", "gradients_genes"], [145, 2, 1, "", "hidden"], [145, 2, 1, "", "predict_genes"], [145, 2, 1, "", "predict_h5"], [145, 2, 1, "", "predict_h5_manual"], [145, 2, 1, "", "predict_tfr"], [145, 2, 1, "", "running_mean"], [145, 2, 1, "", "running_varsum"], [145, 2, 1, "", "test_h5"], [145, 2, 1, "", "test_h5_manual"], [145, 2, 1, "", "test_tfr"]], "seqs_hdf5": [[146, 3, 1, "", "main"]], "setup": [[147, 4, 1, "", "license"], [147, 4, 1, "", "readme"]], "sonnet_bench_gtex": [[148, 3, 1, "", "main"]], "sonnet_predict_bed": [[149, 3, 1, "", "bigwig_open"], [149, 3, 1, "", "bigwig_write"], [149, 3, 1, "", "main"]], "sonnet_sad": [[150, 3, 1, "", "main"]], "sonnet_sad_multi": [[151, 3, 1, "", "collect_h5"], [151, 3, 1, "", "job_completed"], [151, 3, 1, "", "main"]], "sonnet_sat_bed": [[152, 3, 1, "", "main"]], "sonnet_sat_bed_multi": [[153, 3, 1, "", "collect_h5"], [153, 3, 1, "", "job_completed"], [153, 3, 1, "", "main"]], "sonnet_sat_vcf": [[154, 3, 1, "", "main"]], "sonnet_satg_bed": [[155, 3, 1, "", "input_gradients"], [155, 3, 1, "", "main"], [155, 3, 1, "", "unaugment_grads"]], "sonnet_sed": [[156, 3, 1, "", "main"]], "sonnet_sed_multi": [[157, 3, 1, "", "collect_h5"], [157, 3, 1, "", "job_completed"], [157, 3, 1, "", "main"]], "stream": [[158, 1, 1, "", "PredGradStream"], [158, 1, 1, "", "PredStream"], [158, 1, 1, "", "PredStreamFeed"]], "stream.PredGradStream": [[158, 2, 1, "", "__getitem__"]], "stream.PredStream": [[158, 2, 1, "", "__getitem__"], [158, 2, 1, "", "make_dataset"]], "stream.PredStreamFeed": [[158, 2, 1, "", "__getitem__"]], "test_augment": [[159, 1, 1, "", "TestAugmentation"], [159, 3, 1, "", "make_data_op"]], "test_augment.TestAugmentation": [[159, 2, 1, "", "setUpClass"], [159, 2, 1, "", "test_deterministic"], [159, 2, 1, "", "test_stochastic"]], "test_data": [[160, 4, 1, "", "ModelSeq"], [160, 1, 1, "", "TestData"], [160, 3, 1, "", "file_to_records"], [160, 3, 1, "", "parse_proto"], [160, 3, 1, "", "read_seq_coords"]], "test_data.TestData": [[160, 2, 1, "", "read_tfrecords"], [160, 2, 1, "", "setUpClass"], [160, 2, 1, "", "test_output"], [160, 2, 1, "", "test_seqs"], [160, 2, 1, "", "test_targets"]], "test_data2": [[161, 4, 1, "", "ModelSeq"], [161, 1, 1, "", "TestData"], [161, 3, 1, "", "file_to_records"], [161, 3, 1, "", "parse_proto"], [161, 3, 1, "", "read_seq_coords"]], "test_data2.TestData": [[161, 2, 1, "", "read_tfrecords"], [161, 2, 1, "", "setUpClass"], [161, 2, 1, "", "test_output"], [161, 2, 1, "", "test_seqs"], [161, 2, 1, "", "test_targets"]], "test_dna_io": [[162, 1, 1, "", "TestAugment"], [162, 1, 1, "", "TestDelete"], [162, 1, 1, "", "TestInsert"], [162, 1, 1, "", "TestRC"]], "test_dna_io.TestAugment": [[162, 2, 1, "", "test_augment"]], "test_dna_io.TestDelete": [[162, 2, 1, "", "test_insert"]], "test_dna_io.TestInsert": [[162, 2, 1, "", "test_insert"]], "test_dna_io.TestRC": [[162, 2, 1, "", "test_rc"]], "test_gene": [[163, 1, 1, "", "TestGenesH5"]], "test_gene.TestGenesH5": [[163, 2, 1, "", "setUpClass"], [163, 2, 1, "", "test_seqs"], [163, 2, 1, "", "test_targets"]], "test_sad": [[164, 1, 1, "", "TestSAD"], [164, 1, 1, "", "TestSadRef"]], "test_sad.TestSAD": [[164, 2, 1, "", "setUpClass"], [164, 2, 1, "", "test_multi"], [164, 2, 1, "", "test_sad"], [164, 2, 1, "", "test_usad"]], "test_sad.TestSadRef": [[164, 2, 1, "", "setUpClass"], [164, 2, 1, "", "test_cluster"], [164, 2, 1, "", "test_get_1hots"], [164, 2, 1, "", "test_misorder"], [164, 2, 1, "", "test_misref"], [164, 2, 1, "", "test_multi"], [164, 2, 1, "", "test_run"]], "test_sat": [[165, 1, 1, "", "TestSatMut"]], "test_sat.TestSatMut": [[165, 2, 1, "", "setUpClass"], [165, 2, 1, "", "test_bed"]], "test_sed": [[166, 1, 1, "", "TestSED"]], "test_sed.TestSED": [[166, 2, 1, "", "setUpClass"], [166, 2, 1, "", "test_sed"]], "test_test": [[167, 1, 1, "", "TestTest"]], "test_test.TestTest": [[167, 2, 1, "", "setUpClass"], [167, 2, 1, "", "test_train"]], "test_train": [[168, 1, 1, "", "TestTrain"]], "test_train.TestTrain": [[168, 2, 1, "", "setUpClass"], [168, 2, 1, "", "test_train"]], "test_train_full": [[169, 1, 1, "", "TestTrain"]], "test_train_full.TestTrain": [[169, 2, 1, "", "setUpClass"], [169, 2, 1, "", "test_train"]], "tfr_bw": [[170, 3, 1, "", "main"], [170, 3, 1, "", "make_next_op"], [170, 3, 1, "", "parse_proto"]], "tfr_hdf5": [[171, 3, 1, "", "file_to_records"], [171, 3, 1, "", "main"], [171, 3, 1, "", "parse_proto"], [171, 3, 1, "", "read_tfr"]], "tfr_qc": [[172, 3, 1, "", "file_to_records"], [172, 3, 1, "", "main"], [172, 3, 1, "", "parse_proto"], [172, 3, 1, "", "plot_distr"], [172, 3, 1, "", "read_tfr"]], "tfrecord_batcher": [[173, 4, 1, "", "NUM_FILES_TO_PARALLEL_INTERLEAVE"], [173, 4, 1, "", "SHUFFLE_BUFFER_DEPTH_PER_FILE"], [173, 1, 1, "", "TFRecordBatcher"], [173, 3, 1, "", "make_data_ops"], [173, 3, 1, "", "make_input_fn"], [173, 3, 1, "", "num_possible_augmentations"], [173, 3, 1, "", "order_tfrecords"], [173, 3, 1, "", "tfrecord_dataset"], [173, 3, 1, "", "tfrecord_dataset_multi"]], "tfrecord_batcher.TFRecordBatcher": [[173, 2, 1, "", "initialize"], [173, 2, 1, "", "next"], [173, 2, 1, "", "reset"]], "trainer": [[174, 1, 1, "", "Cyclical1LearningRate"], [174, 1, 1, "", "EarlyStoppingMin"], [174, 1, 1, "", "Trainer"], [174, 1, 1, "", "WarmUp"], [174, 3, 1, "", "adaptive_clip_grad"], [174, 3, 1, "", "compute_norm"], [174, 3, 1, "", "parse_loss"], [174, 3, 1, "", "safe_next"], [174, 3, 1, "", "unitwise_norm"]], "trainer.Cyclical1LearningRate": [[174, 2, 1, "", "__call__"], [174, 2, 1, "", "get_config"]], "trainer.EarlyStoppingMin": [[174, 2, 1, "", "on_epoch_end"]], "trainer.Trainer": [[174, 2, 1, "", "compile"], [174, 2, 1, "", "fit2"], [174, 2, 1, "", "fit_keras"], [174, 2, 1, "", "fit_tape"], [174, 2, 1, "", "make_optimizer"]], "trainer.WarmUp": [[174, 2, 1, "", "__call__"], [174, 2, 1, "", "get_config"]], "unmappable_bed": [[175, 3, 1, "", "main"]], "upgrade_tf1": [[176, 3, 1, "", "main"]], "util": [[177, 3, 1, "", "exec_par"]], "vcf": [[178, 1, 1, "", "SNP"], [178, 3, 1, "", "cap_allele"], [178, 3, 1, "", "dna_length_1hot"], [178, 3, 1, "", "intersect_seqs_snps"], [178, 3, 1, "", "intersect_snps_seqs"], [178, 3, 1, "", "snp_seq1"], [178, 3, 1, "", "snps2_seq1"], [178, 3, 1, "", "snps_seq1"], [178, 3, 1, "", "vcf_count"], [178, 3, 1, "", "vcf_snps"], [178, 3, 1, "", "vcf_sort"]], "vcf.SNP": [[178, 2, 1, "", "__str__"], [178, 2, 1, "", "flip_alleles"], [178, 2, 1, "", "get_alleles"], [178, 2, 1, "", "longest_alt"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"accuraci": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "class": [0, 12, 32, 34, 35, 36, 61, 66, 74, 84, 112, 114, 115, 116, 118, 122, 125, 127, 129, 130, 138, 144, 145, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 178], "augment": 11, "function": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 170, 171, 172, 173, 174, 175, 176, 177, 178], "bed": 97, "block": 99, "attribut": [26, 27, 28, 48, 49, 84, 86, 90, 91, 94, 99, 112, 128, 160, 161, 173], "dataset": 112, "dna_io": 113, "emerald": 114, "gene": 115, "genedata": 116, "genom": 117, "gff": 118, "api": 121, "refer": 121, "layer": 122, "metric": 125, "op": 126, "param": 127, "plot": 128, "rnann": 129, "sad5": 130, "seqnn": 144, "seqnn_util": 145, "stream": 158, "tfrecord_batch": 173, "trainer": 174, "util": 177, "vcf": 178, "welcom": 179, "init_websit": 179, "": 179, "document": 179, "indic": 179, "tabl": 179, "akita_data": 1, "akita_data_read": 2, "akita_data_writ": 3, "akita_predict": 4, "akita_sat_plot": 5, "akita_sat_vcf": 6, "akita_scd": 7, "akita_scd_multi": 8, "akita_test": 9, "akita_train": 10, "bam_cov": 12, "basenji_annot_chr": 13, "basenji_averag": 14, "basenji_bedg_tfr": 15, "basenji_bench_classifi": 16, "basenji_bench_gtex": 17, "basenji_bench_gtex_cmp": 18, "basenji_bench_gtex_fold": 19, "basenji_bench_phylop": 20, "basenji_bench_phylop_fold": 21, "basenji_bench_phylopvcf": 22, "basenji_bench_phylopvcf_fold": 23, "basenji_bigwig_tfr": 24, "basenji_cmp": 25, "basenji_data": 26, "basenji_data2": 27, "basenji_data_align": 28, "basenji_data_gen": 29, "basenji_data_hic_read": 30, "basenji_data_hic_writ": 31, "basenji_data_read": 32, "basenji_data_writ": 33, "basenji_fetch_app": 34, "basenji_fetch_app1": 35, "basenji_fetch_app2": 36, "basenji_fetch_norm": 37, "basenji_fetch_vcf": 38, "basenji_fin": 39, "basenji_gtex_fold": 40, "basenji_hdf5_clust": 41, "basenji_hdf5_gen": 42, "basenji_hdf5_singl": 43, "basenji_hidden": 44, "basenji_map": 45, "basenji_map_gen": 46, "basenji_map_seq": 47, "basenji_motif": 48, "basenji_motifs_denovo": 49, "basenji_motifs_inject": 50, "basenji_motifs_inject_fold": 51, "basenji_norm_h5": 52, "basenji_predict": 53, "basenji_predict_b": 54, "basenji_predict_bed_multi": 55, "basenji_predict_tfr": 56, "basenji_predict_var": 57, "basenji_sad": 58, "basenji_sad_multi": 59, "basenji_sad_norm": 60, "basenji_sad_ref": 61, "basenji_sad_ref_multi": 62, "basenji_sad_t": 63, "basenji_sadf": 64, "basenji_sadf_multi": 65, "basenji_sat_b": 66, "basenji_sat_bed_multi": 67, "basenji_sat_fold": 68, "basenji_sat_h5": 69, "basenji_sat_plot": 70, "basenji_sat_plot2": 71, "basenji_sat_vcf": 72, "basenji_s": 73, "basenji_sed_multi": 74, "basenji_sedg": 75, "basenji_test": 76, "basenji_test_fold": 77, "basenji_test_gen": 78, "basenji_test_h5": 79, "basenji_test_orig": 80, "basenji_test_rep": 81, "basenji_test_specif": 82, "basenji_train": 83, "basenji_train1": 84, "basenji_train2": 85, "basenji_train_app": 86, "basenji_train_avg": 87, "basenji_train_fold": 88, "basenji_train_folds_gcp": 89, "basenji_train_h5": 90, "basenji_train_h5man": 91, "basenji_train_head": 92, "basenji_train_head_fold": 93, "basenji_train_h": 94, "basenji_train_rep": 95, "basenji_vari": 96, "bigwig_hdf5": 98, "borzoi_bench_crispr": 100, "borzoi_bench_crispr_fold": 101, "borzoi_bench_flowfish_fold": 102, "borzoi_bench_gasperini_fold": 103, "borzoi_bench_sqtl_fold": 104, "borzoi_satg_gen": 105, "borzoi_satg_gene_multi": 106, "borzoi_s": 107, "borzoi_test_exon": 108, "borzoi_test_exons_fold": 109, "borzoi_test_gen": 110, "borzoi_test_genes_fold": 111, "h5_tfr": 119, "saluki_bench_classifi": 131, "saluki_bench_gtex": 132, "saluki_bench_gtex_cmp": 133, "saluki_grad_fasta": 134, "saluki_ism_tfr": 135, "saluki_ism_tfr_fold": 136, "saluki_predict_fasta": 137, "saluki_ssd": 138, "saluki_test": 139, "saluki_test_fold": 140, "saluki_train": 141, "saluki_train_fold": 142, "save_model": 143, "seqs_hdf5": 146, "sonnet_bench_gtex": 148, "sonnet_predict_b": 149, "sonnet_sad": 150, "sonnet_sad_multi": 151, "sonnet_sat_b": 152, "sonnet_sat_bed_multi": 153, "sonnet_sat_vcf": 154, "sonnet_satg_b": 155, "sonnet_s": 156, "sonnet_sed_multi": 157, "tfr_bw": 170, "tfr_hdf5": 171, "tfr_qc": 172, "unmappable_b": 175, "upgrade_tf1": 176, "hdf5_bed": 120, "make_hg19_mini": 123, "make_target": 124, "setup": 147, "test_aug": 159, "test_data": 160, "test_data2": 161, "test_dna_io": 162, "test_gen": 163, "test_sad": 164, "test_sat": 165, "test_s": 166, "test_test": 167, "test_train": 168, "test_train_ful": 169}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to Init_website\u2019s documentation!": [[179, "welcome-to-init-website-s-documentation"]], "Contents:": [[179, null]], "Indices and tables": [[179, "indices-and-tables"]], "accuracy": [[0, "module-accuracy"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"]], "Classes": [[0, "classes"], [12, "classes"], [32, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [61, "classes"], [66, "classes"], [74, "classes"], [84, "classes"], [112, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [118, "classes"], [122, "classes"], [125, "classes"], [127, "classes"], [129, "classes"], [130, "classes"], [138, "classes"], [144, "classes"], [145, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [173, "classes"], [174, "classes"], [178, "classes"]], "akita_data": [[1, "module-akita_data"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [17, "functions"], [18, "functions"], [19, "functions"], [20, "functions"], [21, "functions"], [22, "functions"], [23, "functions"], [24, "functions"], [25, "functions"], [26, "functions"], [27, "functions"], [28, "functions"], [29, "functions"], [30, "functions"], [31, "functions"], [32, "functions"], [33, "functions"], [34, "functions"], [35, "functions"], [36, "functions"], [37, "functions"], [38, "functions"], [39, "functions"], [40, "functions"], [41, "functions"], [42, "functions"], [43, "functions"], [44, "functions"], [45, "functions"], [46, "functions"], [47, "functions"], [48, "functions"], [49, "functions"], [50, "functions"], [51, "functions"], [52, "functions"], [53, "functions"], [54, "functions"], [55, "functions"], [56, "functions"], [57, "functions"], [58, "functions"], [59, "functions"], [60, "functions"], [61, "functions"], [62, "functions"], [63, "functions"], [64, "functions"], [65, "functions"], [66, "functions"], [67, "functions"], [68, "functions"], [69, "functions"], [70, "functions"], [71, "functions"], [72, "functions"], [73, "functions"], [74, "functions"], [75, "functions"], [76, "functions"], [77, "functions"], [78, "functions"], [79, "functions"], [80, "functions"], [81, "functions"], [82, "functions"], [83, "functions"], [84, "functions"], [85, "functions"], [86, "functions"], [87, "functions"], [88, "functions"], [89, "functions"], [90, "functions"], [91, "functions"], [92, "functions"], [93, "functions"], [94, "functions"], [95, "functions"], [96, "functions"], [97, "functions"], [98, "functions"], [99, "functions"], [100, "functions"], [101, "functions"], [102, "functions"], [103, "functions"], [104, "functions"], [105, "functions"], [106, "functions"], [107, "functions"], [108, "functions"], [109, "functions"], [110, "functions"], [111, "functions"], [112, "functions"], [113, "functions"], [115, "functions"], [117, "functions"], [118, "functions"], [119, "functions"], [120, "functions"], [122, "functions"], [123, "functions"], [124, "functions"], [125, "functions"], [126, "functions"], [127, "functions"], [128, "functions"], [131, "functions"], [132, "functions"], [133, "functions"], [134, "functions"], [135, "functions"], [136, "functions"], [137, "functions"], [138, "functions"], [139, "functions"], [140, "functions"], [141, "functions"], [142, "functions"], [143, "functions"], [146, "functions"], [148, "functions"], [149, "functions"], [150, "functions"], [151, "functions"], [152, "functions"], [153, "functions"], [154, "functions"], [155, "functions"], [156, "functions"], [157, "functions"], [159, "functions"], [160, "functions"], [161, "functions"], [170, "functions"], [171, "functions"], [172, "functions"], [173, "functions"], [174, "functions"], [175, "functions"], [176, "functions"], [177, "functions"], [178, "functions"]], "akita_data_read": [[2, "module-akita_data_read"]], "akita_data_write": [[3, "module-akita_data_write"]], "akita_predict": [[4, "module-akita_predict"]], "akita_sat_plot": [[5, "module-akita_sat_plot"]], "akita_sat_vcf": [[6, "module-akita_sat_vcf"]], "akita_scd": [[7, "module-akita_scd"]], "akita_scd_multi": [[8, "module-akita_scd_multi"]], "akita_test": [[9, "module-akita_test"]], "akita_train": [[10, "module-akita_train"]], "augmentation": [[11, "module-augmentation"]], "bam_cov": [[12, "module-bam_cov"]], "basenji_annot_chr": [[13, "module-basenji_annot_chr"]], "basenji_average": [[14, "module-basenji_average"]], "basenji_bedg_tfr": [[15, "module-basenji_bedg_tfr"]], "basenji_bench_classify": [[16, "module-basenji_bench_classify"]], "basenji_bench_gtex": [[17, "module-basenji_bench_gtex"]], "basenji_bench_gtex_cmp": [[18, "module-basenji_bench_gtex_cmp"]], "basenji_bench_gtex_folds": [[19, "module-basenji_bench_gtex_folds"]], "basenji_bench_phylop": [[20, "module-basenji_bench_phylop"]], "basenji_bench_phylop_folds": [[21, "module-basenji_bench_phylop_folds"]], "basenji_bench_phylopvcf": [[22, "module-basenji_bench_phylopvcf"]], "basenji_bench_phylopvcf_folds": [[23, "module-basenji_bench_phylopvcf_folds"]], "basenji_bigwig_tfr": [[24, "module-basenji_bigwig_tfr"]], "basenji_cmp": [[25, "module-basenji_cmp"]], "basenji_data": [[26, "module-basenji_data"]], "Attributes": [[26, "attributes"], [27, "attributes"], [28, "attributes"], [48, "attributes"], [49, "attributes"], [84, "attributes"], [86, "attributes"], [90, "attributes"], [91, "attributes"], [94, "attributes"], [99, "attributes"], [112, "attributes"], [128, "attributes"], [160, "attributes"], [161, "attributes"], [173, "attributes"]], "basenji_data2": [[27, "module-basenji_data2"]], "basenji_data_align": [[28, "module-basenji_data_align"]], "basenji_data_gene": [[29, "module-basenji_data_gene"]], "basenji_data_hic_read": [[30, "module-basenji_data_hic_read"]], "basenji_data_hic_write": [[31, "module-basenji_data_hic_write"]], "basenji_data_read": [[32, "module-basenji_data_read"]], "basenji_data_write": [[33, "module-basenji_data_write"]], "basenji_fetch_app": [[34, "module-basenji_fetch_app"]], "basenji_fetch_app1": [[35, "module-basenji_fetch_app1"]], "basenji_fetch_app2": [[36, "module-basenji_fetch_app2"]], "basenji_fetch_norm": [[37, "module-basenji_fetch_norm"]], "basenji_fetch_vcf": [[38, "module-basenji_fetch_vcf"]], "basenji_final": [[39, "module-basenji_final"]], "basenji_gtex_folds": [[40, "module-basenji_gtex_folds"]], "basenji_hdf5_cluster": [[41, "module-basenji_hdf5_cluster"]], "basenji_hdf5_genes": [[42, "module-basenji_hdf5_genes"]], "basenji_hdf5_single": [[43, "module-basenji_hdf5_single"]], "basenji_hidden": [[44, "module-basenji_hidden"]], "basenji_map": [[45, "module-basenji_map"]], "basenji_map_genes": [[46, "module-basenji_map_genes"]], "basenji_map_seqs": [[47, "module-basenji_map_seqs"]], "basenji_motifs": [[48, "module-basenji_motifs"]], "basenji_motifs_denovo": [[49, "module-basenji_motifs_denovo"]], "basenji_motifs_inject": [[50, "module-basenji_motifs_inject"]], "basenji_motifs_inject_folds": [[51, "module-basenji_motifs_inject_folds"]], "basenji_norm_h5": [[52, "module-basenji_norm_h5"]], "basenji_predict": [[53, "module-basenji_predict"]], "basenji_predict_bed": [[54, "module-basenji_predict_bed"]], "basenji_predict_bed_multi": [[55, "module-basenji_predict_bed_multi"]], "basenji_predict_tfr": [[56, "module-basenji_predict_tfr"]], "basenji_predict_var": [[57, "module-basenji_predict_var"]], "basenji_sad": [[58, "module-basenji_sad"]], "basenji_sad_multi": [[59, "module-basenji_sad_multi"]], "basenji_sad_norm": [[60, "module-basenji_sad_norm"]], "basenji_sad_ref": [[61, "module-basenji_sad_ref"]], "basenji_sad_ref_multi": [[62, "module-basenji_sad_ref_multi"]], "basenji_sad_table": [[63, "module-basenji_sad_table"]], "basenji_sadf": [[64, "module-basenji_sadf"]], "basenji_sadf_multi": [[65, "module-basenji_sadf_multi"]], "basenji_sat_bed": [[66, "module-basenji_sat_bed"]], "basenji_sat_bed_multi": [[67, "module-basenji_sat_bed_multi"]], "basenji_sat_folds": [[68, "module-basenji_sat_folds"]], "basenji_sat_h5": [[69, "module-basenji_sat_h5"]], "basenji_sat_plot": [[70, "module-basenji_sat_plot"]], "basenji_sat_plot2": [[71, "module-basenji_sat_plot2"]], "basenji_sat_vcf": [[72, "module-basenji_sat_vcf"]], "basenji_sed": [[73, "module-basenji_sed"]], "basenji_sed_multi": [[74, "module-basenji_sed_multi"]], "basenji_sedg": [[75, "module-basenji_sedg"]], "basenji_test": [[76, "module-basenji_test"]], "basenji_test_folds": [[77, "module-basenji_test_folds"]], "basenji_test_genes": [[78, "module-basenji_test_genes"]], "basenji_test_h5": [[79, "module-basenji_test_h5"]], "basenji_test_orig": [[80, "module-basenji_test_orig"]], "basenji_test_reps": [[81, "module-basenji_test_reps"]], "basenji_test_specificity": [[82, "module-basenji_test_specificity"]], "basenji_train": [[83, "module-basenji_train"]], "basenji_train1": [[84, "module-basenji_train1"]], "basenji_train2": [[85, "module-basenji_train2"]], "basenji_train_app": [[86, "module-basenji_train_app"]], "basenji_train_avg": [[87, "module-basenji_train_avg"]], "basenji_train_folds": [[88, "module-basenji_train_folds"]], "basenji_train_folds_gcp": [[89, "module-basenji_train_folds_gcp"]], "basenji_train_h5": [[90, "module-basenji_train_h5"]], "basenji_train_h5man": [[91, "module-basenji_train_h5man"]], "basenji_train_head": [[92, "module-basenji_train_head"]], "basenji_train_head_folds": [[93, "module-basenji_train_head_folds"]], "basenji_train_hic": [[94, "module-basenji_train_hic"]], "basenji_train_reps": [[95, "module-basenji_train_reps"]], "basenji_variables": [[96, "module-basenji_variables"]], "bed": [[97, "module-bed"]], "bigwig_hdf5": [[98, "module-bigwig_hdf5"]], "blocks": [[99, "module-blocks"]], "borzoi_bench_crispr": [[100, "module-borzoi_bench_crispr"]], "borzoi_bench_crispr_folds": [[101, "module-borzoi_bench_crispr_folds"]], "borzoi_bench_flowfish_folds": [[102, "module-borzoi_bench_flowfish_folds"]], "borzoi_bench_gasperini_folds": [[103, "module-borzoi_bench_gasperini_folds"]], "borzoi_bench_sqtl_folds": [[104, "module-borzoi_bench_sqtl_folds"]], "borzoi_satg_gene": [[105, "module-borzoi_satg_gene"]], "borzoi_satg_gene_multi": [[106, "module-borzoi_satg_gene_multi"]], "borzoi_sed": [[107, "module-borzoi_sed"]], "borzoi_test_exons": [[108, "module-borzoi_test_exons"]], "borzoi_test_exons_folds": [[109, "module-borzoi_test_exons_folds"]], "borzoi_test_genes": [[110, "module-borzoi_test_genes"]], "borzoi_test_genes_folds": [[111, "module-borzoi_test_genes_folds"]], "dataset": [[112, "module-dataset"]], "dna_io": [[113, "module-dna_io"]], "emerald": [[114, "module-emerald"]], "gene": [[115, "module-gene"]], "genedata": [[116, "module-genedata"]], "genome": [[117, "module-genome"]], "gff": [[118, "module-gff"]], "h5_tfr": [[119, "module-h5_tfr"]], "hdf5_bed": [[120, "module-hdf5_bed"]], "API Reference": [[121, "api-reference"]], "layers": [[122, "module-layers"]], "make_hg19_mini": [[123, "module-make_hg19_mini"]], "make_targets": [[124, "module-make_targets"]], "metrics": [[125, "module-metrics"]], "ops": [[126, "module-ops"]], "params": [[127, "module-params"]], "plots": [[128, "module-plots"]], "rnann": [[129, "module-rnann"]], "sad5": [[130, "module-sad5"]], "saluki_bench_classify": [[131, "module-saluki_bench_classify"]], "saluki_bench_gtex": [[132, "module-saluki_bench_gtex"]], "saluki_bench_gtex_cmp": [[133, "module-saluki_bench_gtex_cmp"]], "saluki_grad_fasta": [[134, "module-saluki_grad_fasta"]], "saluki_ism_tfr": [[135, "module-saluki_ism_tfr"]], "saluki_ism_tfr_folds": [[136, "module-saluki_ism_tfr_folds"]], "saluki_predict_fasta": [[137, "module-saluki_predict_fasta"]], "saluki_ssd": [[138, "module-saluki_ssd"]], "saluki_test": [[139, "module-saluki_test"]], "saluki_test_folds": [[140, "module-saluki_test_folds"]], "saluki_train": [[141, "module-saluki_train"]], "saluki_train_folds": [[142, "module-saluki_train_folds"]], "save_model": [[143, "module-save_model"]], "seqnn": [[144, "module-seqnn"]], "seqnn_util": [[145, "module-seqnn_util"]], "seqs_hdf5": [[146, "module-seqs_hdf5"]], "setup": [[147, "module-setup"]], "sonnet_bench_gtex": [[148, "module-sonnet_bench_gtex"]], "sonnet_predict_bed": [[149, "module-sonnet_predict_bed"]], "sonnet_sad": [[150, "module-sonnet_sad"]], "sonnet_sad_multi": [[151, "module-sonnet_sad_multi"]], "sonnet_sat_bed": [[152, "module-sonnet_sat_bed"]], "sonnet_sat_bed_multi": [[153, "module-sonnet_sat_bed_multi"]], "sonnet_sat_vcf": [[154, "module-sonnet_sat_vcf"]], "sonnet_satg_bed": [[155, "module-sonnet_satg_bed"]], "sonnet_sed": [[156, "module-sonnet_sed"]], "sonnet_sed_multi": [[157, "module-sonnet_sed_multi"]], "stream": [[158, "module-stream"]], "test_augment": [[159, "module-test_augment"]], "test_data": [[160, "module-test_data"]], "test_data2": [[161, "module-test_data2"]], "test_dna_io": [[162, "module-test_dna_io"]], "test_gene": [[163, "module-test_gene"]], "test_sad": [[164, "module-test_sad"]], "test_sat": [[165, "module-test_sat"]], "test_sed": [[166, "module-test_sed"]], "test_test": [[167, "module-test_test"]], "test_train": [[168, "module-test_train"]], "test_train_full": [[169, "module-test_train_full"]], "tfr_bw": [[170, "module-tfr_bw"]], "tfr_hdf5": [[171, "module-tfr_hdf5"]], "tfr_qc": [[172, "module-tfr_qc"]], "tfrecord_batcher": [[173, "module-tfrecord_batcher"]], "trainer": [[174, "module-trainer"]], "unmappable_bed": [[175, "module-unmappable_bed"]], "upgrade_tf1": [[176, "module-upgrade_tf1"]], "util": [[177, "module-util"]], "vcf": [[178, "module-vcf"]]}, "indexentries": {"accuracy (class in accuracy)": [[0, "accuracy.Accuracy"]], "accuracy": [[0, "module-accuracy"]], "module": [[0, "module-accuracy"], [1, "module-akita_data"], [2, "module-akita_data_read"], [3, "module-akita_data_write"], [4, "module-akita_predict"], [5, "module-akita_sat_plot"], [6, "module-akita_sat_vcf"], [7, "module-akita_scd"], [8, "module-akita_scd_multi"], [9, "module-akita_test"], [10, "module-akita_train"], [11, "module-augmentation"], [12, "module-bam_cov"], [13, "module-basenji_annot_chr"], [14, "module-basenji_average"], [15, "module-basenji_bedg_tfr"], [16, "module-basenji_bench_classify"], [17, "module-basenji_bench_gtex"], [18, "module-basenji_bench_gtex_cmp"], [19, "module-basenji_bench_gtex_folds"], [20, "module-basenji_bench_phylop"], [21, "module-basenji_bench_phylop_folds"], [22, "module-basenji_bench_phylopvcf"], [23, "module-basenji_bench_phylopvcf_folds"], [24, "module-basenji_bigwig_tfr"], [25, "module-basenji_cmp"], [26, "module-basenji_data"], [27, "module-basenji_data2"], [28, "module-basenji_data_align"], [29, "module-basenji_data_gene"], [30, "module-basenji_data_hic_read"], [31, "module-basenji_data_hic_write"], [32, "module-basenji_data_read"], [33, "module-basenji_data_write"], [34, "module-basenji_fetch_app"], [35, "module-basenji_fetch_app1"], [36, "module-basenji_fetch_app2"], [37, "module-basenji_fetch_norm"], [38, "module-basenji_fetch_vcf"], [39, "module-basenji_final"], [40, "module-basenji_gtex_folds"], [41, "module-basenji_hdf5_cluster"], [42, "module-basenji_hdf5_genes"], [43, "module-basenji_hdf5_single"], [44, "module-basenji_hidden"], [45, "module-basenji_map"], [46, "module-basenji_map_genes"], [47, "module-basenji_map_seqs"], [48, "module-basenji_motifs"], [49, "module-basenji_motifs_denovo"], [50, "module-basenji_motifs_inject"], [51, "module-basenji_motifs_inject_folds"], [52, "module-basenji_norm_h5"], [53, "module-basenji_predict"], [54, "module-basenji_predict_bed"], [55, "module-basenji_predict_bed_multi"], [56, "module-basenji_predict_tfr"], [57, "module-basenji_predict_var"], [58, "module-basenji_sad"], [59, "module-basenji_sad_multi"], [60, "module-basenji_sad_norm"], [61, "module-basenji_sad_ref"], [62, "module-basenji_sad_ref_multi"], [63, "module-basenji_sad_table"], [64, "module-basenji_sadf"], [65, "module-basenji_sadf_multi"], [66, "module-basenji_sat_bed"], [67, "module-basenji_sat_bed_multi"], [68, "module-basenji_sat_folds"], [69, "module-basenji_sat_h5"], [70, "module-basenji_sat_plot"], [71, "module-basenji_sat_plot2"], [72, "module-basenji_sat_vcf"], [73, "module-basenji_sed"], [74, "module-basenji_sed_multi"], [75, "module-basenji_sedg"], [76, "module-basenji_test"], [77, "module-basenji_test_folds"], [78, "module-basenji_test_genes"], [79, "module-basenji_test_h5"], [80, "module-basenji_test_orig"], [81, "module-basenji_test_reps"], [82, "module-basenji_test_specificity"], [83, "module-basenji_train"], [84, "module-basenji_train1"], [85, "module-basenji_train2"], [86, "module-basenji_train_app"], [87, "module-basenji_train_avg"], [88, "module-basenji_train_folds"], [89, "module-basenji_train_folds_gcp"], [90, "module-basenji_train_h5"], [91, "module-basenji_train_h5man"], [92, "module-basenji_train_head"], [93, "module-basenji_train_head_folds"], [94, "module-basenji_train_hic"], [95, "module-basenji_train_reps"], [96, "module-basenji_variables"], [97, "module-bed"], [98, "module-bigwig_hdf5"], [99, "module-blocks"], [100, "module-borzoi_bench_crispr"], [101, "module-borzoi_bench_crispr_folds"], [102, "module-borzoi_bench_flowfish_folds"], [103, "module-borzoi_bench_gasperini_folds"], [104, "module-borzoi_bench_sqtl_folds"], [105, "module-borzoi_satg_gene"], [106, "module-borzoi_satg_gene_multi"], [107, "module-borzoi_sed"], [108, "module-borzoi_test_exons"], [109, "module-borzoi_test_exons_folds"], [110, "module-borzoi_test_genes"], [111, "module-borzoi_test_genes_folds"], [112, "module-dataset"], [113, "module-dna_io"], [114, "module-emerald"], [115, "module-gene"], [116, "module-genedata"], [117, "module-genome"], [118, "module-gff"], [119, "module-h5_tfr"], [120, "module-hdf5_bed"], [122, "module-layers"], [123, "module-make_hg19_mini"], [124, "module-make_targets"], [125, "module-metrics"], [126, "module-ops"], [127, "module-params"], [128, "module-plots"], [129, "module-rnann"], [130, "module-sad5"], [131, "module-saluki_bench_classify"], [132, "module-saluki_bench_gtex"], [133, "module-saluki_bench_gtex_cmp"], [134, "module-saluki_grad_fasta"], [135, "module-saluki_ism_tfr"], [136, "module-saluki_ism_tfr_folds"], [137, "module-saluki_predict_fasta"], [138, "module-saluki_ssd"], [139, "module-saluki_test"], [140, "module-saluki_test_folds"], [141, "module-saluki_train"], [142, "module-saluki_train_folds"], [143, "module-save_model"], [144, "module-seqnn"], [145, "module-seqnn_util"], [146, "module-seqs_hdf5"], [147, "module-setup"], [148, "module-sonnet_bench_gtex"], [149, "module-sonnet_predict_bed"], [150, "module-sonnet_sad"], [151, "module-sonnet_sad_multi"], [152, "module-sonnet_sat_bed"], [153, "module-sonnet_sat_bed_multi"], [154, "module-sonnet_sat_vcf"], [155, "module-sonnet_satg_bed"], [156, "module-sonnet_sed"], [157, "module-sonnet_sed_multi"], [158, "module-stream"], [159, "module-test_augment"], [160, "module-test_data"], [161, "module-test_data2"], [162, "module-test_dna_io"], [163, "module-test_gene"], [164, "module-test_sad"], [165, "module-test_sat"], [166, "module-test_sed"], [167, "module-test_test"], [168, "module-test_train"], [169, "module-test_train_full"], [170, "module-tfr_bw"], [171, "module-tfr_hdf5"], [172, "module-tfr_qc"], [173, "module-tfrecord_batcher"], [174, "module-trainer"], [175, "module-unmappable_bed"], [176, "module-upgrade_tf1"], [177, "module-util"], [178, "module-vcf"]], "pearsonr() (accuracy.accuracy method)": [[0, "accuracy.Accuracy.pearsonr"]], "r2() (accuracy.accuracy method)": [[0, "accuracy.Accuracy.r2"]], "spearmanr() (accuracy.accuracy method)": [[0, "accuracy.Accuracy.spearmanr"]], "akita_data": [[1, "module-akita_data"]], "main() (in module akita_data)": [[1, "akita_data.main"]], "akita_data_read": [[2, "module-akita_data_read"]], "main() (in module akita_data_read)": [[2, "akita_data_read.main"]], "_bytes_feature() (in module akita_data_write)": [[3, "akita_data_write._bytes_feature"]], "_int_feature() (in module akita_data_write)": [[3, "akita_data_write._int_feature"]], "akita_data_write": [[3, "module-akita_data_write"]], "main() (in module akita_data_write)": [[3, "akita_data_write.main"]], "akita_predict": [[4, "module-akita_predict"]], "bigwig_open() (in module akita_predict)": [[4, "akita_predict.bigwig_open"]], "bigwig_write() (in module akita_predict)": [[4, "akita_predict.bigwig_write"]], "main() (in module akita_predict)": [[4, "akita_predict.main"]], "akita_sat_plot": [[5, "module-akita_sat_plot"]], "main() (in module akita_sat_plot)": [[5, "akita_sat_plot.main"]], "akita_sat_vcf": [[6, "module-akita_sat_vcf"]], "fs_clean() (in module akita_sat_vcf)": [[6, "akita_sat_vcf.fs_clean"]], "main() (in module akita_sat_vcf)": [[6, "akita_sat_vcf.main"]], "plot_heat() (in module akita_sat_vcf)": [[6, "akita_sat_vcf.plot_heat"]], "plot_scd() (in module akita_sat_vcf)": [[6, "akita_sat_vcf.plot_scd"]], "satmut_seqs() (in module akita_sat_vcf)": [[6, "akita_sat_vcf.satmut_seqs"]], "score_matrix() (in module akita_sat_vcf)": [[6, "akita_sat_vcf.score_matrix"]], "subplot_params() (in module akita_sat_vcf)": [[6, "akita_sat_vcf.subplot_params"]], "akita_scd": [[7, "module-akita_scd"]], "initialize_output_h5() (in module akita_scd)": [[7, "akita_scd.initialize_output_h5"]], "main() (in module akita_scd)": [[7, "akita_scd.main"]], "ut_dense() (in module akita_scd)": [[7, "akita_scd.ut_dense"]], "write_snp() (in module akita_scd)": [[7, "akita_scd.write_snp"]], "akita_scd_multi": [[8, "module-akita_scd_multi"]], "collect_h5() (in module akita_scd_multi)": [[8, "akita_scd_multi.collect_h5"]], "collect_table() (in module akita_scd_multi)": [[8, "akita_scd_multi.collect_table"]], "job_completed() (in module akita_scd_multi)": [[8, "akita_scd_multi.job_completed"]], "main() (in module akita_scd_multi)": [[8, "akita_scd_multi.main"]], "akita_test": [[9, "module-akita_test"]], "ben_hoch() (in module akita_test)": [[9, "akita_test.ben_hoch"]], "main() (in module akita_test)": [[9, "akita_test.main"]], "test_peaks() (in module akita_test)": [[9, "akita_test.test_peaks"]], "akita_train": [[10, "module-akita_train"]], "main() (in module akita_train)": [[10, "akita_train.main"]], "augment_deterministic() (in module augmentation)": [[11, "augmentation.augment_deterministic"]], "augment_deterministic_rc() (in module augmentation)": [[11, "augmentation.augment_deterministic_rc"]], "augment_deterministic_set() (in module augmentation)": [[11, "augmentation.augment_deterministic_set"]], "augment_stochastic() (in module augmentation)": [[11, "augmentation.augment_stochastic"]], "augment_stochastic_rc() (in module augmentation)": [[11, "augmentation.augment_stochastic_rc"]], "augment_stochastic_shifts() (in module augmentation)": [[11, "augmentation.augment_stochastic_shifts"]], "augmentation": [[11, "module-augmentation"]], "reverse_preds() (in module augmentation)": [[11, "augmentation.reverse_preds"]], "shift_sequence() (in module augmentation)": [[11, "augmentation.shift_sequence"]], "stochastic_rc() (in module augmentation)": [[11, "augmentation.stochastic_rc"]], "genomecoverage (class in bam_cov)": [[12, "bam_cov.GenomeCoverage"]], "align_shifts() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.align_shifts"]], "bam_cov": [[12, "module-bam_cov"]], "cigar_len() (in module bam_cov)": [[12, "bam_cov.cigar_len"]], "clip_multi() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.clip_multi"]], "compute_cut_norms() (in module bam_cov)": [[12, "bam_cov.compute_cut_norms"]], "distribute_multi() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.distribute_multi"]], "distribute_multi_succint() (in module bam_cov)": [[12, "bam_cov.distribute_multi_succint"]], "estimate_coverage() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.estimate_coverage"]], "gc_normalize() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.gc_normalize"]], "genome_chr() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.genome_chr"]], "genome_index() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.genome_index"]], "genome_index_chrom() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.genome_index_chrom"]], "genome_indexes() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.genome_indexes"]], "index_genome() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.index_genome"]], "infer_active_blocks() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.infer_active_blocks"]], "infer_active_blocks_groupby() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.infer_active_blocks_groupby"]], "initialize_kmers() (in module bam_cov)": [[12, "bam_cov.initialize_kmers"]], "learn_gc() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.learn_gc"]], "learn_gc_base() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.learn_gc_base"]], "learn_shift_pair() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.learn_shift_pair"]], "learn_shift_single() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.learn_shift_single"]], "main() (in module bam_cov)": [[12, "bam_cov.main"]], "read_bam() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.read_bam"]], "read_multi_bwa() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.read_multi_bwa"]], "read_multi_nh() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.read_multi_nh"]], "regplot_gc() (in module bam_cov)": [[12, "bam_cov.regplot_gc"]], "regplot_shift() (in module bam_cov)": [[12, "bam_cov.regplot_shift"]], "row_nzcols_get() (in module bam_cov)": [[12, "bam_cov.row_nzcols_get"]], "row_nzcols_geti() (in module bam_cov)": [[12, "bam_cov.row_nzcols_geti"]], "row_nzcols_set() (in module bam_cov)": [[12, "bam_cov.row_nzcols_set"]], "scatter_lims() (in module bam_cov)": [[12, "bam_cov.scatter_lims"]], "set_clips() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.set_clips"]], "single_or_pair() (in module bam_cov)": [[12, "bam_cov.single_or_pair"]], "write() (bam_cov.genomecoverage method)": [[12, "bam_cov.GenomeCoverage.write"]], "basenji_annot_chr": [[13, "module-basenji_annot_chr"]], "h5_annot_chr() (in module basenji_annot_chr)": [[13, "basenji_annot_chr.h5_annot_chr"]], "main() (in module basenji_annot_chr)": [[13, "basenji_annot_chr.main"]], "read_enough_sad() (in module basenji_annot_chr)": [[13, "basenji_annot_chr.read_enough_sad"]], "sample_sad() (in module basenji_annot_chr)": [[13, "basenji_annot_chr.sample_sad"]], "basenji_average": [[14, "module-basenji_average"]], "main() (in module basenji_average)": [[14, "basenji_average.main"]], "basenji_bedg_tfr": [[15, "module-basenji_bedg_tfr"]], "main() (in module basenji_bedg_tfr)": [[15, "basenji_bedg_tfr.main"]], "basenji_bench_classify": [[16, "module-basenji_bench_classify"]], "fold_roc() (in module basenji_bench_classify)": [[16, "basenji_bench_classify.fold_roc"]], "main() (in module basenji_bench_classify)": [[16, "basenji_bench_classify.main"]], "plot_roc() (in module basenji_bench_classify)": [[16, "basenji_bench_classify.plot_roc"]], "randfor_full() (in module basenji_bench_classify)": [[16, "basenji_bench_classify.randfor_full"]], "randfor_roc() (in module basenji_bench_classify)": [[16, "basenji_bench_classify.randfor_roc"]], "read_indel() (in module basenji_bench_classify)": [[16, "basenji_bench_classify.read_indel"]], "read_sad() (in module basenji_bench_classify)": [[16, "basenji_bench_classify.read_sad"]], "ridge_roc() (in module basenji_bench_classify)": [[16, "basenji_bench_classify.ridge_roc"]], "basenji_bench_gtex": [[17, "module-basenji_bench_gtex"]], "main() (in module basenji_bench_gtex)": [[17, "basenji_bench_gtex.main"]], "basenji_bench_gtex_cmp": [[18, "module-basenji_bench_gtex_cmp"]], "main() (in module basenji_bench_gtex_cmp)": [[18, "basenji_bench_gtex_cmp.main"]], "read_auroc() (in module basenji_bench_gtex_cmp)": [[18, "basenji_bench_gtex_cmp.read_auroc"]], "ttest_alt() (in module basenji_bench_gtex_cmp)": [[18, "basenji_bench_gtex_cmp.ttest_alt"]], "basenji_bench_gtex_folds": [[19, "module-basenji_bench_gtex_folds"]], "complete_h5() (in module basenji_bench_gtex_folds)": [[19, "basenji_bench_gtex_folds.complete_h5"]], "ensemble_sad_h5() (in module basenji_bench_gtex_folds)": [[19, "basenji_bench_gtex_folds.ensemble_sad_h5"]], "main() (in module basenji_bench_gtex_folds)": [[19, "basenji_bench_gtex_folds.main"]], "options_string() (in module basenji_bench_gtex_folds)": [[19, "basenji_bench_gtex_folds.options_string"]], "split_sad() (in module basenji_bench_gtex_folds)": [[19, "basenji_bench_gtex_folds.split_sad"]], "basenji_bench_phylop": [[20, "module-basenji_bench_phylop"]], "main() (in module basenji_bench_phylop)": [[20, "basenji_bench_phylop.main"]], "randfor_cv() (in module basenji_bench_phylop)": [[20, "basenji_bench_phylop.randfor_cv"]], "basenji_bench_phylop_folds": [[21, "module-basenji_bench_phylop_folds"]], "ensemble_scores_h5() (in module basenji_bench_phylop_folds)": [[21, "basenji_bench_phylop_folds.ensemble_scores_h5"]], "main() (in module basenji_bench_phylop_folds)": [[21, "basenji_bench_phylop_folds.main"]], "options_string() (in module basenji_bench_phylop_folds)": [[21, "basenji_bench_phylop_folds.options_string"]], "read_metrics() (in module basenji_bench_phylop_folds)": [[21, "basenji_bench_phylop_folds.read_metrics"]], "basenji_bench_phylopvcf": [[22, "module-basenji_bench_phylopvcf"]], "main() (in module basenji_bench_phylopvcf)": [[22, "basenji_bench_phylopvcf.main"]], "randfor_cv() (in module basenji_bench_phylopvcf)": [[22, "basenji_bench_phylopvcf.randfor_cv"]], "basenji_bench_phylopvcf_folds": [[23, "module-basenji_bench_phylopvcf_folds"]], "ensemble_scores_h5() (in module basenji_bench_phylopvcf_folds)": [[23, "basenji_bench_phylopvcf_folds.ensemble_scores_h5"]], "main() (in module basenji_bench_phylopvcf_folds)": [[23, "basenji_bench_phylopvcf_folds.main"]], "options_string() (in module basenji_bench_phylopvcf_folds)": [[23, "basenji_bench_phylopvcf_folds.options_string"]], "read_metrics() (in module basenji_bench_phylopvcf_folds)": [[23, "basenji_bench_phylopvcf_folds.read_metrics"]], "basenji_bigwig_tfr": [[24, "module-basenji_bigwig_tfr"]], "main() (in module basenji_bigwig_tfr)": [[24, "basenji_bigwig_tfr.main"]], "basenji_cmp": [[25, "module-basenji_cmp"]], "epoch_stats() (in module basenji_cmp)": [[25, "basenji_cmp.epoch_stats"]], "main() (in module basenji_cmp)": [[25, "basenji_cmp.main"]], "plot_curve() (in module basenji_cmp)": [[25, "basenji_cmp.plot_curve"]], "read_training() (in module basenji_cmp)": [[25, "basenji_cmp.read_training"]], "contig (in module basenji_data)": [[26, "basenji_data.Contig"]], "modelseq (in module basenji_data)": [[26, "basenji_data.ModelSeq"]], "annotate_unmap() (in module basenji_data)": [[26, "basenji_data.annotate_unmap"]], "basenji_data": [[26, "module-basenji_data"]], "break_large_contigs() (in module basenji_data)": [[26, "basenji_data.break_large_contigs"]], "contig_sequences() (in module basenji_data)": [[26, "basenji_data.contig_sequences"]], "curate_peaks() (in module basenji_data)": [[26, "basenji_data.curate_peaks"]], "divide_contigs_chr() (in module basenji_data)": [[26, "basenji_data.divide_contigs_chr"]], "divide_contigs_folds() (in module basenji_data)": [[26, "basenji_data.divide_contigs_folds"]], "divide_contigs_pct() (in module basenji_data)": [[26, "basenji_data.divide_contigs_pct"]], "limit_contigs() (in module basenji_data)": [[26, "basenji_data.limit_contigs"]], "main() (in module basenji_data)": [[26, "basenji_data.main"]], "rejoin_large_contigs() (in module basenji_data)": [[26, "basenji_data.rejoin_large_contigs"]], "write_seqs_bed() (in module basenji_data)": [[26, "basenji_data.write_seqs_bed"]], "contig (in module basenji_data2)": [[27, "basenji_data2.Contig"]], "graphseq (in module basenji_data2)": [[27, "basenji_data2.GraphSeq"]], "modelseq (in module basenji_data2)": [[27, "basenji_data2.ModelSeq"]], "basenji_data2": [[27, "module-basenji_data2"]], "break_large_contigs() (in module basenji_data2)": [[27, "basenji_data2.break_large_contigs"]], "connect_contigs() (in module basenji_data2)": [[27, "basenji_data2.connect_contigs"]], "contig_sequences() (in module basenji_data2)": [[27, "basenji_data2.contig_sequences"]], "contig_stats_genome() (in module basenji_data2)": [[27, "basenji_data2.contig_stats_genome"]], "divide_contig_components() (in module basenji_data2)": [[27, "basenji_data2.divide_contig_components"]], "intersect_contigs_nets() (in module basenji_data2)": [[27, "basenji_data2.intersect_contigs_nets"]], "main() (in module basenji_data2)": [[27, "basenji_data2.main"]], "make_net_graph() (in module basenji_data2)": [[27, "basenji_data2.make_net_graph"]], "make_read_jobs() (in module basenji_data2)": [[27, "basenji_data2.make_read_jobs"]], "make_write_jobs() (in module basenji_data2)": [[27, "basenji_data2.make_write_jobs"]], "quantify_leakage() (in module basenji_data2)": [[27, "basenji_data2.quantify_leakage"]], "rejoin_large_contigs() (in module basenji_data2)": [[27, "basenji_data2.rejoin_large_contigs"]], "report_divide_stats() (in module basenji_data2)": [[27, "basenji_data2.report_divide_stats"]], "write_seqs_bed() (in module basenji_data2)": [[27, "basenji_data2.write_seqs_bed"]], "contig (in module basenji_data_align)": [[28, "basenji_data_align.Contig"]], "graphseq (in module basenji_data_align)": [[28, "basenji_data_align.GraphSeq"]], "modelseq (in module basenji_data_align)": [[28, "basenji_data_align.ModelSeq"]], "basenji_data_align": [[28, "module-basenji_data_align"]], "break_large_contigs() (in module basenji_data_align)": [[28, "basenji_data_align.break_large_contigs"]], "connect_contigs() (in module basenji_data_align)": [[28, "basenji_data_align.connect_contigs"]], "contig_sequences() (in module basenji_data_align)": [[28, "basenji_data_align.contig_sequences"]], "contig_stats_genome() (in module basenji_data_align)": [[28, "basenji_data_align.contig_stats_genome"]], "divide_components_folds() (in module basenji_data_align)": [[28, "basenji_data_align.divide_components_folds"]], "divide_components_pct() (in module basenji_data_align)": [[28, "basenji_data_align.divide_components_pct"]], "intersect_contigs_nets() (in module basenji_data_align)": [[28, "basenji_data_align.intersect_contigs_nets"]], "main() (in module basenji_data_align)": [[28, "basenji_data_align.main"]], "make_net_graph() (in module basenji_data_align)": [[28, "basenji_data_align.make_net_graph"]], "quantify_leakage() (in module basenji_data_align)": [[28, "basenji_data_align.quantify_leakage"]], "rejoin_large_contigs() (in module basenji_data_align)": [[28, "basenji_data_align.rejoin_large_contigs"]], "report_divide_stats() (in module basenji_data_align)": [[28, "basenji_data_align.report_divide_stats"]], "report_divide_stats_v1() (in module basenji_data_align)": [[28, "basenji_data_align.report_divide_stats_v1"]], "_bytes_feature() (in module basenji_data_gene)": [[29, "basenji_data_gene._bytes_feature"]], "basenji_data_gene": [[29, "module-basenji_data_gene"]], "cluster_genes() (in module basenji_data_gene)": [[29, "basenji_data_gene.cluster_genes"]], "divide_genes_chr() (in module basenji_data_gene)": [[29, "basenji_data_gene.divide_genes_chr"]], "divide_genes_folds() (in module basenji_data_gene)": [[29, "basenji_data_gene.divide_genes_folds"]], "divide_genes_folds_bed() (in module basenji_data_gene)": [[29, "basenji_data_gene.divide_genes_folds_bed"]], "divide_genes_pct() (in module basenji_data_gene)": [[29, "basenji_data_gene.divide_genes_pct"]], "genes_bed() (in module basenji_data_gene)": [[29, "basenji_data_gene.genes_bed"]], "gff_df() (in module basenji_data_gene)": [[29, "basenji_data_gene.gff_df"]], "main() (in module basenji_data_gene)": [[29, "basenji_data_gene.main"]], "rc() (in module basenji_data_gene)": [[29, "basenji_data_gene.rc"]], "sufficient_sequence() (in module basenji_data_gene)": [[29, "basenji_data_gene.sufficient_sequence"]], "basenji_data_hic_read": [[30, "module-basenji_data_hic_read"]], "main() (in module basenji_data_hic_read)": [[30, "basenji_data_hic_read.main"]], "read_blacklist() (in module basenji_data_hic_read)": [[30, "basenji_data_hic_read.read_blacklist"]], "smooth() (in module basenji_data_hic_read)": [[30, "basenji_data_hic_read.smooth"]], "_bytes_feature() (in module basenji_data_hic_write)": [[31, "basenji_data_hic_write._bytes_feature"]], "_int_feature() (in module basenji_data_hic_write)": [[31, "basenji_data_hic_write._int_feature"]], "basenji_data_hic_write": [[31, "module-basenji_data_hic_write"]], "main() (in module basenji_data_hic_write)": [[31, "basenji_data_hic_write.main"]], "covface (class in basenji_data_read)": [[32, "basenji_data_read.CovFace"]], "basenji_data_read": [[32, "module-basenji_data_read"]], "close() (basenji_data_read.covface method)": [[32, "basenji_data_read.CovFace.close"]], "interp_nan() (in module basenji_data_read)": [[32, "basenji_data_read.interp_nan"]], "main() (in module basenji_data_read)": [[32, "basenji_data_read.main"]], "preprocess_bed() (basenji_data_read.covface method)": [[32, "basenji_data_read.CovFace.preprocess_bed"]], "read() (basenji_data_read.covface method)": [[32, "basenji_data_read.CovFace.read"]], "read_blacklist() (in module basenji_data_read)": [[32, "basenji_data_read.read_blacklist"]], "basenji_data_write": [[33, "module-basenji_data_write"]], "feature_bytes() (in module basenji_data_write)": [[33, "basenji_data_write.feature_bytes"]], "feature_floats() (in module basenji_data_write)": [[33, "basenji_data_write.feature_floats"]], "fetch_dna() (in module basenji_data_write)": [[33, "basenji_data_write.fetch_dna"]], "main() (in module basenji_data_write)": [[33, "basenji_data_write.main"]], "rround() (in module basenji_data_write)": [[33, "basenji_data_write.rround"]], "tround() (in module basenji_data_write)": [[33, "basenji_data_write.tround"]], "__call__() (basenji_fetch_app.memoized method)": [[34, "basenji_fetch_app.memoized.__call__"]], "__get__() (basenji_fetch_app.memoized method)": [[34, "basenji_fetch_app.memoized.__get__"]], "__repr__() (basenji_fetch_app.memoized method)": [[34, "basenji_fetch_app.memoized.__repr__"]], "basenji_fetch_app": [[34, "module-basenji_fetch_app"]], "main() (in module basenji_fetch_app)": [[34, "basenji_fetch_app.main"]], "memoized (class in basenji_fetch_app)": [[34, "basenji_fetch_app.memoized"]], "__call__() (basenji_fetch_app1.memoized method)": [[35, "basenji_fetch_app1.memoized.__call__"]], "__get__() (basenji_fetch_app1.memoized method)": [[35, "basenji_fetch_app1.memoized.__get__"]], "__repr__() (basenji_fetch_app1.memoized method)": [[35, "basenji_fetch_app1.memoized.__repr__"]], "basenji_fetch_app1": [[35, "module-basenji_fetch_app1"]], "main() (in module basenji_fetch_app1)": [[35, "basenji_fetch_app1.main"]], "memoized (class in basenji_fetch_app1)": [[35, "basenji_fetch_app1.memoized"]], "__call__() (basenji_fetch_app2.memoized method)": [[36, "basenji_fetch_app2.memoized.__call__"]], "__get__() (basenji_fetch_app2.memoized method)": [[36, "basenji_fetch_app2.memoized.__get__"]], "__repr__() (basenji_fetch_app2.memoized method)": [[36, "basenji_fetch_app2.memoized.__repr__"]], "basenji_fetch_app2": [[36, "module-basenji_fetch_app2"]], "main() (in module basenji_fetch_app2)": [[36, "basenji_fetch_app2.main"]], "memoized (class in basenji_fetch_app2)": [[36, "basenji_fetch_app2.memoized"]], "basenji_fetch_norm": [[37, "module-basenji_fetch_norm"]], "main() (in module basenji_fetch_norm)": [[37, "basenji_fetch_norm.main"]], "basenji_fetch_vcf": [[38, "module-basenji_fetch_vcf"]], "main() (in module basenji_fetch_vcf)": [[38, "basenji_fetch_vcf.main"]], "basenji_final": [[39, "module-basenji_final"]], "main() (in module basenji_final)": [[39, "basenji_final.main"]], "basenji_gtex_folds": [[40, "module-basenji_gtex_folds"]], "main() (in module basenji_gtex_folds)": [[40, "basenji_gtex_folds.main"]], "read_stats() (in module basenji_gtex_folds)": [[40, "basenji_gtex_folds.read_stats"]], "stat_tests() (in module basenji_gtex_folds)": [[40, "basenji_gtex_folds.stat_tests"]], "annotate_na() (in module basenji_hdf5_cluster)": [[41, "basenji_hdf5_cluster.annotate_na"]], "basenji_hdf5_cluster": [[41, "module-basenji_hdf5_cluster"]], "batch_end() (in module basenji_hdf5_cluster)": [[41, "basenji_hdf5_cluster.batch_end"]], "filter_boring() (in module basenji_hdf5_cluster)": [[41, "basenji_hdf5_cluster.filter_boring"]], "fourier_transform() (in module basenji_hdf5_cluster)": [[41, "basenji_hdf5_cluster.fourier_transform"]], "limit_segments() (in module basenji_hdf5_cluster)": [[41, "basenji_hdf5_cluster.limit_segments"]], "main() (in module basenji_hdf5_cluster)": [[41, "basenji_hdf5_cluster.main"]], "segments_1hot() (in module basenji_hdf5_cluster)": [[41, "basenji_hdf5_cluster.segments_1hot"]], "basenji_hdf5_genes": [[42, "module-basenji_hdf5_genes"]], "bigwig_tss_targets() (in module basenji_hdf5_genes)": [[42, "basenji_hdf5_genes.bigwig_tss_targets"]], "check_wigs() (in module basenji_hdf5_genes)": [[42, "basenji_hdf5_genes.check_wigs"]], "cluster_tss() (in module basenji_hdf5_genes)": [[42, "basenji_hdf5_genes.cluster_tss"]], "main() (in module basenji_hdf5_genes)": [[42, "basenji_hdf5_genes.main"]], "wig5_tss_targets() (in module basenji_hdf5_genes)": [[42, "basenji_hdf5_genes.wig5_tss_targets"]], "annotate_na() (in module basenji_hdf5_single)": [[43, "basenji_hdf5_single.annotate_na"]], "basenji_hdf5_single": [[43, "module-basenji_hdf5_single"]], "batch_end() (in module basenji_hdf5_single)": [[43, "basenji_hdf5_single.batch_end"]], "bigwig_batch() (in module basenji_hdf5_single)": [[43, "basenji_hdf5_single.bigwig_batch"]], "filter_boring() (in module basenji_hdf5_single)": [[43, "basenji_hdf5_single.filter_boring"]], "fourier_transform() (in module basenji_hdf5_single)": [[43, "basenji_hdf5_single.fourier_transform"]], "latent_transform() (in module basenji_hdf5_single)": [[43, "basenji_hdf5_single.latent_transform"]], "limit_segments() (in module basenji_hdf5_single)": [[43, "basenji_hdf5_single.limit_segments"]], "main() (in module basenji_hdf5_single)": [[43, "basenji_hdf5_single.main"]], "segments_1hot() (in module basenji_hdf5_single)": [[43, "basenji_hdf5_single.segments_1hot"]], "w5_batch() (in module basenji_hdf5_single)": [[43, "basenji_hdf5_single.w5_batch"]], "basenji_hidden": [[44, "module-basenji_hidden"]], "main() (in module basenji_hidden)": [[44, "basenji_hidden.main"]], "regplot() (in module basenji_hidden)": [[44, "basenji_hidden.regplot"]], "basenji_map": [[45, "module-basenji_map"]], "main() (in module basenji_map)": [[45, "basenji_map.main"]], "score_write() (in module basenji_map)": [[45, "basenji_map.score_write"]], "basenji_map_genes": [[46, "module-basenji_map_genes"]], "main() (in module basenji_map_genes)": [[46, "basenji_map_genes.main"]], "basenji_map_seqs": [[47, "module-basenji_map_seqs"]], "main() (in module basenji_map_seqs)": [[47, "basenji_map_seqs.main"]], "basenji_motifs": [[48, "module-basenji_motifs"]], "filter_motif() (in module basenji_motifs)": [[48, "basenji_motifs.filter_motif"]], "filter_possum() (in module basenji_motifs)": [[48, "basenji_motifs.filter_possum"]], "get_motif_proteins() (in module basenji_motifs)": [[48, "basenji_motifs.get_motif_proteins"]], "info_content() (in module basenji_motifs)": [[48, "basenji_motifs.info_content"]], "main() (in module basenji_motifs)": [[48, "basenji_motifs.main"]], "make_filter_pwm() (in module basenji_motifs)": [[48, "basenji_motifs.make_filter_pwm"]], "meme_add() (in module basenji_motifs)": [[48, "basenji_motifs.meme_add"]], "meme_intro() (in module basenji_motifs)": [[48, "basenji_motifs.meme_intro"]], "name_filters() (in module basenji_motifs)": [[48, "basenji_motifs.name_filters"]], "plot_filter_heat() (in module basenji_motifs)": [[48, "basenji_motifs.plot_filter_heat"]], "plot_filter_logo() (in module basenji_motifs)": [[48, "basenji_motifs.plot_filter_logo"]], "plot_filter_seg_heat() (in module basenji_motifs)": [[48, "basenji_motifs.plot_filter_seg_heat"]], "plot_filter_seq_heat() (in module basenji_motifs)": [[48, "basenji_motifs.plot_filter_seq_heat"]], "plot_score_density() (in module basenji_motifs)": [[48, "basenji_motifs.plot_score_density"]], "plot_target_corr() (in module basenji_motifs)": [[48, "basenji_motifs.plot_target_corr"]], "weblogo_opts (in module basenji_motifs)": [[48, "basenji_motifs.weblogo_opts"]], "interval (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.Interval"]], "annotate_motifs() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.annotate_motifs"]], "basenji_motifs_denovo": [[49, "module-basenji_motifs_denovo"]], "cluster_leiden() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.cluster_leiden"]], "end_align_fasta() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.end_align_fasta"]], "extend_intervals() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.extend_intervals"]], "fasta_pwm() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.fasta_pwm"]], "filter_features() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.filter_features"]], "filter_seqlets() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.filter_seqlets"]], "info_content() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.info_content"]], "main() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.main"]], "make_feature_fasta() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.make_feature_fasta"]], "make_negative_fasta() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.make_negative_fasta"]], "meme_add() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.meme_add"]], "meme_intro() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.meme_intro"]], "nearest_neighbors() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.nearest_neighbors"]], "plot_kernel() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.plot_kernel"]], "plot_logo() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.plot_logo"]], "process_factor() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.process_factor"]], "process_feature() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.process_feature"]], "read_preds() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.read_preds"]], "run_dreme() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.run_dreme"]], "run_homer() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.run_homer"]], "write_factor() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.write_factor"]], "write_msa() (in module basenji_motifs_denovo)": [[49, "basenji_motifs_denovo.write_msa"]], "basenji_motifs_inject": [[50, "module-basenji_motifs_inject"]], "cisbp_name() (in module basenji_motifs_inject)": [[50, "basenji_motifs_inject.cisbp_name"]], "main() (in module basenji_motifs_inject)": [[50, "basenji_motifs_inject.main"]], "basenji_motifs_inject_folds": [[51, "module-basenji_motifs_inject_folds"]], "ensemble_scores_h5() (in module basenji_motifs_inject_folds)": [[51, "basenji_motifs_inject_folds.ensemble_scores_h5"]], "main() (in module basenji_motifs_inject_folds)": [[51, "basenji_motifs_inject_folds.main"]], "options_string() (in module basenji_motifs_inject_folds)": [[51, "basenji_motifs_inject_folds.options_string"]], "basenji_norm_h5": [[52, "module-basenji_norm_h5"]], "main() (in module basenji_norm_h5)": [[52, "basenji_norm_h5.main"]], "basenji_predict": [[53, "module-basenji_predict"]], "bigwig_open() (in module basenji_predict)": [[53, "basenji_predict.bigwig_open"]], "bigwig_write() (in module basenji_predict)": [[53, "basenji_predict.bigwig_write"]], "main() (in module basenji_predict)": [[53, "basenji_predict.main"]], "basenji_predict_bed": [[54, "module-basenji_predict_bed"]], "bigwig_open() (in module basenji_predict_bed)": [[54, "basenji_predict_bed.bigwig_open"]], "bigwig_write() (in module basenji_predict_bed)": [[54, "basenji_predict_bed.bigwig_write"]], "main() (in module basenji_predict_bed)": [[54, "basenji_predict_bed.main"]], "basenji_predict_bed_multi": [[55, "module-basenji_predict_bed_multi"]], "collect_h5() (in module basenji_predict_bed_multi)": [[55, "basenji_predict_bed_multi.collect_h5"]], "job_completed() (in module basenji_predict_bed_multi)": [[55, "basenji_predict_bed_multi.job_completed"]], "main() (in module basenji_predict_bed_multi)": [[55, "basenji_predict_bed_multi.main"]], "basenji_predict_tfr": [[56, "module-basenji_predict_tfr"]], "main() (in module basenji_predict_tfr)": [[56, "basenji_predict_tfr.main"]], "basenji_predict_var": [[57, "module-basenji_predict_var"]], "main() (in module basenji_predict_var)": [[57, "basenji_predict_var.main"]], "basenji_sad": [[58, "module-basenji_sad"]], "initialize_output_h5() (in module basenji_sad)": [[58, "basenji_sad.initialize_output_h5"]], "main() (in module basenji_sad)": [[58, "basenji_sad.main"]], "write_pct() (in module basenji_sad)": [[58, "basenji_sad.write_pct"]], "write_snp() (in module basenji_sad)": [[58, "basenji_sad.write_snp"]], "write_snp_len() (in module basenji_sad)": [[58, "basenji_sad.write_snp_len"]], "basenji_sad_multi": [[59, "module-basenji_sad_multi"]], "collect_h5() (in module basenji_sad_multi)": [[59, "basenji_sad_multi.collect_h5"]], "collect_table() (in module basenji_sad_multi)": [[59, "basenji_sad_multi.collect_table"]], "job_completed() (in module basenji_sad_multi)": [[59, "basenji_sad_multi.job_completed"]], "main() (in module basenji_sad_multi)": [[59, "basenji_sad_multi.main"]], "basenji_sad_norm": [[60, "module-basenji_sad_norm"]], "fit_cauchy() (in module basenji_sad_norm)": [[60, "basenji_sad_norm.fit_cauchy"]], "main() (in module basenji_sad_norm)": [[60, "basenji_sad_norm.main"]], "sample_sad() (in module basenji_sad_norm)": [[60, "basenji_sad_norm.sample_sad"]], "snpcluster (class in basenji_sad_ref)": [[61, "basenji_sad_ref.SNPCluster"]], "add_snp() (basenji_sad_ref.snpcluster method)": [[61, "basenji_sad_ref.SNPCluster.add_snp"]], "basenji_sad_ref": [[61, "module-basenji_sad_ref"]], "cluster_snps() (in module basenji_sad_ref)": [[61, "basenji_sad_ref.cluster_snps"]], "delimit() (basenji_sad_ref.snpcluster method)": [[61, "basenji_sad_ref.SNPCluster.delimit"]], "get_1hots() (basenji_sad_ref.snpcluster method)": [[61, "basenji_sad_ref.SNPCluster.get_1hots"]], "main() (in module basenji_sad_ref)": [[61, "basenji_sad_ref.main"]], "make_alt_1hot() (in module basenji_sad_ref)": [[61, "basenji_sad_ref.make_alt_1hot"]], "basenji_sad_ref_multi": [[62, "module-basenji_sad_ref_multi"]], "job_completed() (in module basenji_sad_ref_multi)": [[62, "basenji_sad_ref_multi.job_completed"]], "main() (in module basenji_sad_ref_multi)": [[62, "basenji_sad_ref_multi.main"]], "basenji_sad_table": [[63, "module-basenji_sad_table"]], "main() (in module basenji_sad_table)": [[63, "basenji_sad_table.main"]], "sad_h5_df() (in module basenji_sad_table)": [[63, "basenji_sad_table.sad_h5_df"]], "basenji_sadf": [[64, "module-basenji_sadf"]], "bigwig_write() (in module basenji_sadf)": [[64, "basenji_sadf.bigwig_write"]], "initialize_output_h5() (in module basenji_sadf)": [[64, "basenji_sadf.initialize_output_h5"]], "initialize_output_zarr() (in module basenji_sadf)": [[64, "basenji_sadf.initialize_output_zarr"]], "main() (in module basenji_sadf)": [[64, "basenji_sadf.main"]], "snps_next_batch() (in module basenji_sadf)": [[64, "basenji_sadf.snps_next_batch"]], "basenji_sadf_multi": [[65, "module-basenji_sadf_multi"]], "collect_table() (in module basenji_sadf_multi)": [[65, "basenji_sadf_multi.collect_table"]], "collect_zarr() (in module basenji_sadf_multi)": [[65, "basenji_sadf_multi.collect_zarr"]], "job_completed() (in module basenji_sadf_multi)": [[65, "basenji_sadf_multi.job_completed"]], "main() (in module basenji_sadf_multi)": [[65, "basenji_sadf_multi.main"]], "plotworker (class in basenji_sat_bed)": [[66, "basenji_sat_bed.PlotWorker"]], "scoreworker (class in basenji_sat_bed)": [[66, "basenji_sat_bed.ScoreWorker"]], "basenji_sat_bed": [[66, "module-basenji_sat_bed"]], "main() (in module basenji_sat_bed)": [[66, "basenji_sat_bed.main"]], "run() (basenji_sat_bed.plotworker method)": [[66, "basenji_sat_bed.PlotWorker.run"]], "run() (basenji_sat_bed.scoreworker method)": [[66, "basenji_sat_bed.ScoreWorker.run"]], "satmut_gen() (in module basenji_sat_bed)": [[66, "basenji_sat_bed.satmut_gen"]], "basenji_sat_bed_multi": [[67, "module-basenji_sat_bed_multi"]], "collect_h5() (in module basenji_sat_bed_multi)": [[67, "basenji_sat_bed_multi.collect_h5"]], "job_completed() (in module basenji_sat_bed_multi)": [[67, "basenji_sat_bed_multi.job_completed"]], "main() (in module basenji_sat_bed_multi)": [[67, "basenji_sat_bed_multi.main"]], "basenji_sat_folds": [[68, "module-basenji_sat_folds"]], "main() (in module basenji_sat_folds)": [[68, "basenji_sat_folds.main"]], "options_string() (in module basenji_sat_folds)": [[68, "basenji_sat_folds.options_string"]], "basenji_sat_h5": [[69, "module-basenji_sat_h5"]], "delta_matrix() (in module basenji_sat_h5)": [[69, "basenji_sat_h5.delta_matrix"]], "enrich_activity() (in module basenji_sat_h5)": [[69, "basenji_sat_h5.enrich_activity"]], "expand_4l() (in module basenji_sat_h5)": [[69, "basenji_sat_h5.expand_4l"]], "loss_gain() (in module basenji_sat_h5)": [[69, "basenji_sat_h5.loss_gain"]], "main() (in module basenji_sat_h5)": [[69, "basenji_sat_h5.main"]], "parse_input() (in module basenji_sat_h5)": [[69, "basenji_sat_h5.parse_input"]], "plot_heat() (in module basenji_sat_h5)": [[69, "basenji_sat_h5.plot_heat"]], "plot_predictions() (in module basenji_sat_h5)": [[69, "basenji_sat_h5.plot_predictions"]], "plot_sad() (in module basenji_sat_h5)": [[69, "basenji_sat_h5.plot_sad"]], "plot_seqlogo() (in module basenji_sat_h5)": [[69, "basenji_sat_h5.plot_seqlogo"]], "satmut_seqs() (in module basenji_sat_h5)": [[69, "basenji_sat_h5.satmut_seqs"]], "subplot_params() (in module basenji_sat_h5)": [[69, "basenji_sat_h5.subplot_params"]], "basenji_sat_plot": [[70, "module-basenji_sat_plot"]], "enrich_activity() (in module basenji_sat_plot)": [[70, "basenji_sat_plot.enrich_activity"]], "expand_4l() (in module basenji_sat_plot)": [[70, "basenji_sat_plot.expand_4l"]], "main() (in module basenji_sat_plot)": [[70, "basenji_sat_plot.main"]], "plot_heat() (in module basenji_sat_plot)": [[70, "basenji_sat_plot.plot_heat"]], "plot_predictions() (in module basenji_sat_plot)": [[70, "basenji_sat_plot.plot_predictions"]], "plot_sad() (in module basenji_sat_plot)": [[70, "basenji_sat_plot.plot_sad"]], "plot_seqlogo() (in module basenji_sat_plot)": [[70, "basenji_sat_plot.plot_seqlogo"]], "subplot_params() (in module basenji_sat_plot)": [[70, "basenji_sat_plot.subplot_params"]], "basenji_sat_plot2": [[71, "module-basenji_sat_plot2"]], "expand_4l() (in module basenji_sat_plot2)": [[71, "basenji_sat_plot2.expand_4l"]], "expand_scores_align() (in module basenji_sat_plot2)": [[71, "basenji_sat_plot2.expand_scores_align"]], "global_align() (in module basenji_sat_plot2)": [[71, "basenji_sat_plot2.global_align"]], "main() (in module basenji_sat_plot2)": [[71, "basenji_sat_plot2.main"]], "plot_seqlogo() (in module basenji_sat_plot2)": [[71, "basenji_sat_plot2.plot_seqlogo"]], "setup_plot() (in module basenji_sat_plot2)": [[71, "basenji_sat_plot2.setup_plot"]], "subplot_params() (in module basenji_sat_plot2)": [[71, "basenji_sat_plot2.subplot_params"]], "basenji_sat_vcf": [[72, "module-basenji_sat_vcf"]], "main() (in module basenji_sat_vcf)": [[72, "basenji_sat_vcf.main"]], "alleles_1hot() (in module basenji_sed)": [[73, "basenji_sed.alleles_1hot"]], "basenji_sed": [[73, "module-basenji_sed"]], "main() (in module basenji_sed)": [[73, "basenji_sed.main"]], "multiline (class in basenji_sed_multi)": [[74, "basenji_sed_multi.MultiLine"]], "__slots__ (basenji_sed_multi.multiline attribute)": [[74, "basenji_sed_multi.MultiLine.__slots__"]], "add() (basenji_sed_multi.multiline method)": [[74, "basenji_sed_multi.MultiLine.add"]], "basenji_sed_multi": [[74, "module-basenji_sed_multi"]], "collect_table() (in module basenji_sed_multi)": [[74, "basenji_sed_multi.collect_table"]], "collect_table_multi() (in module basenji_sed_multi)": [[74, "basenji_sed_multi.collect_table_multi"]], "main() (in module basenji_sed_multi)": [[74, "basenji_sed_multi.main"]], "print_lines() (basenji_sed_multi.multiline method)": [[74, "basenji_sed_multi.MultiLine.print_lines"]], "basenji_sedg": [[75, "module-basenji_sedg"]], "main() (in module basenji_sedg)": [[75, "basenji_sedg.main"]], "nt_index() (in module basenji_sedg)": [[75, "basenji_sedg.nt_index"]], "basenji_test": [[76, "module-basenji_test"]], "ben_hoch() (in module basenji_test)": [[76, "basenji_test.ben_hoch"]], "main() (in module basenji_test)": [[76, "basenji_test.main"]], "test_peaks() (in module basenji_test)": [[76, "basenji_test.test_peaks"]], "basenji_test_folds": [[77, "module-basenji_test_folds"]], "jointplot() (in module basenji_test_folds)": [[77, "basenji_test_folds.jointplot"]], "main() (in module basenji_test_folds)": [[77, "basenji_test_folds.main"]], "read_metrics() (in module basenji_test_folds)": [[77, "basenji_test_folds.read_metrics"]], "stat_tests() (in module basenji_test_folds)": [[77, "basenji_test_folds.stat_tests"]], "alternative_tss() (in module basenji_test_genes)": [[78, "basenji_test_genes.alternative_tss"]], "basenji_test_genes": [[78, "module-basenji_test_genes"]], "clustermap() (in module basenji_test_genes)": [[78, "basenji_test_genes.clustermap"]], "cor_table() (in module basenji_test_genes)": [[78, "basenji_test_genes.cor_table"]], "gene_table() (in module basenji_test_genes)": [[78, "basenji_test_genes.gene_table"]], "main() (in module basenji_test_genes)": [[78, "basenji_test_genes.main"]], "normalize_targets() (in module basenji_test_genes)": [[78, "basenji_test_genes.normalize_targets"]], "quantile_accuracy() (in module basenji_test_genes)": [[78, "basenji_test_genes.quantile_accuracy"]], "quantile_indexes() (in module basenji_test_genes)": [[78, "basenji_test_genes.quantile_indexes"]], "quantile_normalize() (in module basenji_test_genes)": [[78, "basenji_test_genes.quantile_normalize"]], "replicate_correlations() (in module basenji_test_genes)": [[78, "basenji_test_genes.replicate_correlations"]], "variance_accuracy() (in module basenji_test_genes)": [[78, "basenji_test_genes.variance_accuracy"]], "basenji_test_h5": [[79, "module-basenji_test_h5"]], "ben_hoch() (in module basenji_test_h5)": [[79, "basenji_test_h5.ben_hoch"]], "bigwig_open() (in module basenji_test_h5)": [[79, "basenji_test_h5.bigwig_open"]], "bigwig_write() (in module basenji_test_h5)": [[79, "basenji_test_h5.bigwig_write"]], "main() (in module basenji_test_h5)": [[79, "basenji_test_h5.main"]], "basenji_test_orig": [[80, "module-basenji_test_orig"]], "ben_hoch() (in module basenji_test_orig)": [[80, "basenji_test_orig.ben_hoch"]], "bigwig_open() (in module basenji_test_orig)": [[80, "basenji_test_orig.bigwig_open"]], "bigwig_write() (in module basenji_test_orig)": [[80, "basenji_test_orig.bigwig_write"]], "compute_full_accuracy() (in module basenji_test_orig)": [[80, "basenji_test_orig.compute_full_accuracy"]], "main() (in module basenji_test_orig)": [[80, "basenji_test_orig.main"]], "basenji_test_reps": [[81, "module-basenji_test_reps"]], "main() (in module basenji_test_reps)": [[81, "basenji_test_reps.main"]], "read_cors() (in module basenji_test_reps)": [[81, "basenji_test_reps.read_cors"]], "stat_tests() (in module basenji_test_reps)": [[81, "basenji_test_reps.stat_tests"]], "basenji_test_specificity": [[82, "module-basenji_test_specificity"]], "main() (in module basenji_test_specificity)": [[82, "basenji_test_specificity.main"]], "basenji_train": [[83, "module-basenji_train"]], "main() (in module basenji_train)": [[83, "basenji_train.main"]], "accuracyworker (class in basenji_train1)": [[84, "basenji_train1.AccuracyWorker"]], "flags (in module basenji_train1)": [[84, "basenji_train1.FLAGS"]], "accuracy_update() (in module basenji_train1)": [[84, "basenji_train1.accuracy_update"]], "basenji_train1": [[84, "module-basenji_train1"]], "main() (in module basenji_train1)": [[84, "basenji_train1.main"]], "make_data_ops() (in module basenji_train1)": [[84, "basenji_train1.make_data_ops"]], "run() (basenji_train1.accuracyworker method)": [[84, "basenji_train1.AccuracyWorker.run"]], "run() (in module basenji_train1)": [[84, "basenji_train1.run"]], "basenji_train2": [[85, "module-basenji_train2"]], "main() (in module basenji_train2)": [[85, "basenji_train2.main"]], "flags (in module basenji_train_app)": [[86, "basenji_train_app.FLAGS"]], "basenji_train_app": [[86, "module-basenji_train_app"]], "main() (in module basenji_train_app)": [[86, "basenji_train_app.main"]], "basenji_train_avg": [[87, "module-basenji_train_avg"]], "main() (in module basenji_train_avg)": [[87, "basenji_train_avg.main"]], "basenji_train_folds": [[88, "module-basenji_train_folds"]], "main() (in module basenji_train_folds)": [[88, "basenji_train_folds.main"]], "make_rep_data() (in module basenji_train_folds)": [[88, "basenji_train_folds.make_rep_data"]], "options_string() (in module basenji_train_folds)": [[88, "basenji_train_folds.options_string"]], "basenji_train_folds_gcp": [[89, "module-basenji_train_folds_gcp"]], "main() (in module basenji_train_folds_gcp)": [[89, "basenji_train_folds_gcp.main"]], "make_rep_data() (in module basenji_train_folds_gcp)": [[89, "basenji_train_folds_gcp.make_rep_data"]], "options_string() (in module basenji_train_folds_gcp)": [[89, "basenji_train_folds_gcp.options_string"]], "options_train_string() (in module basenji_train_folds_gcp)": [[89, "basenji_train_folds_gcp.options_train_string"]], "flags (in module basenji_train_h5)": [[90, "basenji_train_h5.FLAGS"]], "basenji_train_h5": [[90, "module-basenji_train_h5"]], "main() (in module basenji_train_h5)": [[90, "basenji_train_h5.main"]], "run() (in module basenji_train_h5)": [[90, "basenji_train_h5.run"]], "flags (in module basenji_train_h5man)": [[91, "basenji_train_h5man.FLAGS"]], "basenji_train_h5man": [[91, "module-basenji_train_h5man"]], "main() (in module basenji_train_h5man)": [[91, "basenji_train_h5man.main"]], "run() (in module basenji_train_h5man)": [[91, "basenji_train_h5man.run"]], "basenji_train_head": [[92, "module-basenji_train_head"]], "main() (in module basenji_train_head)": [[92, "basenji_train_head.main"]], "save_gene_expr() (in module basenji_train_head)": [[92, "basenji_train_head.save_gene_expr"]], "basenji_train_head_folds": [[93, "module-basenji_train_head_folds"]], "main() (in module basenji_train_head_folds)": [[93, "basenji_train_head_folds.main"]], "make_rep_data() (in module basenji_train_head_folds)": [[93, "basenji_train_head_folds.make_rep_data"]], "options_string() (in module basenji_train_head_folds)": [[93, "basenji_train_head_folds.options_string"]], "flags (in module basenji_train_hic)": [[94, "basenji_train_hic.FLAGS"]], "basenji_train_hic": [[94, "module-basenji_train_hic"]], "main() (in module basenji_train_hic)": [[94, "basenji_train_hic.main"]], "basenji_train_reps": [[95, "module-basenji_train_reps"]], "main() (in module basenji_train_reps)": [[95, "basenji_train_reps.main"]], "options_string() (in module basenji_train_reps)": [[95, "basenji_train_reps.options_string"]], "basenji_variables": [[96, "module-basenji_variables"]], "main() (in module basenji_variables)": [[96, "basenji_variables.main"]], "bed": [[97, "module-bed"]], "make_bed_seqs() (in module bed)": [[97, "bed.make_bed_seqs"]], "read_bed_coords() (in module bed)": [[97, "bed.read_bed_coords"]], "write_bedgraph() (in module bed)": [[97, "bed.write_bedgraph"]], "write_bedgraph_v1() (in module bed)": [[97, "bed.write_bedgraph_v1"]], "bigwig_hdf5": [[98, "module-bigwig_hdf5"]], "main() (in module bigwig_hdf5)": [[98, "bigwig_hdf5.main"]], "average_pooling() (in module blocks)": [[99, "blocks.average_pooling"]], "average_to_2d() (in module blocks)": [[99, "blocks.average_to_2d"]], "blocks": [[99, "module-blocks"]], "center_average() (in module blocks)": [[99, "blocks.center_average"]], "center_slice() (in module blocks)": [[99, "blocks.center_slice"]], "concat_dist_2d() (in module blocks)": [[99, "blocks.concat_dist_2d"]], "concat_position() (in module blocks)": [[99, "blocks.concat_position"]], "concat_to_2d() (in module blocks)": [[99, "blocks.concat_to_2d"]], "concat_unet() (in module blocks)": [[99, "blocks.concat_unet"]], "conv_block() (in module blocks)": [[99, "blocks.conv_block"]], "conv_block_2d() (in module blocks)": [[99, "blocks.conv_block_2d"]], "conv_dna() (in module blocks)": [[99, "blocks.conv_dna"]], "conv_nac() (in module blocks)": [[99, "blocks.conv_nac"]], "conv_next() (in module blocks)": [[99, "blocks.conv_next"]], "conv_tower() (in module blocks)": [[99, "blocks.conv_tower"]], "conv_tower_nac() (in module blocks)": [[99, "blocks.conv_tower_nac"]], "conv_tower_v1() (in module blocks)": [[99, "blocks.conv_tower_v1"]], "convnext_tower() (in module blocks)": [[99, "blocks.convnext_tower"]], "cropping_2d() (in module blocks)": [[99, "blocks.cropping_2d"]], "dense() (in module blocks)": [[99, "blocks.dense"]], "dense_block() (in module blocks)": [[99, "blocks.dense_block"]], "dense_nac() (in module blocks)": [[99, "blocks.dense_nac"]], "dilated_dense() (in module blocks)": [[99, "blocks.dilated_dense"]], "dilated_residual() (in module blocks)": [[99, "blocks.dilated_residual"]], "dilated_residual_2d() (in module blocks)": [[99, "blocks.dilated_residual_2d"]], "dilated_residual_nac() (in module blocks)": [[99, "blocks.dilated_residual_nac"]], "dot_to_2d() (in module blocks)": [[99, "blocks.dot_to_2d"]], "exp() (in module blocks)": [[99, "blocks.exp"]], "factor_inverse() (in module blocks)": [[99, "blocks.factor_inverse"]], "final() (in module blocks)": [[99, "blocks.final"]], "fpn1_unet() (in module blocks)": [[99, "blocks.fpn1_unet"]], "fpn_unet() (in module blocks)": [[99, "blocks.fpn_unet"]], "geodot_to_2d() (in module blocks)": [[99, "blocks.geodot_to_2d"]], "global_context() (in module blocks)": [[99, "blocks.global_context"]], "keras_func (in module blocks)": [[99, "blocks.keras_func"]], "max_to_2d() (in module blocks)": [[99, "blocks.max_to_2d"]], "name_func (in module blocks)": [[99, "blocks.name_func"]], "one_to_two() (in module blocks)": [[99, "blocks.one_to_two"]], "res_tower() (in module blocks)": [[99, "blocks.res_tower"]], "squeeze_excite() (in module blocks)": [[99, "blocks.squeeze_excite"]], "swin_transformer() (in module blocks)": [[99, "blocks.swin_transformer"]], "symmetrize_2d() (in module blocks)": [[99, "blocks.symmetrize_2d"]], "tconv_nac() (in module blocks)": [[99, "blocks.tconv_nac"]], "transformer() (in module blocks)": [[99, "blocks.transformer"]], "transformer2() (in module blocks)": [[99, "blocks.transformer2"]], "transformer_dense() (in module blocks)": [[99, "blocks.transformer_dense"]], "transformer_split() (in module blocks)": [[99, "blocks.transformer_split"]], "transformer_tower() (in module blocks)": [[99, "blocks.transformer_tower"]], "upper_tri() (in module blocks)": [[99, "blocks.upper_tri"]], "upsample_unet() (in module blocks)": [[99, "blocks.upsample_unet"]], "wheeze_excite() (in module blocks)": [[99, "blocks.wheeze_excite"]], "accuracy_stats() (in module borzoi_bench_crispr)": [[100, "borzoi_bench_crispr.accuracy_stats"]], "borzoi_bench_crispr": [[100, "module-borzoi_bench_crispr"]], "complete_h5() (in module borzoi_bench_crispr)": [[100, "borzoi_bench_crispr.complete_h5"]], "main() (in module borzoi_bench_crispr)": [[100, "borzoi_bench_crispr.main"]], "options_string() (in module borzoi_bench_crispr)": [[100, "borzoi_bench_crispr.options_string"]], "score_sites() (in module borzoi_bench_crispr)": [[100, "borzoi_bench_crispr.score_sites"]], "trim_dot() (in module borzoi_bench_crispr)": [[100, "borzoi_bench_crispr.trim_dot"]], "borzoi_bench_crispr_folds": [[101, "module-borzoi_bench_crispr_folds"]], "ensemble_scores_h5() (in module borzoi_bench_crispr_folds)": [[101, "borzoi_bench_crispr_folds.ensemble_scores_h5"]], "main() (in module borzoi_bench_crispr_folds)": [[101, "borzoi_bench_crispr_folds.main"]], "options_string() (in module borzoi_bench_crispr_folds)": [[101, "borzoi_bench_crispr_folds.options_string"]], "borzoi_bench_flowfish_folds": [[102, "module-borzoi_bench_flowfish_folds"]], "ensemble_scores_h5() (in module borzoi_bench_flowfish_folds)": [[102, "borzoi_bench_flowfish_folds.ensemble_scores_h5"]], "main() (in module borzoi_bench_flowfish_folds)": [[102, "borzoi_bench_flowfish_folds.main"]], "options_string() (in module borzoi_bench_flowfish_folds)": [[102, "borzoi_bench_flowfish_folds.options_string"]], "borzoi_bench_gasperini_folds": [[103, "module-borzoi_bench_gasperini_folds"]], "ensemble_scores_h5() (in module borzoi_bench_gasperini_folds)": [[103, "borzoi_bench_gasperini_folds.ensemble_scores_h5"]], "main() (in module borzoi_bench_gasperini_folds)": [[103, "borzoi_bench_gasperini_folds.main"]], "options_string() (in module borzoi_bench_gasperini_folds)": [[103, "borzoi_bench_gasperini_folds.options_string"]], "trim_dot() (in module borzoi_bench_gasperini_folds)": [[103, "borzoi_bench_gasperini_folds.trim_dot"]], "borzoi_bench_sqtl_folds": [[104, "module-borzoi_bench_sqtl_folds"]], "complete_h5() (in module borzoi_bench_sqtl_folds)": [[104, "borzoi_bench_sqtl_folds.complete_h5"]], "ensemble_sed_h5() (in module borzoi_bench_sqtl_folds)": [[104, "borzoi_bench_sqtl_folds.ensemble_sed_h5"]], "main() (in module borzoi_bench_sqtl_folds)": [[104, "borzoi_bench_sqtl_folds.main"]], "options_string() (in module borzoi_bench_sqtl_folds)": [[104, "borzoi_bench_sqtl_folds.options_string"]], "split_sed() (in module borzoi_bench_sqtl_folds)": [[104, "borzoi_bench_sqtl_folds.split_sed"]], "borzoi_satg_gene": [[105, "module-borzoi_satg_gene"]], "main() (in module borzoi_satg_gene)": [[105, "borzoi_satg_gene.main"]], "make_seq_1hot() (in module borzoi_satg_gene)": [[105, "borzoi_satg_gene.make_seq_1hot"]], "unaugment_grads() (in module borzoi_satg_gene)": [[105, "borzoi_satg_gene.unaugment_grads"]], "borzoi_satg_gene_multi": [[106, "module-borzoi_satg_gene_multi"]], "collect_h5() (in module borzoi_satg_gene_multi)": [[106, "borzoi_satg_gene_multi.collect_h5"]], "job_completed() (in module borzoi_satg_gene_multi)": [[106, "borzoi_satg_gene_multi.job_completed"]], "main() (in module borzoi_satg_gene_multi)": [[106, "borzoi_satg_gene_multi.main"]], "borzoi_sed": [[107, "module-borzoi_sed"]], "initialize_output_h5() (in module borzoi_sed)": [[107, "borzoi_sed.initialize_output_h5"]], "main() (in module borzoi_sed)": [[107, "borzoi_sed.main"]], "make_snpseq_bedt() (in module borzoi_sed)": [[107, "borzoi_sed.make_snpseq_bedt"]], "map_snpseq_genes() (in module borzoi_sed)": [[107, "borzoi_sed.map_snpseq_genes"]], "targets_prep_strand() (in module borzoi_sed)": [[107, "borzoi_sed.targets_prep_strand"]], "write_bedgraph_snp() (in module borzoi_sed)": [[107, "borzoi_sed.write_bedgraph_snp"]], "write_pct() (in module borzoi_sed)": [[107, "borzoi_sed.write_pct"]], "write_snp() (in module borzoi_sed)": [[107, "borzoi_sed.write_snp"]], "borzoi_test_exons": [[108, "module-borzoi_test_exons"]], "main() (in module borzoi_test_exons)": [[108, "borzoi_test_exons.main"]], "borzoi_test_exons_folds": [[109, "module-borzoi_test_exons_folds"]], "jointplot() (in module borzoi_test_exons_folds)": [[109, "borzoi_test_exons_folds.jointplot"]], "main() (in module borzoi_test_exons_folds)": [[109, "borzoi_test_exons_folds.main"]], "read_metrics() (in module borzoi_test_exons_folds)": [[109, "borzoi_test_exons_folds.read_metrics"]], "stat_tests() (in module borzoi_test_exons_folds)": [[109, "borzoi_test_exons_folds.stat_tests"]], "borzoi_test_genes": [[110, "module-borzoi_test_genes"]], "genes_aggregate() (in module borzoi_test_genes)": [[110, "borzoi_test_genes.genes_aggregate"]], "main() (in module borzoi_test_genes)": [[110, "borzoi_test_genes.main"]], "make_genes_exon() (in module borzoi_test_genes)": [[110, "borzoi_test_genes.make_genes_exon"]], "make_genes_span() (in module borzoi_test_genes)": [[110, "borzoi_test_genes.make_genes_span"]], "borzoi_test_genes_folds": [[111, "module-borzoi_test_genes_folds"]], "main() (in module borzoi_test_genes_folds)": [[111, "borzoi_test_genes_folds.main"]], "read_metrics() (in module borzoi_test_genes_folds)": [[111, "borzoi_test_genes_folds.read_metrics"]], "rnadataset (class in dataset)": [[112, "dataset.RnaDataset"], [112, "id0"]], "rnadatasetv1 (class in dataset)": [[112, "dataset.RnaDatasetV1"]], "rnadatasetvikram (class in dataset)": [[112, "dataset.RnaDatasetVikram"]], "seqdataset (class in dataset)": [[112, "dataset.SeqDataset"]], "tfr_input (in module dataset)": [[112, "dataset.TFR_INPUT"]], "tfr_output (in module dataset)": [[112, "dataset.TFR_OUTPUT"]], "batches_per_epoch() (dataset.rnadataset method)": [[112, "dataset.RnaDataset.batches_per_epoch"], [112, "id1"]], "batches_per_epoch() (dataset.rnadatasetv1 method)": [[112, "dataset.RnaDatasetV1.batches_per_epoch"]], "batches_per_epoch() (dataset.rnadatasetvikram method)": [[112, "dataset.RnaDatasetVikram.batches_per_epoch"]], "batches_per_epoch() (dataset.seqdataset method)": [[112, "dataset.SeqDataset.batches_per_epoch"]], "compute_stats() (dataset.seqdataset method)": [[112, "dataset.SeqDataset.compute_stats"]], "dataset": [[112, "module-dataset"]], "distribute() (dataset.seqdataset method)": [[112, "dataset.SeqDataset.distribute"]], "file_to_records() (in module dataset)": [[112, "dataset.file_to_records"]], "generate_parser() (dataset.seqdataset method)": [[112, "dataset.SeqDataset.generate_parser"]], "make_dataset() (dataset.rnadataset method)": [[112, "dataset.RnaDataset.make_dataset"], [112, "id3"]], "make_dataset() (dataset.rnadatasetv1 method)": [[112, "dataset.RnaDatasetV1.make_dataset"]], "make_dataset() (dataset.rnadatasetvikram method)": [[112, "dataset.RnaDatasetVikram.make_dataset"]], "make_dataset() (dataset.seqdataset method)": [[112, "dataset.SeqDataset.make_dataset"]], "make_parser() (dataset.rnadataset method)": [[112, "dataset.RnaDataset.make_parser"], [112, "id2"]], "make_parser() (dataset.rnadatasetv1 method)": [[112, "dataset.RnaDatasetV1.make_parser"]], "make_parser() (dataset.rnadatasetvikram method)": [[112, "dataset.RnaDatasetVikram.make_parser"]], "numpy() (dataset.rnadataset method)": [[112, "dataset.RnaDataset.numpy"], [112, "id4"]], "numpy() (dataset.seqdataset method)": [[112, "dataset.SeqDataset.numpy"]], "dna_1hot() (in module dna_io)": [[113, "dna_io.dna_1hot"]], "dna_1hot_index() (in module dna_io)": [[113, "dna_io.dna_1hot_index"]], "dna_io": [[113, "module-dna_io"]], "dna_rc() (in module dna_io)": [[113, "dna_io.dna_rc"]], "hot1_augment() (in module dna_io)": [[113, "dna_io.hot1_augment"]], "hot1_delete() (in module dna_io)": [[113, "dna_io.hot1_delete"]], "hot1_dna() (in module dna_io)": [[113, "dna_io.hot1_dna"]], "hot1_get() (in module dna_io)": [[113, "dna_io.hot1_get"]], "hot1_insert() (in module dna_io)": [[113, "dna_io.hot1_insert"]], "hot1_rc() (in module dna_io)": [[113, "dna_io.hot1_rc"]], "hot1_set() (in module dna_io)": [[113, "dna_io.hot1_set"]], "emeraldvcf (class in emerald)": [[114, "emerald.EmeraldVCF"]], "emerald": [[114, "module-emerald"]], "fetch() (emerald.emeraldvcf method)": [[114, "emerald.EmeraldVCF.fetch"]], "query_ld() (emerald.emeraldvcf method)": [[114, "emerald.EmeraldVCF.query_ld"]], "gene (class in gene)": [[115, "gene.Gene"]], "geneseq (class in gene)": [[115, "gene.GeneSeq"]], "tss (class in gene)": [[115, "gene.TSS"]], "__str__() (gene.geneseq method)": [[115, "gene.GeneSeq.__str__"]], "__str__() (gene.tss method)": [[115, "gene.TSS.__str__"]], "append_tss() (gene.geneseq method)": [[115, "gene.GeneSeq.append_tss"]], "gene": [[115, "module-gene"]], "gene_names() (gene.geneseq method)": [[115, "gene.GeneSeq.gene_names"]], "map_tss_genes() (in module gene)": [[115, "gene.map_tss_genes"]], "seq_bin() (gene.tss method)": [[115, "gene.TSS.seq_bin"]], "genedata (class in genedata)": [[116, "genedata.GeneData"]], "__exit__() (genedata.genedata method)": [[116, "genedata.GeneData.__exit__"]], "gene_ids() (genedata.genedata method)": [[116, "genedata.GeneData.gene_ids"]], "genedata": [[116, "module-genedata"]], "subset_genes() (genedata.genedata method)": [[116, "genedata.GeneData.subset_genes"]], "tss_ids() (genedata.genedata method)": [[116, "genedata.GeneData.tss_ids"]], "worker() (genedata.genedata method)": [[116, "genedata.GeneData.worker"]], "genome": [[117, "module-genome"]], "load_chromosomes() (in module genome)": [[117, "genome.load_chromosomes"]], "split_contigs() (in module genome)": [[117, "genome.split_contigs"]], "exon (class in gff)": [[118, "gff.Exon"]], "gene (class in gff)": [[118, "gff.Gene"]], "__cmp__() (gff.exon method)": [[118, "gff.Exon.__cmp__"]], "__eq__() (gff.exon method)": [[118, "gff.Exon.__eq__"]], "__lt__() (gff.exon method)": [[118, "gff.Exon.__lt__"]], "__str__() (gff.exon method)": [[118, "gff.Exon.__str__"]], "__str__() (gff.gene method)": [[118, "gff.Gene.__str__"]], "add_cds() (gff.gene method)": [[118, "gff.Gene.add_cds"]], "add_exon() (gff.gene method)": [[118, "gff.Gene.add_exon"]], "gff": [[118, "module-gff"]], "gtf_kv() (in module gff)": [[118, "gff.gtf_kv"]], "read_genes() (in module gff)": [[118, "gff.read_genes"]], "t2g() (in module gff)": [[118, "gff.t2g"]], "tss() (gff.gene method)": [[118, "gff.Gene.tss"]], "_bytes_feature() (in module h5_tfr)": [[119, "h5_tfr._bytes_feature"]], "_float_feature() (in module h5_tfr)": [[119, "h5_tfr._float_feature"]], "h5_tfr": [[119, "module-h5_tfr"]], "main() (in module h5_tfr)": [[119, "h5_tfr.main"]], "writer_worker() (in module h5_tfr)": [[119, "h5_tfr.writer_worker"]], "hdf5_bed": [[120, "module-hdf5_bed"]], "main() (in module hdf5_bed)": [[120, "hdf5_bed.main"]], "averageto2d (class in layers)": [[122, "layers.AverageTo2D"]], "centeraverage (class in layers)": [[122, "layers.CenterAverage"]], "centerslice (class in layers)": [[122, "layers.CenterSlice"]], "clip (class in layers)": [[122, "layers.Clip"]], "concatdist2d (class in layers)": [[122, "layers.ConcatDist2D"]], "concatposition (class in layers)": [[122, "layers.ConcatPosition"]], "concatto2d (class in layers)": [[122, "layers.ConcatTo2D"]], "dotto2d (class in layers)": [[122, "layers.DotTo2D"]], "ensemblereversecomplement (class in layers)": [[122, "layers.EnsembleReverseComplement"]], "ensembleshift (class in layers)": [[122, "layers.EnsembleShift"]], "exp (class in layers)": [[122, "layers.Exp"]], "factorinverse (class in layers)": [[122, "layers.FactorInverse"]], "geodotto2d (class in layers)": [[122, "layers.GeoDotTo2D"]], "globalcontext (class in layers)": [[122, "layers.GlobalContext"]], "lengthaverage (class in layers)": [[122, "layers.LengthAverage"]], "maxto2d (class in layers)": [[122, "layers.MaxTo2D"]], "multiheadattention (class in layers)": [[122, "layers.MultiheadAttention"]], "onetotwo (class in layers)": [[122, "layers.OneToTwo"]], "polyrelu (class in layers)": [[122, "layers.PolyReLU"]], "scale (class in layers)": [[122, "layers.Scale"]], "softmaxpool1d (class in layers)": [[122, "layers.SoftmaxPool1D"]], "softplus (class in layers)": [[122, "layers.Softplus"]], "squeezeexcite (class in layers)": [[122, "layers.SqueezeExcite"]], "stochasticreversecomplement (class in layers)": [[122, "layers.StochasticReverseComplement"]], "stochasticshift (class in layers)": [[122, "layers.StochasticShift"]], "switchreverse (class in layers)": [[122, "layers.SwitchReverse"]], "switchreversetriu (class in layers)": [[122, "layers.SwitchReverseTriu"]], "symmetrize2d (class in layers)": [[122, "layers.Symmetrize2D"]], "uppertri (class in layers)": [[122, "layers.UpperTri"]], "wheezeexcite (class in layers)": [[122, "layers.WheezeExcite"]], "_multihead_output() (layers.multiheadattention method)": [[122, "layers.MultiheadAttention._multihead_output"]], "_prepend_dims() (in module layers)": [[122, "layers._prepend_dims"]], "activate() (in module layers)": [[122, "layers.activate"]], "build() (layers.globalcontext method)": [[122, "layers.GlobalContext.build"]], "build() (layers.scale method)": [[122, "layers.Scale.build"]], "build() (layers.softmaxpool1d method)": [[122, "layers.SoftmaxPool1D.build"]], "build() (layers.squeezeexcite method)": [[122, "layers.SqueezeExcite.build"]], "build() (layers.wheezeexcite method)": [[122, "layers.WheezeExcite.build"]], "call() (layers.averageto2d method)": [[122, "layers.AverageTo2D.call"]], "call() (layers.centeraverage method)": [[122, "layers.CenterAverage.call"]], "call() (layers.centerslice method)": [[122, "layers.CenterSlice.call"]], "call() (layers.clip method)": [[122, "layers.Clip.call"]], "call() (layers.concatdist2d method)": [[122, "layers.ConcatDist2D.call"]], "call() (layers.concatposition method)": [[122, "layers.ConcatPosition.call"]], "call() (layers.concatto2d method)": [[122, "layers.ConcatTo2D.call"]], "call() (layers.dotto2d method)": [[122, "layers.DotTo2D.call"]], "call() (layers.ensemblereversecomplement method)": [[122, "layers.EnsembleReverseComplement.call"]], "call() (layers.ensembleshift method)": [[122, "layers.EnsembleShift.call"]], "call() (layers.exp method)": [[122, "layers.Exp.call"]], "call() (layers.factorinverse method)": [[122, "layers.FactorInverse.call"]], "call() (layers.geodotto2d method)": [[122, "layers.GeoDotTo2D.call"]], "call() (layers.globalcontext method)": [[122, "layers.GlobalContext.call"]], "call() (layers.lengthaverage method)": [[122, "layers.LengthAverage.call"]], "call() (layers.maxto2d method)": [[122, "layers.MaxTo2D.call"]], "call() (layers.multiheadattention method)": [[122, "layers.MultiheadAttention.call"]], "call() (layers.onetotwo method)": [[122, "layers.OneToTwo.call"]], "call() (layers.polyrelu method)": [[122, "layers.PolyReLU.call"]], "call() (layers.scale method)": [[122, "layers.Scale.call"]], "call() (layers.softmaxpool1d method)": [[122, "layers.SoftmaxPool1D.call"]], "call() (layers.softplus method)": [[122, "layers.Softplus.call"]], "call() (layers.squeezeexcite method)": [[122, "layers.SqueezeExcite.call"]], "call() (layers.stochasticreversecomplement method)": [[122, "layers.StochasticReverseComplement.call"]], "call() (layers.stochasticshift method)": [[122, "layers.StochasticShift.call"]], "call() (layers.switchreverse method)": [[122, "layers.SwitchReverse.call"]], "call() (layers.switchreversetriu method)": [[122, "layers.SwitchReverseTriu.call"]], "call() (layers.symmetrize2d method)": [[122, "layers.Symmetrize2D.call"]], "call() (layers.uppertri method)": [[122, "layers.UpperTri.call"]], "call() (layers.wheezeexcite method)": [[122, "layers.WheezeExcite.call"]], "gamma_pdf() (in module layers)": [[122, "layers.gamma_pdf"]], "get_config() (layers.centeraverage method)": [[122, "layers.CenterAverage.get_config"]], "get_config() (layers.centerslice method)": [[122, "layers.CenterSlice.get_config"]], "get_config() (layers.clip method)": [[122, "layers.Clip.get_config"]], "get_config() (layers.concatposition method)": [[122, "layers.ConcatPosition.get_config"]], "get_config() (layers.ensembleshift method)": [[122, "layers.EnsembleShift.get_config"]], "get_config() (layers.exp method)": [[122, "layers.Exp.get_config"]], "get_config() (layers.factorinverse method)": [[122, "layers.FactorInverse.get_config"]], "get_config() (layers.multiheadattention method)": [[122, "layers.MultiheadAttention.get_config"]], "get_config() (layers.onetotwo method)": [[122, "layers.OneToTwo.get_config"]], "get_config() (layers.scale method)": [[122, "layers.Scale.get_config"]], "get_config() (layers.softmaxpool1d method)": [[122, "layers.SoftmaxPool1D.get_config"]], "get_config() (layers.softplus method)": [[122, "layers.Softplus.get_config"]], "get_config() (layers.squeezeexcite method)": [[122, "layers.SqueezeExcite.get_config"]], "get_config() (layers.stochasticshift method)": [[122, "layers.StochasticShift.get_config"]], "get_config() (layers.switchreverse method)": [[122, "layers.SwitchReverse.get_config"]], "get_config() (layers.switchreversetriu method)": [[122, "layers.SwitchReverseTriu.get_config"]], "get_config() (layers.uppertri method)": [[122, "layers.UpperTri.get_config"]], "get_config() (layers.wheezeexcite method)": [[122, "layers.WheezeExcite.get_config"]], "get_positional_feature_function() (in module layers)": [[122, "layers.get_positional_feature_function"]], "layers": [[122, "module-layers"]], "positional_features() (in module layers)": [[122, "layers.positional_features"]], "positional_features_all() (in module layers)": [[122, "layers.positional_features_all"]], "positional_features_central_mask() (in module layers)": [[122, "layers.positional_features_central_mask"]], "positional_features_gamma() (in module layers)": [[122, "layers.positional_features_gamma"]], "relative_shift() (in module layers)": [[122, "layers.relative_shift"]], "rope() (in module layers)": [[122, "layers.rope"]], "shift_sequence() (in module layers)": [[122, "layers.shift_sequence"]], "main() (in module make_hg19_mini)": [[123, "make_hg19_mini.main"]], "make_hg19_mini": [[123, "module-make_hg19_mini"]], "assay_succinct() (in module make_targets)": [[124, "make_targets.assay_succinct"]], "main() (in module make_targets)": [[124, "make_targets.main"]], "make_targets": [[124, "module-make_targets"]], "read_meta() (in module make_targets)": [[124, "make_targets.read_meta"]], "meansquarederrorudot (class in metrics)": [[125, "metrics.MeanSquaredErrorUDot"]], "pearsonr (class in metrics)": [[125, "metrics.PearsonR"]], "poissonkl (class in metrics)": [[125, "metrics.PoissonKL"]], "poissonmultinomial (class in metrics)": [[125, "metrics.PoissonMultinomial"]], "r2 (class in metrics)": [[125, "metrics.R2"]], "seqauc (class in metrics)": [[125, "metrics.SeqAUC"]], "interpolate_pr_auc() (metrics.seqauc method)": [[125, "metrics.SeqAUC.interpolate_pr_auc"]], "mean_squared_error_udot() (in module metrics)": [[125, "metrics.mean_squared_error_udot"]], "metrics": [[125, "module-metrics"]], "poisson_kl() (in module metrics)": [[125, "metrics.poisson_kl"]], "poisson_multinomial() (in module metrics)": [[125, "metrics.poisson_multinomial"]], "reset_state() (metrics.pearsonr method)": [[125, "metrics.PearsonR.reset_state"]], "reset_state() (metrics.r2 method)": [[125, "metrics.R2.reset_state"]], "result() (metrics.pearsonr method)": [[125, "metrics.PearsonR.result"]], "result() (metrics.r2 method)": [[125, "metrics.R2.result"]], "result() (metrics.seqauc method)": [[125, "metrics.SeqAUC.result"]], "update_state() (metrics.pearsonr method)": [[125, "metrics.PearsonR.update_state"]], "update_state() (metrics.r2 method)": [[125, "metrics.R2.update_state"]], "update_state() (metrics.seqauc method)": [[125, "metrics.SeqAUC.update_state"]], "_per_target_mean() (in module ops)": [[126, "ops._per_target_mean"]], "_per_target_variance() (in module ops)": [[126, "ops._per_target_variance"]], "adjust_max() (in module ops)": [[126, "ops.adjust_max"]], "ops": [[126, "module-ops"]], "per_target_r2() (in module ops)": [[126, "ops.per_target_r2"]], "r2_averaged_over_all_prediction_tasks() (in module ops)": [[126, "ops.r2_averaged_over_all_prediction_tasks"]], "r2_metric() (in module ops)": [[126, "ops.r2_metric"]], "reverse_complement() (in module ops)": [[126, "ops.reverse_complement"]], "reverse_complement_transform() (in module ops)": [[126, "ops.reverse_complement_transform"]], "variance() (in module ops)": [[126, "ops.variance"]], "convparams (class in params)": [[127, "params.ConvParams"]], "add_cnn_params() (in module params)": [[127, "params.add_cnn_params"]], "add_cnn_params_cnn() (in module params)": [[127, "params.add_cnn_params_cnn"]], "add_cnn_params_dense() (in module params)": [[127, "params.add_cnn_params_dense"]], "add_cnn_params_dres() (in module params)": [[127, "params.add_cnn_params_dres"]], "add_hparams_cnn() (in module params)": [[127, "params.add_hparams_cnn"]], "add_hparams_dres() (in module params)": [[127, "params.add_hparams_dres"]], "layer_extend() (in module params)": [[127, "params.layer_extend"]], "make_hparams() (in module params)": [[127, "params.make_hparams"]], "params": [[127, "module-params"]], "read_job_params() (in module params)": [[127, "params.read_job_params"]], "default_colors (in module plots)": [[128, "plots.default_colors"]], "default_plot_funcs (in module plots)": [[128, "plots.default_plot_funcs"]], "jointplot() (in module plots)": [[128, "plots.jointplot"]], "plot_a() (in module plots)": [[128, "plots.plot_a"]], "plot_c() (in module plots)": [[128, "plots.plot_c"]], "plot_g() (in module plots)": [[128, "plots.plot_g"]], "plot_t() (in module plots)": [[128, "plots.plot_t"]], "plots": [[128, "module-plots"]], "regplot() (in module plots)": [[128, "plots.regplot"]], "scatter_lims() (in module plots)": [[128, "plots.scatter_lims"]], "seqlogo() (in module plots)": [[128, "plots.seqlogo"]], "rnann (class in rnann)": [[129, "rnann.RnaNN"]], "build_ensemble() (rnann.rnann method)": [[129, "rnann.RnaNN.build_ensemble"]], "build_model() (rnann.rnann method)": [[129, "rnann.RnaNN.build_model"]], "evaluate() (rnann.rnann method)": [[129, "rnann.RnaNN.evaluate"]], "gradients() (rnann.rnann method)": [[129, "rnann.RnaNN.gradients"]], "predict() (rnann.rnann method)": [[129, "rnann.RnaNN.predict"]], "restore() (rnann.rnann method)": [[129, "rnann.RnaNN.restore"]], "rnann": [[129, "module-rnann"]], "save() (rnann.rnann method)": [[129, "rnann.RnaNN.save"]], "set_defaults() (rnann.rnann method)": [[129, "rnann.RnaNN.set_defaults"]], "chrsad5 (class in sad5)": [[130, "sad5.ChrSAD5"]], "sad5 (class in sad5)": [[130, "sad5.SAD5"]], "__getitem__() (sad5.sad5 method)": [[130, "sad5.SAD5.__getitem__"]], "fit_cauchy() (sad5.chrsad5 method)": [[130, "sad5.ChrSAD5.fit_cauchy"]], "fit_cauchy() (sad5.sad5 method)": [[130, "sad5.SAD5.fit_cauchy"]], "index_snps() (sad5.chrsad5 method)": [[130, "sad5.ChrSAD5.index_snps"]], "norm_cauchy() (sad5.chrsad5 method)": [[130, "sad5.ChrSAD5.norm_cauchy"]], "norm_cauchy() (sad5.sad5 method)": [[130, "sad5.SAD5.norm_cauchy"]], "open_chr_sad5() (sad5.chrsad5 method)": [[130, "sad5.ChrSAD5.open_chr_sad5"]], "pos() (sad5.sad5 method)": [[130, "sad5.SAD5.pos"]], "retrieve_snp() (sad5.chrsad5 method)": [[130, "sad5.ChrSAD5.retrieve_snp"]], "sad5": [[130, "module-sad5"]], "sad_pct() (sad5.sad5 method)": [[130, "sad5.SAD5.sad_pct"]], "set_population() (sad5.chrsad5 method)": [[130, "sad5.ChrSAD5.set_population"]], "snp_chr_index() (sad5.chrsad5 method)": [[130, "sad5.ChrSAD5.snp_chr_index"]], "snp_index() (sad5.chrsad5 method)": [[130, "sad5.ChrSAD5.snp_index"]], "snp_pos() (sad5.chrsad5 method)": [[130, "sad5.ChrSAD5.snp_pos"]], "snps() (sad5.sad5 method)": [[130, "sad5.SAD5.snps"]], "target_info() (sad5.chrsad5 method)": [[130, "sad5.ChrSAD5.target_info"]], "main() (in module saluki_bench_classify)": [[131, "saluki_bench_classify.main"]], "read_ssd() (in module saluki_bench_classify)": [[131, "saluki_bench_classify.read_ssd"]], "saluki_bench_classify": [[131, "module-saluki_bench_classify"]], "ensemble_ssd() (in module saluki_bench_gtex)": [[132, "saluki_bench_gtex.ensemble_ssd"]], "main() (in module saluki_bench_gtex)": [[132, "saluki_bench_gtex.main"]], "saluki_bench_gtex": [[132, "module-saluki_bench_gtex"]], "main() (in module saluki_bench_gtex_cmp)": [[133, "saluki_bench_gtex_cmp.main"]], "read_auroc() (in module saluki_bench_gtex_cmp)": [[133, "saluki_bench_gtex_cmp.read_auroc"]], "saluki_bench_gtex_cmp": [[133, "module-saluki_bench_gtex_cmp"]], "ttest_alt() (in module saluki_bench_gtex_cmp)": [[133, "saluki_bench_gtex_cmp.ttest_alt"]], "dna_1hot() (in module saluki_grad_fasta)": [[134, "saluki_grad_fasta.dna_1hot"]], "main() (in module saluki_grad_fasta)": [[134, "saluki_grad_fasta.main"]], "parse_fasta() (in module saluki_grad_fasta)": [[134, "saluki_grad_fasta.parse_fasta"]], "saluki_grad_fasta": [[134, "module-saluki_grad_fasta"]], "find_codon_index() (in module saluki_ism_tfr)": [[135, "saluki_ism_tfr.find_codon_index"]], "main() (in module saluki_ism_tfr)": [[135, "saluki_ism_tfr.main"]], "saluki_ism_tfr": [[135, "module-saluki_ism_tfr"]], "satmut_gen() (in module saluki_ism_tfr)": [[135, "saluki_ism_tfr.satmut_gen"]], "ensemble_scores() (in module saluki_ism_tfr_folds)": [[136, "saluki_ism_tfr_folds.ensemble_scores"]], "main() (in module saluki_ism_tfr_folds)": [[136, "saluki_ism_tfr_folds.main"]], "options_string() (in module saluki_ism_tfr_folds)": [[136, "saluki_ism_tfr_folds.options_string"]], "saluki_ism_tfr_folds": [[136, "module-saluki_ism_tfr_folds"]], "valid_h5() (in module saluki_ism_tfr_folds)": [[136, "saluki_ism_tfr_folds.valid_h5"]], "dna_1hot() (in module saluki_predict_fasta)": [[137, "saluki_predict_fasta.dna_1hot"]], "main() (in module saluki_predict_fasta)": [[137, "saluki_predict_fasta.main"]], "parse_fasta() (in module saluki_predict_fasta)": [[137, "saluki_predict_fasta.parse_fasta"]], "saluki_predict_fasta": [[137, "module-saluki_predict_fasta"]], "predstreamgen (class in saluki_ssd)": [[138, "saluki_ssd.PredStreamGen"]], "__getitem__() (saluki_ssd.predstreamgen method)": [[138, "saluki_ssd.PredStreamGen.__getitem__"]], "main() (in module saluki_ssd)": [[138, "saluki_ssd.main"]], "make_dataset() (saluki_ssd.predstreamgen method)": [[138, "saluki_ssd.PredStreamGen.make_dataset"]], "rna_1hot_cds() (in module saluki_ssd)": [[138, "saluki_ssd.rna_1hot_cds"]], "rna_1hot_splice() (in module saluki_ssd)": [[138, "saluki_ssd.rna_1hot_splice"]], "rna_1hot_splice_vikram() (in module saluki_ssd)": [[138, "saluki_ssd.rna_1hot_splice_vikram"]], "saluki_ssd": [[138, "module-saluki_ssd"]], "set_rna_length() (in module saluki_ssd)": [[138, "saluki_ssd.set_rna_length"]], "main() (in module saluki_test)": [[139, "saluki_test.main"]], "saluki_test": [[139, "module-saluki_test"]], "jointplot() (in module saluki_test_folds)": [[140, "saluki_test_folds.jointplot"]], "main() (in module saluki_test_folds)": [[140, "saluki_test_folds.main"]], "read_metrics() (in module saluki_test_folds)": [[140, "saluki_test_folds.read_metrics"]], "saluki_test_folds": [[140, "module-saluki_test_folds"]], "stat_tests() (in module saluki_test_folds)": [[140, "saluki_test_folds.stat_tests"]], "main() (in module saluki_train)": [[141, "saluki_train.main"]], "saluki_train": [[141, "module-saluki_train"]], "main() (in module saluki_train_folds)": [[142, "saluki_train_folds.main"]], "make_rep_data() (in module saluki_train_folds)": [[142, "saluki_train_folds.make_rep_data"]], "options_string() (in module saluki_train_folds)": [[142, "saluki_train_folds.options_string"]], "saluki_train_folds": [[142, "module-saluki_train_folds"]], "main() (in module save_model)": [[143, "save_model.main"]], "save_model": [[143, "module-save_model"]], "seqnn (class in seqnn)": [[144, "seqnn.SeqNN"]], "__call__() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.__call__"]], "build_block() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.build_block"]], "build_embed() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.build_embed"]], "build_ensemble() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.build_ensemble"]], "build_model() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.build_model"]], "build_sad() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.build_sad"]], "build_slice() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.build_slice"]], "downcast() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.downcast"]], "evaluate() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.evaluate"]], "get_bn_layer() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.get_bn_layer"]], "get_conv_layer() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.get_conv_layer"]], "get_conv_weights() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.get_conv_weights"]], "get_dense_layer() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.get_dense_layer"]], "gradients() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.gradients"]], "gradients_func() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.gradients_func"]], "num_targets() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.num_targets"]], "predict() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.predict"]], "restore() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.restore"]], "save() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.save"]], "seqnn": [[144, "module-seqnn"]], "set_defaults() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.set_defaults"]], "step() (seqnn.seqnn method)": [[144, "seqnn.SeqNN.step"]], "seqnnmodel (class in seqnn_util)": [[145, "seqnn_util.SeqNNModel"]], "_gradients_ensemble() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel._gradients_ensemble"]], "_predict_ensemble() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel._predict_ensemble"]], "build_grads() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel.build_grads"]], "build_grads_genes() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel.build_grads_genes"]], "gradients() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel.gradients"]], "gradients_genes() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel.gradients_genes"]], "hidden() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel.hidden"]], "predict_genes() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel.predict_genes"]], "predict_h5() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel.predict_h5"]], "predict_h5_manual() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel.predict_h5_manual"]], "predict_tfr() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel.predict_tfr"]], "running_mean() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel.running_mean"]], "running_varsum() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel.running_varsum"]], "seqnn_util": [[145, "module-seqnn_util"]], "test_h5() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel.test_h5"]], "test_h5_manual() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel.test_h5_manual"]], "test_tfr() (seqnn_util.seqnnmodel method)": [[145, "seqnn_util.SeqNNModel.test_tfr"]], "main() (in module seqs_hdf5)": [[146, "seqs_hdf5.main"]], "seqs_hdf5": [[146, "module-seqs_hdf5"]], "license (in module setup)": [[147, "setup.license"]], "readme (in module setup)": [[147, "setup.readme"]], "setup": [[147, "module-setup"]], "main() (in module sonnet_bench_gtex)": [[148, "sonnet_bench_gtex.main"]], "sonnet_bench_gtex": [[148, "module-sonnet_bench_gtex"]], "bigwig_open() (in module sonnet_predict_bed)": [[149, "sonnet_predict_bed.bigwig_open"]], "bigwig_write() (in module sonnet_predict_bed)": [[149, "sonnet_predict_bed.bigwig_write"]], "main() (in module sonnet_predict_bed)": [[149, "sonnet_predict_bed.main"]], "sonnet_predict_bed": [[149, "module-sonnet_predict_bed"]], "main() (in module sonnet_sad)": [[150, "sonnet_sad.main"]], "sonnet_sad": [[150, "module-sonnet_sad"]], "collect_h5() (in module sonnet_sad_multi)": [[151, "sonnet_sad_multi.collect_h5"]], "job_completed() (in module sonnet_sad_multi)": [[151, "sonnet_sad_multi.job_completed"]], "main() (in module sonnet_sad_multi)": [[151, "sonnet_sad_multi.main"]], "sonnet_sad_multi": [[151, "module-sonnet_sad_multi"]], "main() (in module sonnet_sat_bed)": [[152, "sonnet_sat_bed.main"]], "sonnet_sat_bed": [[152, "module-sonnet_sat_bed"]], "collect_h5() (in module sonnet_sat_bed_multi)": [[153, "sonnet_sat_bed_multi.collect_h5"]], "job_completed() (in module sonnet_sat_bed_multi)": [[153, "sonnet_sat_bed_multi.job_completed"]], "main() (in module sonnet_sat_bed_multi)": [[153, "sonnet_sat_bed_multi.main"]], "sonnet_sat_bed_multi": [[153, "module-sonnet_sat_bed_multi"]], "main() (in module sonnet_sat_vcf)": [[154, "sonnet_sat_vcf.main"]], "sonnet_sat_vcf": [[154, "module-sonnet_sat_vcf"]], "input_gradients() (in module sonnet_satg_bed)": [[155, "sonnet_satg_bed.input_gradients"]], "main() (in module sonnet_satg_bed)": [[155, "sonnet_satg_bed.main"]], "sonnet_satg_bed": [[155, "module-sonnet_satg_bed"]], "unaugment_grads() (in module sonnet_satg_bed)": [[155, "sonnet_satg_bed.unaugment_grads"]], "main() (in module sonnet_sed)": [[156, "sonnet_sed.main"]], "sonnet_sed": [[156, "module-sonnet_sed"]], "collect_h5() (in module sonnet_sed_multi)": [[157, "sonnet_sed_multi.collect_h5"]], "job_completed() (in module sonnet_sed_multi)": [[157, "sonnet_sed_multi.job_completed"]], "main() (in module sonnet_sed_multi)": [[157, "sonnet_sed_multi.main"]], "sonnet_sed_multi": [[157, "module-sonnet_sed_multi"]], "predgradstream (class in stream)": [[158, "stream.PredGradStream"]], "predstream (class in stream)": [[158, "stream.PredStream"]], "predstreamfeed (class in stream)": [[158, "stream.PredStreamFeed"]], "__getitem__() (stream.predgradstream method)": [[158, "stream.PredGradStream.__getitem__"]], "__getitem__() (stream.predstream method)": [[158, "stream.PredStream.__getitem__"]], "__getitem__() (stream.predstreamfeed method)": [[158, "stream.PredStreamFeed.__getitem__"]], "make_dataset() (stream.predstream method)": [[158, "stream.PredStream.make_dataset"]], "stream": [[158, "module-stream"]], "testaugmentation (class in test_augment)": [[159, "test_augment.TestAugmentation"]], "make_data_op() (in module test_augment)": [[159, "test_augment.make_data_op"]], "setupclass() (test_augment.testaugmentation class method)": [[159, "test_augment.TestAugmentation.setUpClass"]], "test_augment": [[159, "module-test_augment"]], "test_deterministic() (test_augment.testaugmentation method)": [[159, "test_augment.TestAugmentation.test_deterministic"]], "test_stochastic() (test_augment.testaugmentation method)": [[159, "test_augment.TestAugmentation.test_stochastic"]], "modelseq (in module test_data)": [[160, "test_data.ModelSeq"]], "testdata (class in test_data)": [[160, "test_data.TestData"]], "file_to_records() (in module test_data)": [[160, "test_data.file_to_records"]], "parse_proto() (in module test_data)": [[160, "test_data.parse_proto"]], "read_seq_coords() (in module test_data)": [[160, "test_data.read_seq_coords"]], "read_tfrecords() (test_data.testdata method)": [[160, "test_data.TestData.read_tfrecords"]], "setupclass() (test_data.testdata class method)": [[160, "test_data.TestData.setUpClass"]], "test_data": [[160, "module-test_data"]], "test_output() (test_data.testdata method)": [[160, "test_data.TestData.test_output"]], "test_seqs() (test_data.testdata method)": [[160, "test_data.TestData.test_seqs"]], "test_targets() (test_data.testdata method)": [[160, "test_data.TestData.test_targets"]], "modelseq (in module test_data2)": [[161, "test_data2.ModelSeq"]], "testdata (class in test_data2)": [[161, "test_data2.TestData"]], "file_to_records() (in module test_data2)": [[161, "test_data2.file_to_records"]], "parse_proto() (in module test_data2)": [[161, "test_data2.parse_proto"]], "read_seq_coords() (in module test_data2)": [[161, "test_data2.read_seq_coords"]], "read_tfrecords() (test_data2.testdata method)": [[161, "test_data2.TestData.read_tfrecords"]], "setupclass() (test_data2.testdata class method)": [[161, "test_data2.TestData.setUpClass"]], "test_data2": [[161, "module-test_data2"]], "test_output() (test_data2.testdata method)": [[161, "test_data2.TestData.test_output"]], "test_seqs() (test_data2.testdata method)": [[161, "test_data2.TestData.test_seqs"]], "test_targets() (test_data2.testdata method)": [[161, "test_data2.TestData.test_targets"]], "testaugment (class in test_dna_io)": [[162, "test_dna_io.TestAugment"]], "testdelete (class in test_dna_io)": [[162, "test_dna_io.TestDelete"]], "testinsert (class in test_dna_io)": [[162, "test_dna_io.TestInsert"]], "testrc (class in test_dna_io)": [[162, "test_dna_io.TestRC"]], "test_augment() (test_dna_io.testaugment method)": [[162, "test_dna_io.TestAugment.test_augment"]], "test_dna_io": [[162, "module-test_dna_io"]], "test_insert() (test_dna_io.testdelete method)": [[162, "test_dna_io.TestDelete.test_insert"]], "test_insert() (test_dna_io.testinsert method)": [[162, "test_dna_io.TestInsert.test_insert"]], "test_rc() (test_dna_io.testrc method)": [[162, "test_dna_io.TestRC.test_rc"]], "testgenesh5 (class in test_gene)": [[163, "test_gene.TestGenesH5"]], "setupclass() (test_gene.testgenesh5 class method)": [[163, "test_gene.TestGenesH5.setUpClass"]], "test_gene": [[163, "module-test_gene"]], "test_seqs() (test_gene.testgenesh5 method)": [[163, "test_gene.TestGenesH5.test_seqs"]], "test_targets() (test_gene.testgenesh5 method)": [[163, "test_gene.TestGenesH5.test_targets"]], "testsad (class in test_sad)": [[164, "test_sad.TestSAD"]], "testsadref (class in test_sad)": [[164, "test_sad.TestSadRef"]], "setupclass() (test_sad.testsad class method)": [[164, "test_sad.TestSAD.setUpClass"]], "setupclass() (test_sad.testsadref class method)": [[164, "test_sad.TestSadRef.setUpClass"]], "test_cluster() (test_sad.testsadref method)": [[164, "test_sad.TestSadRef.test_cluster"]], "test_get_1hots() (test_sad.testsadref method)": [[164, "test_sad.TestSadRef.test_get_1hots"]], "test_misorder() (test_sad.testsadref method)": [[164, "test_sad.TestSadRef.test_misorder"]], "test_misref() (test_sad.testsadref method)": [[164, "test_sad.TestSadRef.test_misref"]], "test_multi() (test_sad.testsad method)": [[164, "test_sad.TestSAD.test_multi"]], "test_multi() (test_sad.testsadref method)": [[164, "test_sad.TestSadRef.test_multi"]], "test_run() (test_sad.testsadref method)": [[164, "test_sad.TestSadRef.test_run"]], "test_sad": [[164, "module-test_sad"]], "test_sad() (test_sad.testsad method)": [[164, "test_sad.TestSAD.test_sad"]], "test_usad() (test_sad.testsad method)": [[164, "test_sad.TestSAD.test_usad"]], "testsatmut (class in test_sat)": [[165, "test_sat.TestSatMut"]], "setupclass() (test_sat.testsatmut class method)": [[165, "test_sat.TestSatMut.setUpClass"]], "test_bed() (test_sat.testsatmut method)": [[165, "test_sat.TestSatMut.test_bed"]], "test_sat": [[165, "module-test_sat"]], "testsed (class in test_sed)": [[166, "test_sed.TestSED"]], "setupclass() (test_sed.testsed class method)": [[166, "test_sed.TestSED.setUpClass"]], "test_sed": [[166, "module-test_sed"]], "test_sed() (test_sed.testsed method)": [[166, "test_sed.TestSED.test_sed"]], "testtest (class in test_test)": [[167, "test_test.TestTest"]], "setupclass() (test_test.testtest class method)": [[167, "test_test.TestTest.setUpClass"]], "test_test": [[167, "module-test_test"]], "test_train() (test_test.testtest method)": [[167, "test_test.TestTest.test_train"]], "testtrain (class in test_train)": [[168, "test_train.TestTrain"]], "setupclass() (test_train.testtrain class method)": [[168, "test_train.TestTrain.setUpClass"]], "test_train": [[168, "module-test_train"]], "test_train() (test_train.testtrain method)": [[168, "test_train.TestTrain.test_train"]], "testtrain (class in test_train_full)": [[169, "test_train_full.TestTrain"]], "setupclass() (test_train_full.testtrain class method)": [[169, "test_train_full.TestTrain.setUpClass"]], "test_train() (test_train_full.testtrain method)": [[169, "test_train_full.TestTrain.test_train"]], "test_train_full": [[169, "module-test_train_full"]], "main() (in module tfr_bw)": [[170, "tfr_bw.main"]], "make_next_op() (in module tfr_bw)": [[170, "tfr_bw.make_next_op"]], "parse_proto() (in module tfr_bw)": [[170, "tfr_bw.parse_proto"]], "tfr_bw": [[170, "module-tfr_bw"]], "file_to_records() (in module tfr_hdf5)": [[171, "tfr_hdf5.file_to_records"]], "main() (in module tfr_hdf5)": [[171, "tfr_hdf5.main"]], "parse_proto() (in module tfr_hdf5)": [[171, "tfr_hdf5.parse_proto"]], "read_tfr() (in module tfr_hdf5)": [[171, "tfr_hdf5.read_tfr"]], "tfr_hdf5": [[171, "module-tfr_hdf5"]], "file_to_records() (in module tfr_qc)": [[172, "tfr_qc.file_to_records"]], "main() (in module tfr_qc)": [[172, "tfr_qc.main"]], "parse_proto() (in module tfr_qc)": [[172, "tfr_qc.parse_proto"]], "plot_distr() (in module tfr_qc)": [[172, "tfr_qc.plot_distr"]], "read_tfr() (in module tfr_qc)": [[172, "tfr_qc.read_tfr"]], "tfr_qc": [[172, "module-tfr_qc"]], "num_files_to_parallel_interleave (in module tfrecord_batcher)": [[173, "tfrecord_batcher.NUM_FILES_TO_PARALLEL_INTERLEAVE"]], "shuffle_buffer_depth_per_file (in module tfrecord_batcher)": [[173, "tfrecord_batcher.SHUFFLE_BUFFER_DEPTH_PER_FILE"]], "tfrecordbatcher (class in tfrecord_batcher)": [[173, "tfrecord_batcher.TFRecordBatcher"]], "initialize() (tfrecord_batcher.tfrecordbatcher method)": [[173, "tfrecord_batcher.TFRecordBatcher.initialize"]], "make_data_ops() (in module tfrecord_batcher)": [[173, "tfrecord_batcher.make_data_ops"]], "make_input_fn() (in module tfrecord_batcher)": [[173, "tfrecord_batcher.make_input_fn"]], "next() (tfrecord_batcher.tfrecordbatcher method)": [[173, "tfrecord_batcher.TFRecordBatcher.next"]], "num_possible_augmentations() (in module tfrecord_batcher)": [[173, "tfrecord_batcher.num_possible_augmentations"]], "order_tfrecords() (in module tfrecord_batcher)": [[173, "tfrecord_batcher.order_tfrecords"]], "reset() (tfrecord_batcher.tfrecordbatcher method)": [[173, "tfrecord_batcher.TFRecordBatcher.reset"]], "tfrecord_batcher": [[173, "module-tfrecord_batcher"]], "tfrecord_dataset() (in module tfrecord_batcher)": [[173, "tfrecord_batcher.tfrecord_dataset"]], "tfrecord_dataset_multi() (in module tfrecord_batcher)": [[173, "tfrecord_batcher.tfrecord_dataset_multi"]], "cyclical1learningrate (class in trainer)": [[174, "trainer.Cyclical1LearningRate"]], "earlystoppingmin (class in trainer)": [[174, "trainer.EarlyStoppingMin"]], "trainer (class in trainer)": [[174, "trainer.Trainer"]], "warmup (class in trainer)": [[174, "trainer.WarmUp"]], "__call__() (trainer.cyclical1learningrate method)": [[174, "trainer.Cyclical1LearningRate.__call__"]], "__call__() (trainer.warmup method)": [[174, "trainer.WarmUp.__call__"]], "adaptive_clip_grad() (in module trainer)": [[174, "trainer.adaptive_clip_grad"]], "compile() (trainer.trainer method)": [[174, "trainer.Trainer.compile"]], "compute_norm() (in module trainer)": [[174, "trainer.compute_norm"]], "fit2() (trainer.trainer method)": [[174, "trainer.Trainer.fit2"]], "fit_keras() (trainer.trainer method)": [[174, "trainer.Trainer.fit_keras"]], "fit_tape() (trainer.trainer method)": [[174, "trainer.Trainer.fit_tape"]], "get_config() (trainer.cyclical1learningrate method)": [[174, "trainer.Cyclical1LearningRate.get_config"]], "get_config() (trainer.warmup method)": [[174, "trainer.WarmUp.get_config"]], "make_optimizer() (trainer.trainer method)": [[174, "trainer.Trainer.make_optimizer"]], "on_epoch_end() (trainer.earlystoppingmin method)": [[174, "trainer.EarlyStoppingMin.on_epoch_end"]], "parse_loss() (in module trainer)": [[174, "trainer.parse_loss"]], "safe_next() (in module trainer)": [[174, "trainer.safe_next"]], "trainer": [[174, "module-trainer"]], "unitwise_norm() (in module trainer)": [[174, "trainer.unitwise_norm"]], "main() (in module unmappable_bed)": [[175, "unmappable_bed.main"]], "unmappable_bed": [[175, "module-unmappable_bed"]], "main() (in module upgrade_tf1)": [[176, "upgrade_tf1.main"]], "upgrade_tf1": [[176, "module-upgrade_tf1"]], "exec_par() (in module util)": [[177, "util.exec_par"]], "util": [[177, "module-util"]], "snp (class in vcf)": [[178, "vcf.SNP"]], "__str__() (vcf.snp method)": [[178, "vcf.SNP.__str__"]], "cap_allele() (in module vcf)": [[178, "vcf.cap_allele"]], "dna_length_1hot() (in module vcf)": [[178, "vcf.dna_length_1hot"]], "flip_alleles() (vcf.snp method)": [[178, "vcf.SNP.flip_alleles"]], "get_alleles() (vcf.snp method)": [[178, "vcf.SNP.get_alleles"]], "intersect_seqs_snps() (in module vcf)": [[178, "vcf.intersect_seqs_snps"]], "intersect_snps_seqs() (in module vcf)": [[178, "vcf.intersect_snps_seqs"]], "longest_alt() (vcf.snp method)": [[178, "vcf.SNP.longest_alt"]], "snp_seq1() (in module vcf)": [[178, "vcf.snp_seq1"]], "snps2_seq1() (in module vcf)": [[178, "vcf.snps2_seq1"]], "snps_seq1() (in module vcf)": [[178, "vcf.snps_seq1"]], "vcf": [[178, "module-vcf"]], "vcf_count() (in module vcf)": [[178, "vcf.vcf_count"]], "vcf_snps() (in module vcf)": [[178, "vcf.vcf_snps"]], "vcf_sort() (in module vcf)": [[178, "vcf.vcf_sort"]]}})