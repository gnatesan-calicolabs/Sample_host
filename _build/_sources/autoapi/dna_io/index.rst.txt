:py:mod:`dna_io`
================

.. py:module:: dna_io


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   dna_io.dna_1hot
   dna_io.dna_1hot_index
   dna_io.hot1_augment
   dna_io.hot1_delete
   dna_io.hot1_dna
   dna_io.hot1_get
   dna_io.hot1_insert
   dna_io.hot1_rc
   dna_io.hot1_set
   dna_io.dna_rc



.. py:function:: dna_1hot(seq, seq_len=None, n_uniform=False, n_sample=False)

   dna_1hot

   Args:
     seq:       nucleotide sequence.
     seq_len:   length to extend/trim sequences to.
     n_uniform: represent N's as 0.25, forcing float16,
     n_sample:  sample ACGT for N

   Returns:
     seq_code: length by nucleotides array representation.


.. py:function:: dna_1hot_index(seq, n_sample=False)

   dna_1hot_index

   Args:
     seq:       nucleotide sequence.

   Returns:
     seq_code:  index int array representation.


.. py:function:: hot1_augment(Xb, fwdrc=True, shift=0)

   Transform a batch of one hot coded sequences to augment training.

   Args:
     Xb:     Batch x Length x 4 array
     fwdrc:  Boolean representing forward versus reverse complement strand.
     shift:  Integer shift

   Returns:
     Xbt:    Transformed version of Xb


.. py:function:: hot1_delete(seq_1hot, pos, delete_len, pad_value=None)

   hot1_delete

   Delete "delete_len" nucleotides starting at
    position "pos" in the Lx4 array "seq_1hot".


.. py:function:: hot1_dna(seqs_1hot)

   Convert 1-hot coded sequences to ACGTN. 


.. py:function:: hot1_get(seqs_1hot, pos)

   hot1_get

   Return the nucleotide corresponding to the one hot coding
   of position "pos" in the Lx4 array seqs_1hot.


.. py:function:: hot1_insert(seq_1hot, pos, insert_seq)

   hot1_insert

   Insert "insert_seq" at position "pos" in the Lx4 array "seq_1hot".


.. py:function:: hot1_rc(seqs_1hot)

   Reverse complement a batch of one hot coded sequences,
   while being robust to additional tracks beyond the four
   nucleotides. 


.. py:function:: hot1_set(seq_1hot, pos, nt)

   hot1_set

   Set position "pos" in the Lx4 array "seqs_1hot"
   to nucleotide "nt".


.. py:function:: dna_rc(seq)


