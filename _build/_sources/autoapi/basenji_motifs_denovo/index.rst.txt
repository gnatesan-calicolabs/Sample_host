:py:mod:`basenji_motifs_denovo`
===============================

.. py:module:: basenji_motifs_denovo


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   basenji_motifs_denovo.main
   basenji_motifs_denovo.annotate_motifs
   basenji_motifs_denovo.fasta_pwm
   basenji_motifs_denovo.info_content
   basenji_motifs_denovo.meme_add
   basenji_motifs_denovo.meme_intro
   basenji_motifs_denovo.cluster_leiden
   basenji_motifs_denovo.end_align_fasta
   basenji_motifs_denovo.extend_intervals
   basenji_motifs_denovo.filter_features
   basenji_motifs_denovo.filter_seqlets
   basenji_motifs_denovo.make_feature_fasta
   basenji_motifs_denovo.make_negative_fasta
   basenji_motifs_denovo.nearest_neighbors
   basenji_motifs_denovo.plot_kernel
   basenji_motifs_denovo.plot_logo
   basenji_motifs_denovo.process_feature
   basenji_motifs_denovo.process_factor
   basenji_motifs_denovo.read_preds
   basenji_motifs_denovo.run_dreme
   basenji_motifs_denovo.run_homer
   basenji_motifs_denovo.write_factor
   basenji_motifs_denovo.write_msa



Attributes
~~~~~~~~~~

.. autoapisummary::

   basenji_motifs_denovo.Interval


.. py:function:: main()


.. py:function:: annotate_motifs(motifs_dir, background_fasta, meme_db)


.. py:function:: fasta_pwm(motif_fasta_file)


.. py:function:: info_content(pwm, transpose=False, bg_gc=0.415)

   Compute PWM information content.


.. py:function:: meme_add(motifs_meme_out, motif_fasta_file, motif_label, trim_filters=True)

   Print a filter to the growing MEME file
   Attrs:
       motifs_meme_out : open file
       f (int) : filter index #
       filter_pwm (array) : filter PWM array


.. py:function:: meme_intro(motifs_meme_out, background_fasta)


.. py:function:: cluster_leiden(seq_nn, resolution=2)


.. py:function:: end_align_fasta(seqlets_fasta, msa_fasta, shift=1, pwm_iter=1, epochs=2)

   Align seqlets in a FASTA file, allowing only end gaps.


.. py:function:: extend_intervals(seqlet_intervals, seqlet_length)


.. py:function:: filter_features(act, min_var=1e-06, return_mask=False, verbose=False)

   Filter uninformative features with no values or zero variance. 


.. py:function:: filter_seqlets(seqlet_acts, seqlet_intervals, genome_fasta_file, end_distance=100, verbose=True)

   Filter seqlets by valid chromosome coordinates. 


.. py:function:: make_feature_fasta(seqlet_feature, seqlet_dna, feature_fasta_file, max_pct=0.666)

   Write FASTA file of high-scoring seqlets for some feature. 


.. py:function:: make_negative_fasta(seqlet_intervals, seqlet_dna, negatives_fasta_file, max_seqs=16384)

   Write sampled seqlets as motif negatives.


.. py:function:: nearest_neighbors(X, neighbors=16, threads=1)


.. py:function:: plot_kernel(kernel_weights, out_pdf)


.. py:function:: plot_logo(seqlet_acts, seqlet_dna, out_prefix, align_seqlets_shift=0)


.. py:function:: process_feature(seqlet_acts, seqlet_dna, kernel_weights, out_prefix, background_fasta, align_seqlets_shift, meme_db=None)

   Perform all analyses on one feature.


.. py:function:: process_factor(seqlet_H, seqlet_W, seqlet_dna, feature_mask, out_prefix, background_fasta, align_seqlets_shift, meme_db=None)

   Perform all analyses on one factor.


.. py:function:: read_preds(predict_h5_file, range_step=1, verbose=True)

   Read predictions output by basenji_predict_bed.py 


.. py:function:: run_dreme(seqlet_acts, seqlet_dna, out_prefix, background_fasta, meme_db)


.. py:function:: run_homer(seqlet_acts, seqlet_dna, out_prefix, background_fasta)


.. py:function:: write_factor(factor_coef, feature_mask, out_file)

   Write NMF factor in light of feature_mask. 


.. py:function:: write_msa(msa_1hot, fasta_file)

   Write a multiple sequence alignment, stored as a numpy
   array with NaN for gaps, to FASTA.


.. py:data:: Interval

   

