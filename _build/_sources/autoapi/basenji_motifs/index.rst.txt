:py:mod:`basenji_motifs`
========================

.. py:module:: basenji_motifs


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   basenji_motifs.main
   basenji_motifs.get_motif_proteins
   basenji_motifs.info_content
   basenji_motifs.make_filter_pwm
   basenji_motifs.meme_add
   basenji_motifs.meme_intro
   basenji_motifs.name_filters
   basenji_motifs.plot_target_corr
   basenji_motifs.plot_filter_seq_heat
   basenji_motifs.plot_filter_seg_heat
   basenji_motifs.filter_motif
   basenji_motifs.filter_possum
   basenji_motifs.plot_filter_heat
   basenji_motifs.plot_filter_logo
   basenji_motifs.plot_score_density



Attributes
~~~~~~~~~~

.. autoapisummary::

   basenji_motifs.weblogo_opts


.. py:data:: weblogo_opts
   :value: '-X NO -Y NO --errorbars NO --fineprint ""'

   

.. py:function:: main()


.. py:function:: get_motif_proteins(meme_db_file)

   Hash motif_id's to protein names using the MEME DB file 


.. py:function:: info_content(pwm, transpose=False, bg_gc=0.415)

   Compute PWM information content.

   In the original analysis, I used a bg_gc=0.5. For any
   future analysis, I ought to switch to the true hg38
   value of 0.415.


.. py:function:: make_filter_pwm(filter_fasta)

   Make a PWM for this filter from its top hits 


.. py:function:: meme_add(meme_out, f, filter_pwm, nsites, trim_filters=False)

   Print a filter to the growing MEME file

   Attrs:
       meme_out : open file
       f (int) : filter index #
       filter_pwm (array) : filter PWM array
       nsites (int) : number of filter sites


.. py:function:: meme_intro(meme_file, seqs)

   Open MEME motif format file and print intro

   Attrs:
       meme_file (str) : filename
       seqs [str] : list of strings for obtaining background freqs

   Returns:
       mem_out : open MEME file


.. py:function:: name_filters(num_filters, tomtom_file, meme_db_file)

   Name the filters using Tomtom matches.

   Attrs:
       num_filters (int) : total number of filters
       tomtom_file (str) : filename of Tomtom output table.
       meme_db_file (str) : filename of MEME db

   Returns:
       filter_names [str] :


.. py:function:: plot_target_corr(filter_outs, seq_targets, filter_names, target_names, out_pdf, seq_op='mean')


.. py:function:: plot_filter_seq_heat(filter_outs, out_pdf, whiten=True, drop_dead=True)


.. py:function:: plot_filter_seg_heat(filter_outs, out_pdf, whiten=True, drop_dead=True)


.. py:function:: filter_motif(param_matrix)


.. py:function:: filter_possum(param_matrix, motif_id, possum_file, trim_filters=False, mult=200)


.. py:function:: plot_filter_heat(param_matrix, out_pdf)


.. py:function:: plot_filter_logo(filter_outs, filter_size, seqs, out_prefix, maxpct_t=None, raw_t=0)


.. py:function:: plot_score_density(f_scores, out_pdf)


