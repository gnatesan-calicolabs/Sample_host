:py:mod:`sad5`
==============

.. py:module:: sad5


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   sad5.SAD5
   sad5.ChrSAD5




.. py:class:: SAD5(sad_h5_file, sad_key='SAD', compute_norm=True, recompute_norm=False)

   .. py:method:: __getitem__(si_ti)

      Return normalized scores for the given SNP and target indexes.


   .. py:method:: fit_cauchy(sample=131072)

      Fit target-specific Cauchy distributions, and save to HDF5


   .. py:method:: norm_cauchy(target_sets=['CAGE'])

      Compute normalizing Cauchy distribution parameters within
      target sets, and save to HDF5.


   .. py:method:: pos(snp_i)


   .. py:method:: sad_pct(sad)


   .. py:method:: snps()



.. py:class:: ChrSAD5(sad_h5_path, population='EUR', index_chr=False, **sad5_kw_args)

   .. py:method:: fit_cauchy(sample=131072)

      Fit target-specific Cauchy distributions, and save to HDF5


   .. py:method:: index_snps()

      Hash RSID's to HDF5 index.


   .. py:method:: norm_cauchy(target_sets=['CAGE'])

      Compute normalizing Cauchy distribution parameters within
      target sets, and save to HDF5.


   .. py:method:: open_chr_sad5(**sad5_kw_args)


   .. py:method:: retrieve_snp(snp_id, chrm, pos, ld_t=0.1)


   .. py:method:: set_population(population)


   .. py:method:: snp_chr_index(snp_id)


   .. py:method:: snp_index(snp_id)


   .. py:method:: snp_pos(snp_i, chrm)


   .. py:method:: target_info()



