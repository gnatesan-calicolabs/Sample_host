:py:mod:`params`
================

.. py:module:: params


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   params.ConvParams



Functions
~~~~~~~~~

.. autoapisummary::

   params.layer_extend
   params.read_job_params
   params.make_hparams
   params.add_hparams_cnn
   params.add_hparams_dres
   params.add_cnn_params
   params.add_cnn_params_cnn
   params.add_cnn_params_dense
   params.add_cnn_params_dres



.. py:function:: layer_extend(var, default, layers)

   Process job input to extend for the proper number of layers.


.. py:function:: read_job_params(job_file, require=[])

   Read job parameters from text table.


.. py:function:: make_hparams(job, num_worker_replicas=None, num_ps_replicas=None)

   Convert the parsed job args to an params object.

   Args:
     job: a dictionary of parsed parameters.
       See `basenji.google.params.read_job_params` for more information.
     num_worker_replicas: the number of worker replicas, e.g.
       http://google3/learning/brain/contrib/learn/learn.borg?l=112&rcl=174372550
     num_ps_replicas: the number of ps replicas, e.g.
       http://google3/learning/brain/contrib/learn/learn.borg?l=113&rcl=174372550


.. py:function:: add_hparams_cnn(params, job)

   Add CNN hyper-parameters for a standard verbose CNN definition.


.. py:function:: add_hparams_dres(params, job)

   Add CNN hyper-parameters for a dilated residual network.


.. py:function:: add_cnn_params(params)

   Define CNN params list.


.. py:function:: add_cnn_params_cnn(params)

   Layer-by-layer CNN parameter mode.


.. py:function:: add_cnn_params_dense(params)

   Dense resnet parameter mode.

   Consists of four phases:
    (1) DNA - Initial layer to interact directly with DNA sequence.
    (2) Reduce - Convolution blocks to reduce the sequence length.
    (3) Dense Dilate - Densely connected dilated convolutions to
                       propagate information across the sequence.
    (4) Final - Final convolution before transforming to predictions.

    Returns:
      [ConvParams]


.. py:function:: add_cnn_params_dres(params)

   Dilated resnet parameter mode.

   Consists of four phases:
    (1) DNA - Initial layer to interact directly with DNA sequence.
    (2) Reduce - Convolution blocks to reduce the sequence length.
    (3) Dilate - Residual dilated convolutions to propagate information
                  across the sequence.
    (4) Final - Final convolution before transforming to predictions.

    Returns:
      [ConvParams]


.. py:class:: ConvParams

   Bases: :py:obj:`collections.namedtuple`\ (\ :py:obj:`'ConvParams'`\ , [\ :py:obj:`'filters'`\ , :py:obj:`'filter_size'`\ , :py:obj:`'stride'`\ , :py:obj:`'pool'`\ , :py:obj:`'dilation'`\ , :py:obj:`'dropout'`\ , :py:obj:`'skip_layers'`\ , :py:obj:`'concat'`\ ]\ )

   Convolution block parameters.

   Args:
     filters: number of convolution filters.
     filter_size: convolution filter size.
     stride: convolution stride.
     pool: max pool width.
     dilation: convolution dilation rate.
     dropout: dropout rate.
     skip_layers: add block result to preceding layer.
     concat: concat block result to preceding layer.


